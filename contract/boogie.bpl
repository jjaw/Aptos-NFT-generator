
// ** Expanded prelude

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Basic theory for vectors using arrays. This version of vectors is not extensional.

datatype Vec<T> {
    Vec(v: [int]T, l: int)
}

function {:builtin "MapConst"} MapConstVec<T>(T): [int]T;
function DefaultVecElem<T>(): T;
function {:inline} DefaultVecMap<T>(): [int]T { MapConstVec(DefaultVecElem()) }

function {:inline} EmptyVec<T>(): Vec T {
    Vec(DefaultVecMap(), 0)
}

function {:inline} MakeVec1<T>(v: T): Vec T {
    Vec(DefaultVecMap()[0 := v], 1)
}

function {:inline} MakeVec2<T>(v1: T, v2: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2], 2)
}

function {:inline} MakeVec3<T>(v1: T, v2: T, v3: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3], 3)
}

function {:inline} MakeVec4<T>(v1: T, v2: T, v3: T, v4: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3][3 := v4], 4)
}

function {:inline} ExtendVec<T>(v: Vec T, elem: T): Vec T {
    (var l := v->l;
    Vec(v->v[l := elem], l + 1))
}

function {:inline} ReadVec<T>(v: Vec T, i: int): T {
    v->v[i]
}

function {:inline} LenVec<T>(v: Vec T): int {
    v->l
}

function {:inline} IsEmptyVec<T>(v: Vec T): bool {
    v->l == 0
}

function {:inline} RemoveVec<T>(v: Vec T): Vec T {
    (var l := v->l - 1;
    Vec(v->v[l := DefaultVecElem()], l))
}

function {:inline} RemoveAtVec<T>(v: Vec T, i: int): Vec T {
    (var l := v->l - 1;
    Vec(
        (lambda j: int ::
           if j >= 0 && j < l then
               if j < i then v->v[j] else v->v[j+1]
           else DefaultVecElem()),
        l))
}

function {:inline} ConcatVec<T>(v1: Vec T, v2: Vec T): Vec T {
    (var l1, m1, l2, m2 := v1->l, v1->v, v2->l, v2->v;
    Vec(
        (lambda i: int ::
          if i >= 0 && i < l1 + l2 then
            if i < l1 then m1[i] else m2[i - l1]
          else DefaultVecElem()),
        l1 + l2))
}

function {:inline} ReverseVec<T>(v: Vec T): Vec T {
    (var l := v->l;
    Vec(
        (lambda i: int :: if 0 <= i && i < l then v->v[l - i - 1] else DefaultVecElem()),
        l))
}

function {:inline} SliceVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v->v;
    Vec(
        (lambda k:int ::
          if 0 <= k && k < j - i then
            m[i + k]
          else
            DefaultVecElem()),
        (if j - i < 0 then 0 else j - i)))
}


function {:inline} UpdateVec<T>(v: Vec T, i: int, elem: T): Vec T {
    Vec(v->v[i := elem], v->l)
}

function {:inline} SwapVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v->v;
    Vec(m[i := m[j]][j := m[i]], v->l))
}

function {:inline} ContainsVec<T>(v: Vec T, e: T): bool {
    (var l := v->l;
    (exists i: int :: InRangeVec(v, i) && v->v[i] == e))
}

function IndexOfVec<T>(v: Vec T, e: T): int;
axiom {:ctor "Vec"} (forall<T> v: Vec T, e: T :: {IndexOfVec(v, e)}
    (var i := IndexOfVec(v,e);
     if (!ContainsVec(v, e)) then i == -1
     else InRangeVec(v, i) && ReadVec(v, i) == e &&
        (forall j: int :: j >= 0 && j < i ==> ReadVec(v, j) != e)));

// This function should stay non-inlined as it guards many quantifiers
// over vectors. It appears important to have this uninterpreted for
// quantifier triggering.
function InRangeVec<T>(v: Vec T, i: int): bool {
    i >= 0 && i < LenVec(v)
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Boogie model for multisets, based on Boogie arrays. This theory assumes extensional equality for element types.

datatype Multiset<T> {
    Multiset(v: [T]int, l: int)
}

function {:builtin "MapConst"} MapConstMultiset<T>(l: int): [T]int;

function {:inline} EmptyMultiset<T>(): Multiset T {
    Multiset(MapConstMultiset(0), 0)
}

function {:inline} LenMultiset<T>(s: Multiset T): int {
    s->l
}

function {:inline} ExtendMultiset<T>(s: Multiset T, v: T): Multiset T {
    (var len := s->l;
    (var cnt := s->v[v];
    Multiset(s->v[v := (cnt + 1)], len + 1)))
}

// This function returns (s1 - s2). This function assumes that s2 is a subset of s1.
function {:inline} SubtractMultiset<T>(s1: Multiset T, s2: Multiset T): Multiset T {
    (var len1 := s1->l;
    (var len2 := s2->l;
    Multiset((lambda v:T :: s1->v[v]-s2->v[v]), len1-len2)))
}

function {:inline} IsEmptyMultiset<T>(s: Multiset T): bool {
    (s->l == 0) &&
    (forall v: T :: s->v[v] == 0)
}

function {:inline} IsSubsetMultiset<T>(s1: Multiset T, s2: Multiset T): bool {
    (s1->l <= s2->l) &&
    (forall v: T :: s1->v[v] <= s2->v[v])
}

function {:inline} ContainsMultiset<T>(s: Multiset T, v: T): bool {
    s->v[v] > 0
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Theory for tables.

// v is the SMT array holding the key-value assignment. e is an array which
// independently determines whether a key is valid or not. l is the length.
//
// Note that even though the program cannot reflect over existence of a key,
// we want the specification to be able to do this, so it can express
// verification conditions like "key has been inserted".
datatype Table <K, V> {
    Table(v: [K]V, e: [K]bool, l: int)
}

// Functions for default SMT arrays. For the table values, we don't care and
// use an uninterpreted function.
function DefaultTableArray<K, V>(): [K]V;
function DefaultTableKeyExistsArray<K>(): [K]bool;
axiom DefaultTableKeyExistsArray() == (lambda i: int :: false);

function {:inline} EmptyTable<K, V>(): Table K V {
    Table(DefaultTableArray(), DefaultTableKeyExistsArray(), 0)
}

function {:inline} GetTable<K,V>(t: Table K V, k: K): V {
    // Notice we do not check whether key is in the table. The result is undetermined if it is not.
    t->v[k]
}

function {:inline} LenTable<K,V>(t: Table K V): int {
    t->l
}


function {:inline} ContainsTable<K,V>(t: Table K V, k: K): bool {
    t->e[k]
}

function {:inline} UpdateTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    Table(t->v[k := v], t->e, t->l)
}

function {:inline} AddTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    // This function has an undetermined result if the key is already in the table
    // (all specification functions have this "partial definiteness" behavior). Thus we can
    // just increment the length.
    Table(t->v[k := v], t->e[k := true], t->l + 1)
}

function {:inline} RemoveTable<K,V>(t: Table K V, k: K): Table K V {
    // Similar as above, we only need to consider the case where the key is in the table.
    Table(t->v, t->e[k := false], t->l - 1)
}

axiom {:ctor "Table"} (forall<K,V> t: Table K V :: {LenTable(t)}
    (exists k: K :: {ContainsTable(t, k)} ContainsTable(t, k)) ==> LenTable(t) >= 1
);
// TODO: we might want to encoder a stronger property that the length of table
// must be more than N given a set of N items. Currently we don't see a need here
// and the above axiom seems to be sufficient.
// Copyright Â© Aptos Foundation
// SPDX-License-Identifier: Apache-2.0

// ==================================================================================
// Native object::exists_at


datatype $1_cmp_Ordering {
    $1_cmp_Ordering_Less(),
    $1_cmp_Ordering_Equal(),
    $1_cmp_Ordering_Greater()
}
function $IsValid'$1_cmp_Ordering_Less'(s: $1_cmp_Ordering): bool {
    true
}
function $IsValid'$1_cmp_Ordering_Equal'(s: $1_cmp_Ordering): bool {
    true
}
function $IsValid'$1_cmp_Ordering_Greater'(s: $1_cmp_Ordering): bool {
    true
}
function $IsValid'$1_cmp_Ordering'(s: $1_cmp_Ordering): bool {
    true
}
function {:inline} $IsEqual'$1_cmp_Ordering'(s1: $1_cmp_Ordering, s2: $1_cmp_Ordering): bool {
    s1 == s2
}

function $Arbitrary_value_of'$1_cmp_Ordering'(): $1_cmp_Ordering;

function {:inline} $1_cmp_$compare'bool'(s1: bool, s2: bool): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if s1 == true then $1_cmp_Ordering_Greater()
    else
        $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bool'(s1: bool, s2: bool) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bool'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'signer'(s1: $signer, s2: $signer): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if s1 is $signer && s2 is $permissioned_signer then $1_cmp_Ordering_Less()
    else if s1 is $permissioned_signer && s2 is $signer then $1_cmp_Ordering_Greater()
    else if s1 is $signer then
        $compare_int(s1 -> $addr, s2 -> $addr)
    else if s1 -> $addr == s2 -> $addr then
        $compare_int(s1 -> $permission_addr, s2 -> $permission_addr)
    else
        $compare_int(s1 -> $addr, s2 -> $addr)
}

procedure {:inline 1} $1_cmp_compare'signer'(s1: $signer, s2: $signer) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'signer'(s1, s2);
    return;
}

function $compare_int(s1: int, s2: int): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if s1 > s2 then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

function {:inline} $1_cmp_$compare'num'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}

procedure {:inline 1} $1_cmp_compare'num'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'int'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}

procedure {:inline 1} $1_cmp_compare'int'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv8'(s1: bv8, s2: bv8): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv8'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv8'(s1: bv8, s2: bv8) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv8'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv16'(s1: bv16, s2: bv16): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv16'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv16'(s1: bv16, s2: bv16) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv16'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv32'(s1: bv32, s2: bv32): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv32'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv32'(s1: bv32, s2: bv32) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv32'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv64'(s1: bv64, s2: bv64): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv64'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv64'(s1: bv64, s2: bv64) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv64'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv128'(s1: bv128, s2: bv128): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv128'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv128'(s1: bv128, s2: bv128) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv128'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv256'(s1: bv256, s2: bv256): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv256'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv256'(s1: bv256, s2: bv256) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv256'(s1, s2);
    return;
}function {:inline} $1_cmp_$compare'address'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}


procedure {:inline 1} $1_cmp_compare'address'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}function {:inline} $1_cmp_$compare'u256'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}


procedure {:inline 1} $1_cmp_compare'u256'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}function {:inline} $1_cmp_$compare'u64'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}


procedure {:inline 1} $1_cmp_compare'u64'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}function {:inline} $1_cmp_$compare'u8'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}


procedure {:inline 1} $1_cmp_compare'u8'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}




// ==================================================================================
// Intrinsic implementation of aggregator_v2 for element type `u64`


datatype $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'($value: int, $max_value: int)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u64''_value(s: $1_aggregator_v2_Aggregator'u64', x: int): $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'(x, s->$max_value)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u64''_max_value(s: $1_aggregator_v2_Aggregator'u64', x: int): $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'(s->$value, x)
}
function $IsValid'$1_aggregator_v2_Aggregator'u64''(s: $1_aggregator_v2_Aggregator'u64'): bool {
    $IsValid'u64'(s->$value)
      && $IsValid'u64'(s->$max_value)
}
function {:inline} $IsEqual'$1_aggregator_v2_Aggregator'u64''(s1: $1_aggregator_v2_Aggregator'u64', s2: $1_aggregator_v2_Aggregator'u64'): bool {
    $IsEqual'u64'(s1->$value, s2->$value)
      && $IsEqual'u64'(s1->$max_value, s2->$max_value)
}

procedure {:inline 1} $1_aggregator_v2_create_unbounded_aggregator'u64'() returns (res: $1_aggregator_v2_Aggregator'u64')
{
    res := $1_aggregator_v2_Aggregator'u64'(0, $MAX_U64);
    }


    procedure {:inline 1} $1_aggregator_v2_create_aggregator'u64'($max_value: int) returns (res: $1_aggregator_v2_Aggregator'u64')
    {
        res := $1_aggregator_v2_Aggregator'u64'(0, $max_value);
        }


    procedure {:inline 1} $1_aggregator_v2_try_add'u64'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u64'), value: int) returns (res: bool, aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u64'))
    {
        if ($Dereference(aggregator)->$max_value < value + $Dereference(aggregator)->$value) {
            res := false;
            aggregator_updated:= aggregator;
        } else {
            res := true;
            aggregator_updated:= $UpdateMutation(aggregator, $1_aggregator_v2_Aggregator'u64'(value + $Dereference(aggregator)->$value, $Dereference(aggregator)->$max_value));
        }
        }

    procedure {:inline 1} $1_aggregator_v2_try_sub'u64'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u64'), value: int) returns (res: bool, aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u64'))
    {
        if ($Dereference(aggregator)->$value < value) {
            res := false;
            aggregator_updated:= aggregator;
            return;
        } else {
            res := true;
            aggregator_updated:= $UpdateMutation(aggregator, $1_aggregator_v2_Aggregator'u64'($Dereference(aggregator)->$value - value, $Dereference(aggregator)->$max_value));
            return;
        }
        }

    procedure {:inline 1} $1_aggregator_v2_add'u64'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u64'), value: int) returns (aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u64'))
    {
       var try_result: bool;
       var try_aggregator: $Mutation $1_aggregator_v2_Aggregator'u64';
       call try_result, try_aggregator := $1_aggregator_v2_try_add'u64'(aggregator, value);
       if (!try_result) {
           call $ExecFailureAbort();
           return;
       }
       aggregator_updated := try_aggregator;
       return;
       }

   procedure {:inline 1} $1_aggregator_v2_sub'u64'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u64'), value: int) returns (aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u64'))
   {
       var try_result: bool;
          var try_aggregator: $Mutation $1_aggregator_v2_Aggregator'u64';
          call try_result, try_aggregator := $1_aggregator_v2_try_sub'u64'(aggregator, value);
          if (!try_result) {
              call $ExecFailureAbort();
              return;
          }
          aggregator_updated := try_aggregator;
         return;
       }

   procedure {:inline 1} $1_aggregator_v2_read'u64'(aggregator: $1_aggregator_v2_Aggregator'u64') returns (res: int) {
       res := aggregator->$value;
       }

   procedure {:inline 1} $1_aggregator_v2_max_value'u64'(aggregator: $1_aggregator_v2_Aggregator'u64') returns (res: int) {
       res := aggregator->$max_value;
       }

   procedure {:inline 1} $1_aggregator_v2_is_at_least_impl'u64'(aggregator: $1_aggregator_v2_Aggregator'u64', min_amount: int) returns (res: bool)
   {
       res := aggregator->$value >= min_amount;
          return;
       }

function {:inline} $1_aggregator_v2_spec_get_value'u64'(s: $1_aggregator_v2_Aggregator'u64'): int {
    s->$value
}

function {:inline} $1_aggregator_v2_spec_get_max_value'u64'(s: $1_aggregator_v2_Aggregator'u64'): int {
    s->$max_value
}

function {:inline} $1_aggregator_v2_$read'u64'(s: $1_aggregator_v2_Aggregator'u64'): int {
    s->$value
}

function {:inline} $1_aggregator_v2_$is_at_least_impl'u64'(aggregator: $1_aggregator_v2_Aggregator'u64', min_amount: int): bool
   {
       aggregator->$value >= min_amount
   }
function {:inline} $1_cmp_$compare'$1_aggregator_v2_Aggregator'u64''(s1: $1_aggregator_v2_Aggregator'u64', s2: $1_aggregator_v2_Aggregator'u64'): $1_cmp_Ordering {
    $Arbitrary_value_of'$1_cmp_Ordering'()
}

procedure {:inline 1} $1_cmp_compare'$1_aggregator_v2_Aggregator'u64''(s1: $1_aggregator_v2_Aggregator'u64', s2: $1_aggregator_v2_Aggregator'u64') returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'$1_aggregator_v2_Aggregator'u64''(s1, s2);
    return;
}

// ==================================================================================
// Intrinsic implementation of aggregator and aggregator factory

datatype $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle: int, $key: int, $limit: int, $val: int)
}
function {:inline} $Update'$1_aggregator_Aggregator'_handle(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(x, s->$key, s->$limit, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_key(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, x, s->$limit, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_limit(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, s->$key, x, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_val(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, s->$key, s->$limit, x)
}
function $IsValid'$1_aggregator_Aggregator'(s: $1_aggregator_Aggregator): bool {
    $IsValid'address'(s->$handle)
      && $IsValid'address'(s->$key)
      && $IsValid'u128'(s->$limit)
      && $IsValid'u128'(s->$val)
}
function {:inline} $IsEqual'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator): bool {
    s1 == s2
}
function {:inline} $1_aggregator_spec_get_limit(s: $1_aggregator_Aggregator): int {
    s->$limit
}
function {:inline} $1_aggregator_limit(s: $1_aggregator_Aggregator): int {
    s->$limit
}
procedure {:inline 1} $1_aggregator_limit(s: $1_aggregator_Aggregator) returns (res: int) {
    res := s->$limit;
    return;
}
function {:inline} $1_aggregator_spec_get_handle(s: $1_aggregator_Aggregator): int {
    s->$handle
}
function {:inline} $1_aggregator_spec_get_key(s: $1_aggregator_Aggregator): int {
    s->$key
}
function {:inline} $1_aggregator_spec_get_val(s: $1_aggregator_Aggregator): int {
    s->$val
}

function $1_aggregator_spec_read(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_spec_aggregator_set_val(agg: $1_aggregator_Aggregator, val: int): $1_aggregator_Aggregator {
    $Update'$1_aggregator_Aggregator'_val(agg, val)
}

function $1_aggregator_spec_aggregator_get_val(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_factory_spec_new_aggregator(limit: int) : $1_aggregator_Aggregator;

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
    (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_get_limit(agg) == limit));

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
     (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_aggregator_get_val(agg) == 0));


function {:inline} $1_cmp_$compare'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator): $1_cmp_Ordering {
    $Arbitrary_value_of'$1_cmp_Ordering'()
}

procedure {:inline 1} $1_cmp_compare'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'$1_aggregator_Aggregator'(s1, s2);
    return;
}


// ==================================================================================
// Native for function_info

procedure $1_function_info_is_identifier(s: Vec int) returns (res: bool);



// Uninterpreted function for all types


function $Arbitrary_value_of'#0'(): #0;



function $Arbitrary_value_of'$1_account_Account'(): $1_account_Account;



function $Arbitrary_value_of'$1_account_AccountPermission'(): $1_account_AccountPermission;



function $Arbitrary_value_of'$1_account_CapabilityOffer'$1_account_RotationCapability''(): $1_account_CapabilityOffer'$1_account_RotationCapability';



function $Arbitrary_value_of'$1_account_CapabilityOffer'$1_account_SignerCapability''(): $1_account_CapabilityOffer'$1_account_SignerCapability';



function $Arbitrary_value_of'$1_account_SignerCapability'(): $1_account_SignerCapability;



function $Arbitrary_value_of'$1_aggregator_v2_Aggregator'u64''(): $1_aggregator_v2_Aggregator'u64';



function $Arbitrary_value_of'$1_aggregator_v2_AggregatorSnapshot'u64''(): $1_aggregator_v2_AggregatorSnapshot'u64';



function $Arbitrary_value_of'$1_aggregator_v2_DerivedStringSnapshot'(): $1_aggregator_v2_DerivedStringSnapshot;



function $Arbitrary_value_of'$1_chain_status_GenesisEndMarker'(): $1_chain_status_GenesisEndMarker;



function $Arbitrary_value_of'$1_event_EventHandle'$1_account_CoinRegisterEvent''(): $1_event_EventHandle'$1_account_CoinRegisterEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$1_account_KeyRotationEvent''(): $1_event_EventHandle'$1_account_KeyRotationEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$1_object_TransferEvent''(): $1_event_EventHandle'$1_object_TransferEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$4_collection_BurnEvent''(): $1_event_EventHandle'$4_collection_BurnEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$4_collection_MintEvent''(): $1_event_EventHandle'$4_collection_MintEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$4_collection_MutationEvent''(): $1_event_EventHandle'$4_collection_MutationEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$4_token_MutationEvent''(): $1_event_EventHandle'$4_token_MutationEvent';



function $Arbitrary_value_of'$1_features_Features'(): $1_features_Features;



function $Arbitrary_value_of'$1_guid_GUID'(): $1_guid_GUID;



function $Arbitrary_value_of'$1_guid_ID'(): $1_guid_ID;



function $Arbitrary_value_of'$1_object_ConstructorRef'(): $1_object_ConstructorRef;



function $Arbitrary_value_of'$1_object_LinearTransferRef'(): $1_object_LinearTransferRef;



function $Arbitrary_value_of'$1_object_Object'$1_object_ObjectCore''(): $1_object_Object'$1_object_ObjectCore';



function $Arbitrary_value_of'$1_object_Object'$4_collection_Collection''(): $1_object_Object'$4_collection_Collection';



function $Arbitrary_value_of'$1_object_ObjectCore'(): $1_object_ObjectCore;



function $Arbitrary_value_of'$1_object_TombStone'(): $1_object_TombStone;



function $Arbitrary_value_of'$1_object_Transfer'(): $1_object_Transfer;



function $Arbitrary_value_of'$1_object_TransferEvent'(): $1_object_TransferEvent;



function $Arbitrary_value_of'$1_object_TransferRef'(): $1_object_TransferRef;



function $Arbitrary_value_of'$1_object_Untransferable'(): $1_object_Untransferable;



function $Arbitrary_value_of'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(): $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'';



function $Arbitrary_value_of'$1_option_Option'$1_string_String''(): $1_option_Option'$1_string_String';



function $Arbitrary_value_of'$1_option_Option'$4_collection_ConcurrentSupply''(): $1_option_Option'$4_collection_ConcurrentSupply';



function $Arbitrary_value_of'$1_option_Option'$4_royalty_Royalty''(): $1_option_Option'$4_royalty_Royalty';



function $Arbitrary_value_of'$1_option_Option'address''(): $1_option_Option'address';



function $Arbitrary_value_of'$1_option_Option'vec'u8'''(): $1_option_Option'vec'u8'';



function $Arbitrary_value_of'$1_permissioned_signer_GrantedPermissionHandles'(): $1_permissioned_signer_GrantedPermissionHandles;



function $Arbitrary_value_of'$1_permissioned_signer_PermissionStorage'(): $1_permissioned_signer_PermissionStorage;



function $Arbitrary_value_of'$1_randomness_PerBlockRandomness'(): $1_randomness_PerBlockRandomness;



function $Arbitrary_value_of'$1_randomness_RandomnessGeneratedEvent'(): $1_randomness_RandomnessGeneratedEvent;



function $Arbitrary_value_of'$1_reconfiguration_Configuration'(): $1_reconfiguration_Configuration;



function $Arbitrary_value_of'$1_string_String'(): $1_string_String;



function $Arbitrary_value_of'$1_timestamp_CurrentTimeMicroseconds'(): $1_timestamp_CurrentTimeMicroseconds;



function $Arbitrary_value_of'$1_type_info_TypeInfo'(): $1_type_info_TypeInfo;



function $Arbitrary_value_of'$4_collection_Collection'(): $4_collection_Collection;



function $Arbitrary_value_of'$4_collection_ConcurrentSupply'(): $4_collection_ConcurrentSupply;



function $Arbitrary_value_of'$4_collection_FixedSupply'(): $4_collection_FixedSupply;



function $Arbitrary_value_of'$4_collection_Mint'(): $4_collection_Mint;



function $Arbitrary_value_of'$4_collection_MintEvent'(): $4_collection_MintEvent;



function $Arbitrary_value_of'$4_collection_UnlimitedSupply'(): $4_collection_UnlimitedSupply;



function $Arbitrary_value_of'$4_royalty_Royalty'(): $4_royalty_Royalty;



function $Arbitrary_value_of'$4_token_Token'(): $4_token_Token;



function $Arbitrary_value_of'$4_token_TokenIdentifiers'(): $4_token_TokenIdentifiers;



function $Arbitrary_value_of'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'(): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection;



function $Arbitrary_value_of'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'(): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;



function $Arbitrary_value_of'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent'(): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent;



function $Arbitrary_value_of'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData;



function $Arbitrary_value_of'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'(): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs;



function $Arbitrary_value_of'signer'(): $signer;



function $Arbitrary_value_of'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(): Table int ($1_permissioned_signer_StoredPermission);



function $Arbitrary_value_of'vec'#0''(): Vec (#0);



function $Arbitrary_value_of'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(): Vec ($1_aggregator_v2_AggregatorSnapshot'u64');



function $Arbitrary_value_of'vec'$1_string_String''(): Vec ($1_string_String);



function $Arbitrary_value_of'vec'$4_collection_ConcurrentSupply''(): Vec ($4_collection_ConcurrentSupply);



function $Arbitrary_value_of'vec'$4_royalty_Royalty''(): Vec ($4_royalty_Royalty);



function $Arbitrary_value_of'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''(): Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);



function $Arbitrary_value_of'vec'vec'u8'''(): Vec (Vec (int));



function $Arbitrary_value_of'vec'address''(): Vec (int);



function $Arbitrary_value_of'vec'u64''(): Vec (int);



function $Arbitrary_value_of'vec'u8''(): Vec (int);



function $Arbitrary_value_of'bool'(): bool;



function $Arbitrary_value_of'address'(): int;



function $Arbitrary_value_of'u256'(): int;



function $Arbitrary_value_of'u64'(): int;



function $Arbitrary_value_of'u8'(): int;



function $Arbitrary_value_of'vec'vec'bv8'''(): Vec (Vec (bv8));



function $Arbitrary_value_of'vec'bv64''(): Vec (bv64);



function $Arbitrary_value_of'vec'bv8''(): Vec (bv8);



function $Arbitrary_value_of'bv256'(): bv256;



function $Arbitrary_value_of'bv64'(): bv64;



function $Arbitrary_value_of'bv8'(): bv8;




// ============================================================================================
// Primitive Types

const $MAX_U8: int;
axiom $MAX_U8 == 255;
const $MAX_U16: int;
axiom $MAX_U16 == 65535;
const $MAX_U32: int;
axiom $MAX_U32 == 4294967295;
const $MAX_U64: int;
axiom $MAX_U64 == 18446744073709551615;
const $MAX_U128: int;
axiom $MAX_U128 == 340282366920938463463374607431768211455;
const $MAX_U256: int;
axiom $MAX_U256 == 115792089237316195423570985008687907853269984665640564039457584007913129639935;

// Templates for bitvector operations

function {:bvbuiltin "bvand"} $And'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvor"} $Or'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvxor"} $Xor'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvadd"} $Add'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvsub"} $Sub'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvmul"} $Mul'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvudiv"} $Div'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvurem"} $Mod'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvshl"} $Shl'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvlshr"} $Shr'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvult"} $Lt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv8'(bv8,bv8) returns(bool);

procedure {:inline 1} $AddBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Add'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $AddBv8_unchecked(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $SubBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv8'(src1, src2);
}

procedure {:inline 1} $MulBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Mul'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv8'(src1, src2);
}

procedure {:inline 1} $DivBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv8'(src1, src2);
}

procedure {:inline 1} $ModBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv8'(src1, src2);
}

procedure {:inline 1} $AndBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $And'Bv8'(src1,src2);
}

procedure {:inline 1} $OrBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Or'Bv8'(src1,src2);
}

procedure {:inline 1} $XorBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Xor'Bv8'(src1,src2);
}

procedure {:inline 1} $LtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Lt'Bv8'(src1,src2);
}

procedure {:inline 1} $LeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Le'Bv8'(src1,src2);
}

procedure {:inline 1} $GtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Gt'Bv8'(src1,src2);
}

procedure {:inline 1} $GeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Ge'Bv8'(src1,src2);
}

function $IsValid'bv8'(v: bv8): bool {
  $Ge'Bv8'(v,0bv8) && $Le'Bv8'(v,255bv8)
}

function {:inline} $IsEqual'bv8'(x: bv8, y: bv8): bool {
    x == y
}

procedure {:inline 1} $int2bv8(src: int) returns (dst: bv8)
{
    if (src > 255) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.8(src);
}

procedure {:inline 1} $bv2int8(src: bv8) returns (dst: int)
{
    dst := $bv2int.8(src);
}

function {:builtin "(_ int2bv 8)"} $int2bv.8(i: int) returns (bv8);
function {:builtin "bv2nat"} $bv2int.8(i: bv8) returns (int);

function {:bvbuiltin "bvand"} $And'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvor"} $Or'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvxor"} $Xor'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvadd"} $Add'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvsub"} $Sub'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvmul"} $Mul'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvudiv"} $Div'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvurem"} $Mod'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvshl"} $Shl'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvlshr"} $Shr'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvult"} $Lt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv16'(bv16,bv16) returns(bool);

procedure {:inline 1} $AddBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Add'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $AddBv16_unchecked(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $SubBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv16'(src1, src2);
}

procedure {:inline 1} $MulBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Mul'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv16'(src1, src2);
}

procedure {:inline 1} $DivBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv16'(src1, src2);
}

procedure {:inline 1} $ModBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv16'(src1, src2);
}

procedure {:inline 1} $AndBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $And'Bv16'(src1,src2);
}

procedure {:inline 1} $OrBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Or'Bv16'(src1,src2);
}

procedure {:inline 1} $XorBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Xor'Bv16'(src1,src2);
}

procedure {:inline 1} $LtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Lt'Bv16'(src1,src2);
}

procedure {:inline 1} $LeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Le'Bv16'(src1,src2);
}

procedure {:inline 1} $GtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Gt'Bv16'(src1,src2);
}

procedure {:inline 1} $GeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Ge'Bv16'(src1,src2);
}

function $IsValid'bv16'(v: bv16): bool {
  $Ge'Bv16'(v,0bv16) && $Le'Bv16'(v,65535bv16)
}

function {:inline} $IsEqual'bv16'(x: bv16, y: bv16): bool {
    x == y
}

procedure {:inline 1} $int2bv16(src: int) returns (dst: bv16)
{
    if (src > 65535) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.16(src);
}

procedure {:inline 1} $bv2int16(src: bv16) returns (dst: int)
{
    dst := $bv2int.16(src);
}

function {:builtin "(_ int2bv 16)"} $int2bv.16(i: int) returns (bv16);
function {:builtin "bv2nat"} $bv2int.16(i: bv16) returns (int);

function {:bvbuiltin "bvand"} $And'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvor"} $Or'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvxor"} $Xor'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvadd"} $Add'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvsub"} $Sub'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvmul"} $Mul'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvudiv"} $Div'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvurem"} $Mod'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvshl"} $Shl'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvlshr"} $Shr'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvult"} $Lt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv32'(bv32,bv32) returns(bool);

procedure {:inline 1} $AddBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Add'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $AddBv32_unchecked(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $SubBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv32'(src1, src2);
}

procedure {:inline 1} $MulBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Mul'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv32'(src1, src2);
}

procedure {:inline 1} $DivBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv32'(src1, src2);
}

procedure {:inline 1} $ModBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv32'(src1, src2);
}

procedure {:inline 1} $AndBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $And'Bv32'(src1,src2);
}

procedure {:inline 1} $OrBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Or'Bv32'(src1,src2);
}

procedure {:inline 1} $XorBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Xor'Bv32'(src1,src2);
}

procedure {:inline 1} $LtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Lt'Bv32'(src1,src2);
}

procedure {:inline 1} $LeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Le'Bv32'(src1,src2);
}

procedure {:inline 1} $GtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Gt'Bv32'(src1,src2);
}

procedure {:inline 1} $GeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Ge'Bv32'(src1,src2);
}

function $IsValid'bv32'(v: bv32): bool {
  $Ge'Bv32'(v,0bv32) && $Le'Bv32'(v,2147483647bv32)
}

function {:inline} $IsEqual'bv32'(x: bv32, y: bv32): bool {
    x == y
}

procedure {:inline 1} $int2bv32(src: int) returns (dst: bv32)
{
    if (src > 2147483647) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.32(src);
}

procedure {:inline 1} $bv2int32(src: bv32) returns (dst: int)
{
    dst := $bv2int.32(src);
}

function {:builtin "(_ int2bv 32)"} $int2bv.32(i: int) returns (bv32);
function {:builtin "bv2nat"} $bv2int.32(i: bv32) returns (int);

function {:bvbuiltin "bvand"} $And'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvor"} $Or'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvxor"} $Xor'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvadd"} $Add'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvsub"} $Sub'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvmul"} $Mul'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvudiv"} $Div'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvurem"} $Mod'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvshl"} $Shl'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvlshr"} $Shr'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvult"} $Lt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv64'(bv64,bv64) returns(bool);

procedure {:inline 1} $AddBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Add'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $AddBv64_unchecked(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $SubBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv64'(src1, src2);
}

procedure {:inline 1} $MulBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Mul'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv64'(src1, src2);
}

procedure {:inline 1} $DivBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv64'(src1, src2);
}

procedure {:inline 1} $ModBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv64'(src1, src2);
}

procedure {:inline 1} $AndBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $And'Bv64'(src1,src2);
}

procedure {:inline 1} $OrBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Or'Bv64'(src1,src2);
}

procedure {:inline 1} $XorBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Xor'Bv64'(src1,src2);
}

procedure {:inline 1} $LtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Lt'Bv64'(src1,src2);
}

procedure {:inline 1} $LeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Le'Bv64'(src1,src2);
}

procedure {:inline 1} $GtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Gt'Bv64'(src1,src2);
}

procedure {:inline 1} $GeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Ge'Bv64'(src1,src2);
}

function $IsValid'bv64'(v: bv64): bool {
  $Ge'Bv64'(v,0bv64) && $Le'Bv64'(v,18446744073709551615bv64)
}

function {:inline} $IsEqual'bv64'(x: bv64, y: bv64): bool {
    x == y
}

procedure {:inline 1} $int2bv64(src: int) returns (dst: bv64)
{
    if (src > 18446744073709551615) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.64(src);
}

procedure {:inline 1} $bv2int64(src: bv64) returns (dst: int)
{
    dst := $bv2int.64(src);
}

function {:builtin "(_ int2bv 64)"} $int2bv.64(i: int) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (int);

function {:bvbuiltin "bvand"} $And'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvor"} $Or'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvxor"} $Xor'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvadd"} $Add'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvsub"} $Sub'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvmul"} $Mul'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvudiv"} $Div'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvurem"} $Mod'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvshl"} $Shl'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvlshr"} $Shr'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvult"} $Lt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv128'(bv128,bv128) returns(bool);

procedure {:inline 1} $AddBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Add'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $AddBv128_unchecked(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $SubBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv128'(src1, src2);
}

procedure {:inline 1} $MulBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Mul'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv128'(src1, src2);
}

procedure {:inline 1} $DivBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv128'(src1, src2);
}

procedure {:inline 1} $ModBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv128'(src1, src2);
}

procedure {:inline 1} $AndBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $And'Bv128'(src1,src2);
}

procedure {:inline 1} $OrBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Or'Bv128'(src1,src2);
}

procedure {:inline 1} $XorBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Xor'Bv128'(src1,src2);
}

procedure {:inline 1} $LtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Lt'Bv128'(src1,src2);
}

procedure {:inline 1} $LeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Le'Bv128'(src1,src2);
}

procedure {:inline 1} $GtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Gt'Bv128'(src1,src2);
}

procedure {:inline 1} $GeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Ge'Bv128'(src1,src2);
}

function $IsValid'bv128'(v: bv128): bool {
  $Ge'Bv128'(v,0bv128) && $Le'Bv128'(v,340282366920938463463374607431768211455bv128)
}

function {:inline} $IsEqual'bv128'(x: bv128, y: bv128): bool {
    x == y
}

procedure {:inline 1} $int2bv128(src: int) returns (dst: bv128)
{
    if (src > 340282366920938463463374607431768211455) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.128(src);
}

procedure {:inline 1} $bv2int128(src: bv128) returns (dst: int)
{
    dst := $bv2int.128(src);
}

function {:builtin "(_ int2bv 128)"} $int2bv.128(i: int) returns (bv128);
function {:builtin "bv2nat"} $bv2int.128(i: bv128) returns (int);

function {:bvbuiltin "bvand"} $And'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvor"} $Or'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvxor"} $Xor'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvadd"} $Add'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvsub"} $Sub'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvmul"} $Mul'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvudiv"} $Div'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvurem"} $Mod'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvshl"} $Shl'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvlshr"} $Shr'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvult"} $Lt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv256'(bv256,bv256) returns(bool);

procedure {:inline 1} $AddBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Add'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $AddBv256_unchecked(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $SubBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv256'(src1, src2);
}

procedure {:inline 1} $MulBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Mul'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv256'(src1, src2);
}

procedure {:inline 1} $DivBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv256'(src1, src2);
}

procedure {:inline 1} $ModBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv256'(src1, src2);
}

procedure {:inline 1} $AndBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $And'Bv256'(src1,src2);
}

procedure {:inline 1} $OrBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Or'Bv256'(src1,src2);
}

procedure {:inline 1} $XorBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Xor'Bv256'(src1,src2);
}

procedure {:inline 1} $LtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Lt'Bv256'(src1,src2);
}

procedure {:inline 1} $LeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Le'Bv256'(src1,src2);
}

procedure {:inline 1} $GtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Gt'Bv256'(src1,src2);
}

procedure {:inline 1} $GeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Ge'Bv256'(src1,src2);
}

function $IsValid'bv256'(v: bv256): bool {
  $Ge'Bv256'(v,0bv256) && $Le'Bv256'(v,115792089237316195423570985008687907853269984665640564039457584007913129639935bv256)
}

function {:inline} $IsEqual'bv256'(x: bv256, y: bv256): bool {
    x == y
}

procedure {:inline 1} $int2bv256(src: int) returns (dst: bv256)
{
    if (src > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.256(src);
}

procedure {:inline 1} $bv2int256(src: bv256) returns (dst: int)
{
    dst := $bv2int.256(src);
}

function {:builtin "(_ int2bv 256)"} $int2bv.256(i: int) returns (bv256);
function {:builtin "bv2nat"} $bv2int.256(i: bv256) returns (int);

datatype $Range {
    $Range(lb: int, ub: int)
}

function {:inline} $IsValid'bool'(v: bool): bool {
  true
}

function $IsValid'u8'(v: int): bool {
  v >= 0 && v <= $MAX_U8
}

function $IsValid'u16'(v: int): bool {
  v >= 0 && v <= $MAX_U16
}

function $IsValid'u32'(v: int): bool {
  v >= 0 && v <= $MAX_U32
}

function $IsValid'u64'(v: int): bool {
  v >= 0 && v <= $MAX_U64
}

function $IsValid'u128'(v: int): bool {
  v >= 0 && v <= $MAX_U128
}

function $IsValid'u256'(v: int): bool {
  v >= 0 && v <= $MAX_U256
}

function $IsValid'num'(v: int): bool {
  true
}

function $IsValid'address'(v: int): bool {
  // TODO: restrict max to representable addresses?
  v >= 0
}

function {:inline} $IsValidRange(r: $Range): bool {
   $IsValid'u64'(r->lb) &&  $IsValid'u64'(r->ub)
}

// Intentionally not inlined so it serves as a trigger in quantifiers.
function $InRange(r: $Range, i: int): bool {
   r->lb <= i && i < r->ub
}


function {:inline} $IsEqual'u8'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u16'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u32'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u64'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u128'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u256'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'num'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'address'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'bool'(x: bool, y: bool): bool {
    x == y
}

// ============================================================================================
// Memory

datatype $Location {
    // A global resource location within the statically known resource type's memory,
    // where `a` is an address.
    $Global(a: int),
    // A local location. `i` is the unique index of the local.
    $Local(i: int),
    // The location of a reference outside of the verification scope, for example, a `&mut` parameter
    // of the function being verified. References with these locations don't need to be written back
    // when mutation ends.
    $Param(i: int),
    // The location of an uninitialized mutation. Using this to make sure that the location
    // will not be equal to any valid mutation locations, i.e., $Local, $Global, or $Param.
    $Uninitialized()
}

// A mutable reference which also carries its current value. Since mutable references
// are single threaded in Move, we can keep them together and treat them as a value
// during mutation until the point they are stored back to their original location.
datatype $Mutation<T> {
    $Mutation(l: $Location, p: Vec int, v: T)
}

// Representation of memory for a given type.
datatype $Memory<T> {
    $Memory(domain: [int]bool, contents: [int]T)
}

function {:builtin "MapConst"} $ConstMemoryDomain(v: bool): [int]bool;
function {:builtin "MapConst"} $ConstMemoryContent<T>(v: T): [int]T;
axiom $ConstMemoryDomain(false) == (lambda i: int :: false);
axiom $ConstMemoryDomain(true) == (lambda i: int :: true);


// Dereferences a mutation.
function {:inline} $Dereference<T>(ref: $Mutation T): T {
    ref->v
}

// Update the value of a mutation.
function {:inline} $UpdateMutation<T>(m: $Mutation T, v: T): $Mutation T {
    $Mutation(m->l, m->p, v)
}

function {:inline} $ChildMutation<T1, T2>(m: $Mutation T1, offset: int, v: T2): $Mutation T2 {
    $Mutation(m->l, ExtendVec(m->p, offset), v)
}

// Return true if two mutations share the location and path
function {:inline} $IsSameMutation<T1, T2>(parent: $Mutation T1, child: $Mutation T2 ): bool {
    parent->l == child->l && parent->p == child->p
}

// Return true if the mutation is a parent of a child which was derived with the given edge offset. This
// is used to implement write-back choices.
function {:inline} $IsParentMutation<T1, T2>(parent: $Mutation T1, edge: int, child: $Mutation T2 ): bool {
    parent->l == child->l &&
    (var pp := parent->p;
    (var cp := child->p;
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
     cl == pl + 1 &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) ==  ReadVec(cp, i)) &&
     $EdgeMatches(ReadVec(cp, pl), edge)
    ))))
}

// Return true if the mutation is a parent of a child, for hyper edge.
function {:inline} $IsParentMutationHyper<T1, T2>(parent: $Mutation T1, hyper_edge: Vec int, child: $Mutation T2 ): bool {
    parent->l == child->l &&
    (var pp := parent->p;
    (var cp := child->p;
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
    (var el := LenVec(hyper_edge);
     cl == pl + el &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) == ReadVec(cp, i)) &&
     (forall i: int:: i >= 0 && i < el ==> $EdgeMatches(ReadVec(cp, pl + i), ReadVec(hyper_edge, i)))
    )))))
}

function {:inline} $EdgeMatches(edge: int, edge_pattern: int): bool {
    edge_pattern == -1 // wildcard
    || edge_pattern == edge
}



function {:inline} $SameLocation<T1, T2>(m1: $Mutation T1, m2: $Mutation T2): bool {
    m1->l == m2->l
}

function {:inline} $HasGlobalLocation<T>(m: $Mutation T): bool {
    (m->l) is $Global
}

function {:inline} $HasLocalLocation<T>(m: $Mutation T, idx: int): bool {
    m->l == $Local(idx)
}

function {:inline} $GlobalLocationAddress<T>(m: $Mutation T): int {
    (m->l)->a
}



// Tests whether resource exists.
function {:inline} $ResourceExists<T>(m: $Memory T, addr: int): bool {
    m->domain[addr]
}

// Obtains Value of given resource.
function {:inline} $ResourceValue<T>(m: $Memory T, addr: int): T {
    m->contents[addr]
}

// Update resource.
function {:inline} $ResourceUpdate<T>(m: $Memory T, a: int, v: T): $Memory T {
    $Memory(m->domain[a := true], m->contents[a := v])
}

// Remove resource.
function {:inline} $ResourceRemove<T>(m: $Memory T, a: int): $Memory T {
    $Memory(m->domain[a := false], m->contents)
}

// Copies resource from memory s to m.
function {:inline} $ResourceCopy<T>(m: $Memory T, s: $Memory T, a: int): $Memory T {
    $Memory(m->domain[a := s->domain[a]],
            m->contents[a := s->contents[a]])
}



// ============================================================================================
// Abort Handling

var $abort_flag: bool;
var $abort_code: int;

function {:inline} $process_abort_code(code: int): int {
    code
}

const $EXEC_FAILURE_CODE: int;
axiom $EXEC_FAILURE_CODE == -1;

// TODO(wrwg): currently we map aborts of native functions like those for vectors also to
//   execution failure. This may need to be aligned with what the runtime actually does.

procedure {:inline 1} $ExecFailureAbort() {
    $abort_flag := true;
    $abort_code := $EXEC_FAILURE_CODE;
}

procedure {:inline 1} $Abort(code: int) {
    $abort_flag := true;
    $abort_code := code;
}

function {:inline} $StdError(cat: int, reason: int): int {
    reason * 256 + cat
}

procedure {:inline 1} $InitVerification() {
    // Set abort_flag to false, and havoc abort_code
    $abort_flag := false;
    havoc $abort_code;
    // Initialize event store
    call $InitEventStore();
}

// ============================================================================================
// Instructions


procedure {:inline 1} $CastU8(src: int) returns (dst: int)
{
    if (src > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU16(src: int) returns (dst: int)
{
    if (src > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU32(src: int) returns (dst: int)
{
    if (src > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU64(src: int) returns (dst: int)
{
    if (src > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU128(src: int) returns (dst: int)
{
    if (src > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU256(src: int) returns (dst: int)
{
    if (src > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $AddU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $Sub(src1: int, src2: int) returns (dst: int)
{
    if (src1 < src2) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 - src2;
}

// uninterpreted function to return an undefined value.
function $undefined_int(): int;

// Recursive exponentiation function
// Undefined unless e >=0.  $pow(0,0) is also undefined.
function $pow(n: int, e: int): int {
    if n != 0 && e == 0 then 1
    else if e > 0 then n * $pow(n, e - 1)
    else $undefined_int()
}

function $shl(src1: int, p: int): int {
    src1 * $pow(2, p)
}

function $shlU8(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 256
}

function $shlU16(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 65536
}

function $shlU32(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 4294967296
}

function $shlU64(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 18446744073709551616
}

function $shlU128(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 340282366920938463463374607431768211456
}

function $shlU256(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 115792089237316195423570985008687907853269984665640564039457584007913129639936
}

function $shr(src1: int, p: int): int {
    src1 div $pow(2, p)
}

// We need to know the size of the destination in order to drop bits
// that have been shifted left more than that, so we have $ShlU8/16/32/64/128/256
procedure {:inline 1} $ShlU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU8(src1, src2);
}

// Template for cast and shift operations of bitvector types

procedure {:inline 1} $CastBv8to8(src: bv8) returns (dst: bv8)
{
    dst := src;
}


function $castBv8to8(src: bv8) returns (bv8)
{
    src
}


function $shlBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shl'Bv8'(src1, src2)
}

procedure {:inline 1} $ShlBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2);
}

function $shrBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shr'Bv8'(src1, src2)
}

procedure {:inline 1} $ShrBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2);
}

procedure {:inline 1} $CastBv16to8(src: bv16) returns (dst: bv8)
{
    if ($Gt'Bv16'(src, 255bv16)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}



function $shlBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv32to8(src: bv32) returns (dst: bv8)
{
    if ($Gt'Bv32'(src, 255bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}



function $shlBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv64to8(src: bv64) returns (dst: bv8)
{
    if ($Gt'Bv64'(src, 255bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $castBv64to8(src: bv64) returns (bv8)
{
    if ($Gt'Bv64'(src, 255bv64)) then
        $Arbitrary_value_of'bv8'()
    else
    src[8:0]
}


function $shlBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv128to8(src: bv128) returns (dst: bv8)
{
    if ($Gt'Bv128'(src, 255bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}



function $shlBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv256to8(src: bv256) returns (dst: bv8)
{
    if ($Gt'Bv256'(src, 255bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $castBv256to8(src: bv256) returns (bv8)
{
    if ($Gt'Bv256'(src, 255bv256)) then
        $Arbitrary_value_of'bv8'()
    else
    src[8:0]
}


function $shlBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv8to16(src: bv8) returns (dst: bv16)
{
    dst := 0bv8 ++ src;
}



function $shlBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shl'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShlBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, 0bv8 ++ src2);
}

function $shrBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shr'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShrBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, 0bv8 ++ src2);
}

procedure {:inline 1} $CastBv16to16(src: bv16) returns (dst: bv16)
{
    dst := src;
}



function $shlBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shl'Bv16'(src1, src2)
}

procedure {:inline 1} $ShlBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, src2);
}

function $shrBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shr'Bv16'(src1, src2)
}

procedure {:inline 1} $ShrBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, src2);
}

procedure {:inline 1} $CastBv32to16(src: bv32) returns (dst: bv16)
{
    if ($Gt'Bv32'(src, 65535bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}



function $shlBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv64to16(src: bv64) returns (dst: bv16)
{
    if ($Gt'Bv64'(src, 65535bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}



function $shlBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv128to16(src: bv128) returns (dst: bv16)
{
    if ($Gt'Bv128'(src, 65535bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}



function $shlBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv256to16(src: bv256) returns (dst: bv16)
{
    if ($Gt'Bv256'(src, 65535bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}



function $shlBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv8to32(src: bv8) returns (dst: bv32)
{
    dst := 0bv24 ++ src;
}



function $shlBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShlBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, 0bv24 ++ src2);
}

function $shrBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShrBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, 0bv24 ++ src2);
}

procedure {:inline 1} $CastBv16to32(src: bv16) returns (dst: bv32)
{
    dst := 0bv16 ++ src;
}



function $shlBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShlBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, 0bv16 ++ src2);
}

function $shrBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShrBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, 0bv16 ++ src2);
}

procedure {:inline 1} $CastBv32to32(src: bv32) returns (dst: bv32)
{
    dst := src;
}



function $shlBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shl'Bv32'(src1, src2)
}

procedure {:inline 1} $ShlBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, src2);
}

function $shrBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shr'Bv32'(src1, src2)
}

procedure {:inline 1} $ShrBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, src2);
}

procedure {:inline 1} $CastBv64to32(src: bv64) returns (dst: bv32)
{
    if ($Gt'Bv64'(src, 2147483647bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}



function $shlBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv128to32(src: bv128) returns (dst: bv32)
{
    if ($Gt'Bv128'(src, 2147483647bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}



function $shlBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv256to32(src: bv256) returns (dst: bv32)
{
    if ($Gt'Bv256'(src, 2147483647bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}



function $shlBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv8to64(src: bv8) returns (dst: bv64)
{
    dst := 0bv56 ++ src;
}


function $castBv8to64(src: bv8) returns (bv64)
{
    0bv56 ++ src
}


function $shlBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShlBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, 0bv56 ++ src2);
}

function $shrBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShrBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, 0bv56 ++ src2);
}

procedure {:inline 1} $CastBv16to64(src: bv16) returns (dst: bv64)
{
    dst := 0bv48 ++ src;
}



function $shlBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShlBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, 0bv48 ++ src2);
}

function $shrBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShrBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, 0bv48 ++ src2);
}

procedure {:inline 1} $CastBv32to64(src: bv32) returns (dst: bv64)
{
    dst := 0bv32 ++ src;
}



function $shlBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShlBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, 0bv32 ++ src2);
}

function $shrBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShrBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, 0bv32 ++ src2);
}

procedure {:inline 1} $CastBv64to64(src: bv64) returns (dst: bv64)
{
    dst := src;
}


function $castBv64to64(src: bv64) returns (bv64)
{
    src
}


function $shlBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shl'Bv64'(src1, src2)
}

procedure {:inline 1} $ShlBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, src2);
}

function $shrBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shr'Bv64'(src1, src2)
}

procedure {:inline 1} $ShrBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, src2);
}

procedure {:inline 1} $CastBv128to64(src: bv128) returns (dst: bv64)
{
    if ($Gt'Bv128'(src, 18446744073709551615bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}



function $shlBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv256to64(src: bv256) returns (dst: bv64)
{
    if ($Gt'Bv256'(src, 18446744073709551615bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $castBv256to64(src: bv256) returns (bv64)
{
    if ($Gt'Bv256'(src, 18446744073709551615bv256)) then
        $Arbitrary_value_of'bv64'()
    else
    src[64:0]
}


function $shlBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv8to128(src: bv8) returns (dst: bv128)
{
    dst := 0bv120 ++ src;
}



function $shlBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShlBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, 0bv120 ++ src2);
}

function $shrBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShrBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, 0bv120 ++ src2);
}

procedure {:inline 1} $CastBv16to128(src: bv16) returns (dst: bv128)
{
    dst := 0bv112 ++ src;
}



function $shlBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShlBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, 0bv112 ++ src2);
}

function $shrBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShrBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, 0bv112 ++ src2);
}

procedure {:inline 1} $CastBv32to128(src: bv32) returns (dst: bv128)
{
    dst := 0bv96 ++ src;
}



function $shlBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShlBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, 0bv96 ++ src2);
}

function $shrBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShrBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, 0bv96 ++ src2);
}

procedure {:inline 1} $CastBv64to128(src: bv64) returns (dst: bv128)
{
    dst := 0bv64 ++ src;
}



function $shlBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShlBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, 0bv64 ++ src2);
}

function $shrBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShrBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, 0bv64 ++ src2);
}

procedure {:inline 1} $CastBv128to128(src: bv128) returns (dst: bv128)
{
    dst := src;
}



function $shlBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shl'Bv128'(src1, src2)
}

procedure {:inline 1} $ShlBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, src2);
}

function $shrBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shr'Bv128'(src1, src2)
}

procedure {:inline 1} $ShrBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, src2);
}

procedure {:inline 1} $CastBv256to128(src: bv256) returns (dst: bv128)
{
    if ($Gt'Bv256'(src, 340282366920938463463374607431768211455bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[128:0];
}



function $shlBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shl'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShlBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, src2[128:0]);
}

function $shrBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shr'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShrBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, src2[128:0]);
}

procedure {:inline 1} $CastBv8to256(src: bv8) returns (dst: bv256)
{
    dst := 0bv248 ++ src;
}


function $castBv8to256(src: bv8) returns (bv256)
{
    0bv248 ++ src
}


function $shlBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShlBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    assume $bv2int.8(src2) >= 0 && $bv2int.8(src2) < 256;
    dst := $Shl'Bv256'(src1, 0bv248 ++ src2);
}

function $shrBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShrBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    assume $bv2int.8(src2) >= 0 && $bv2int.8(src2) < 256;
    dst := $Shr'Bv256'(src1, 0bv248 ++ src2);
}

procedure {:inline 1} $CastBv16to256(src: bv16) returns (dst: bv256)
{
    dst := 0bv240 ++ src;
}



function $shlBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShlBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv256'(src1, 0bv240 ++ src2);
}

function $shrBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShrBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv256'(src1, 0bv240 ++ src2);
}

procedure {:inline 1} $CastBv32to256(src: bv32) returns (dst: bv256)
{
    dst := 0bv224 ++ src;
}



function $shlBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShlBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv256'(src1, 0bv224 ++ src2);
}

function $shrBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShrBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv256'(src1, 0bv224 ++ src2);
}

procedure {:inline 1} $CastBv64to256(src: bv64) returns (dst: bv256)
{
    dst := 0bv192 ++ src;
}


function $castBv64to256(src: bv64) returns (bv256)
{
    0bv192 ++ src
}


function $shlBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShlBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv256'(src1, 0bv192 ++ src2);
}

function $shrBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShrBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv256'(src1, 0bv192 ++ src2);
}

procedure {:inline 1} $CastBv128to256(src: bv128) returns (dst: bv256)
{
    dst := 0bv128 ++ src;
}



function $shlBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShlBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv256'(src1, 0bv128 ++ src2);
}

function $shrBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShrBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv256'(src1, 0bv128 ++ src2);
}

procedure {:inline 1} $CastBv256to256(src: bv256) returns (dst: bv256)
{
    dst := src;
}


function $castBv256to256(src: bv256) returns (bv256)
{
    src
}


function $shlBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shl'Bv256'(src1, src2)
}

procedure {:inline 1} $ShlBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv256'(src1, src2);
}

function $shrBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shr'Bv256'(src1, src2)
}

procedure {:inline 1} $ShrBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv256'(src1, src2);
}

procedure {:inline 1} $ShlU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU16(src1, src2);
}

procedure {:inline 1} $ShlU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU32(src1, src2);
}

procedure {:inline 1} $ShlU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
       call $ExecFailureAbort();
       return;
    }
    dst := $shlU64(src1, src2);
}

procedure {:inline 1} $ShlU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU128(src1, src2);
}

procedure {:inline 1} $ShlU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shlU256(src1, src2);
}

procedure {:inline 1} $Shr(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $MulU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $Div(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 div src2;
}

procedure {:inline 1} $Mod(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 mod src2;
}

procedure {:inline 1} $ArithBinaryUnimplemented(src1: int, src2: int) returns (dst: int);

procedure {:inline 1} $Lt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 < src2;
}

procedure {:inline 1} $Gt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 > src2;
}

procedure {:inline 1} $Le(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 <= src2;
}

procedure {:inline 1} $Ge(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 >= src2;
}

procedure {:inline 1} $And(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 && src2;
}

procedure {:inline 1} $Or(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 || src2;
}

procedure {:inline 1} $Not(src: bool) returns (dst: bool)
{
    dst := !src;
}

// Pack and Unpack are auto-generated for each type T


// ==================================================================================
// Native Vector

function {:inline} $SliceVecByRange<T>(v: Vec T, r: $Range): Vec T {
    SliceVec(v, r->lb, r->ub)
}

// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `#0`

// Not inlined. It appears faster this way.
function $IsEqual'vec'#0''(v1: Vec (#0), v2: Vec (#0)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'#0'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'#0''(v: Vec (#0), prefix: Vec (#0)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'#0'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'#0''(v: Vec (#0), suffix: Vec (#0)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'#0'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'#0''(v: Vec (#0)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'#0'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'#0'(v: Vec (#0), e: #0): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e))
}

function $IndexOfVec'#0'(v: Vec (#0), e: #0): int;
axiom (forall v: Vec (#0), e: #0:: {$IndexOfVec'#0'(v, e)}
    (var i := $IndexOfVec'#0'(v, e);
     if (!$ContainsVec'#0'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'#0'(ReadVec(v, j), e))));


function {:inline} $RangeVec'#0'(v: Vec (#0)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'#0'() returns (v: Vec (#0)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'#0'(v: Vec (#0)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'#0'(m: $Mutation (Vec (#0)), val: #0) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'#0'(v: Vec (#0), val: #0): Vec (#0) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'#0'(m: $Mutation (Vec (#0))) returns (e: #0, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'#0'(m: $Mutation (Vec (#0))) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'#0'(m: $Mutation (Vec (#0)), left: int, right: int) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'#0'(m: $Mutation (Vec (#0)), rot: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'#0'(m: $Mutation (Vec (#0)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var mid_left_vec: Vec (#0);
    var mid_right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'#0'(m: $Mutation (Vec (#0)), i: int, e: #0) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'#0'(v: Vec (#0)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'#0'(v: Vec (#0)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'#0'(v: Vec (#0), i: int) returns (dst: #0) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'#0'(m: $Mutation (Vec (#0)), index: int)
returns (dst: $Mutation (#0), m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'#0'(v: Vec (#0)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'#0'(m: $Mutation (Vec (#0)), i: int, j: int) returns (m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'#0'(v: Vec (#0), i: int, j: int): Vec (#0) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var len: int;
    var v: Vec (#0);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'#0'(v: Vec (#0), e: #0) returns (res: bool)  {
    res := $ContainsVec'#0'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'#0'(v: Vec (#0), e: #0) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'#0'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_aggregator_v2_AggregatorSnapshot'u64'`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(v1: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), v2: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), prefix: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), suffix: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), e: $1_aggregator_v2_AggregatorSnapshot'u64'): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''(ReadVec(v, i), e))
}

function $IndexOfVec'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), e: $1_aggregator_v2_AggregatorSnapshot'u64'): int;
axiom (forall v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), e: $1_aggregator_v2_AggregatorSnapshot'u64':: {$IndexOfVec'$1_aggregator_v2_AggregatorSnapshot'u64''(v, e)}
    (var i := $IndexOfVec'$1_aggregator_v2_AggregatorSnapshot'u64''(v, e);
     if (!$ContainsVec'$1_aggregator_v2_AggregatorSnapshot'u64''(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_aggregator_v2_AggregatorSnapshot'u64''(): Vec ($1_aggregator_v2_AggregatorSnapshot'u64') {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_aggregator_v2_AggregatorSnapshot'u64''() returns (v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_aggregator_v2_AggregatorSnapshot'u64''(): Vec ($1_aggregator_v2_AggregatorSnapshot'u64') {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), val: $1_aggregator_v2_AggregatorSnapshot'u64') returns (m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), val: $1_aggregator_v2_AggregatorSnapshot'u64'): Vec ($1_aggregator_v2_AggregatorSnapshot'u64') {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) returns (e: $1_aggregator_v2_AggregatorSnapshot'u64', m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), other: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')) returns (m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) returns (m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), other: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')) returns (m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), new_len: int) returns (v: (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), new_len: int) returns (v: (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), left: int, right: int) returns (m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    var left_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var mid_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var right_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), rot: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var len: int;
    var left_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var right_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    var left_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var mid_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var right_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var mid_left_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var mid_right_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), i: int, e: $1_aggregator_v2_AggregatorSnapshot'u64') returns (m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    var left_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var right_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), i: int) returns (dst: $1_aggregator_v2_AggregatorSnapshot'u64') {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), i: int): $1_aggregator_v2_AggregatorSnapshot'u64' {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), index: int)
returns (dst: $Mutation ($1_aggregator_v2_AggregatorSnapshot'u64'), m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')))
{
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), i: int): $1_aggregator_v2_AggregatorSnapshot'u64' {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), i: int, j: int) returns (m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')))
{
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), i: int, j: int): Vec ($1_aggregator_v2_AggregatorSnapshot'u64') {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), i: int) returns (e: $1_aggregator_v2_AggregatorSnapshot'u64', m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')))
{
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), i: int) returns (e: $1_aggregator_v2_AggregatorSnapshot'u64', m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')))
{
    var len: int;
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), e: $1_aggregator_v2_AggregatorSnapshot'u64') returns (res: bool)  {
    res := $ContainsVec'$1_aggregator_v2_AggregatorSnapshot'u64''(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), e: $1_aggregator_v2_AggregatorSnapshot'u64') returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_aggregator_v2_AggregatorSnapshot'u64''(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_string_String`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_string_String''(v1: Vec ($1_string_String), v2: Vec ($1_string_String)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_string_String'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_string_String''(v: Vec ($1_string_String), prefix: Vec ($1_string_String)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_string_String'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_string_String''(v: Vec ($1_string_String), suffix: Vec ($1_string_String)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_string_String'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_string_String''(v: Vec ($1_string_String)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_string_String'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_string_String'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String): int;
axiom (forall v: Vec ($1_string_String), e: $1_string_String:: {$IndexOfVec'$1_string_String'(v, e)}
    (var i := $IndexOfVec'$1_string_String'(v, e);
     if (!$ContainsVec'$1_string_String'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_string_String'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_string_String'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_string_String'(v: Vec ($1_string_String)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_string_String'(): Vec ($1_string_String) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_string_String'() returns (v: Vec ($1_string_String)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_string_String'(): Vec ($1_string_String) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_string_String'(v: Vec ($1_string_String)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_string_String'(m: $Mutation (Vec ($1_string_String)), val: $1_string_String) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_string_String'(v: Vec ($1_string_String), val: $1_string_String): Vec ($1_string_String) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_string_String'(m: $Mutation (Vec ($1_string_String))) returns (e: $1_string_String, m': $Mutation (Vec ($1_string_String))) {
    var v: Vec ($1_string_String);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_string_String'(m: $Mutation (Vec ($1_string_String)), other: Vec ($1_string_String)) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_string_String'(m: $Mutation (Vec ($1_string_String))) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_string_String'(m: $Mutation (Vec ($1_string_String)), other: Vec ($1_string_String)) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_string_String'(m: $Mutation (Vec ($1_string_String)), new_len: int) returns (v: (Vec ($1_string_String)), m': $Mutation (Vec ($1_string_String))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_string_String'(m: $Mutation (Vec ($1_string_String)), new_len: int) returns (v: (Vec ($1_string_String)), m': $Mutation (Vec ($1_string_String))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_string_String'(m: $Mutation (Vec ($1_string_String)), left: int, right: int) returns (m': $Mutation (Vec ($1_string_String))) {
    var left_vec: Vec ($1_string_String);
    var mid_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    var v: Vec ($1_string_String);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_string_String'(m: $Mutation (Vec ($1_string_String)), rot: int) returns (n: int, m': $Mutation (Vec ($1_string_String))) {
    var v: Vec ($1_string_String);
    var len: int;
    var left_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_string_String'(m: $Mutation (Vec ($1_string_String)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_string_String))) {
    var left_vec: Vec ($1_string_String);
    var mid_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    var mid_left_vec: Vec ($1_string_String);
    var mid_right_vec: Vec ($1_string_String);
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int, e: $1_string_String) returns (m': $Mutation (Vec ($1_string_String))) {
    var left_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_string_String'(v: Vec ($1_string_String)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_string_String'(v: Vec ($1_string_String)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_string_String'(v: Vec ($1_string_String), i: int) returns (dst: $1_string_String) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_string_String'(v: Vec ($1_string_String), i: int): $1_string_String {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_string_String'(m: $Mutation (Vec ($1_string_String)), index: int)
returns (dst: $Mutation ($1_string_String), m': $Mutation (Vec ($1_string_String)))
{
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_string_String'(v: Vec ($1_string_String), i: int): $1_string_String {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_string_String'(v: Vec ($1_string_String)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int, j: int) returns (m': $Mutation (Vec ($1_string_String)))
{
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_string_String'(v: Vec ($1_string_String), i: int, j: int): Vec ($1_string_String) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int) returns (e: $1_string_String, m': $Mutation (Vec ($1_string_String)))
{
    var v: Vec ($1_string_String);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int) returns (e: $1_string_String, m': $Mutation (Vec ($1_string_String)))
{
    var len: int;
    var v: Vec ($1_string_String);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String) returns (res: bool)  {
    res := $ContainsVec'$1_string_String'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_string_String'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$4_collection_ConcurrentSupply`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$4_collection_ConcurrentSupply''(v1: Vec ($4_collection_ConcurrentSupply), v2: Vec ($4_collection_ConcurrentSupply)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$4_collection_ConcurrentSupply'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$4_collection_ConcurrentSupply''(v: Vec ($4_collection_ConcurrentSupply), prefix: Vec ($4_collection_ConcurrentSupply)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$4_collection_ConcurrentSupply'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$4_collection_ConcurrentSupply''(v: Vec ($4_collection_ConcurrentSupply), suffix: Vec ($4_collection_ConcurrentSupply)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$4_collection_ConcurrentSupply'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$4_collection_ConcurrentSupply''(v: Vec ($4_collection_ConcurrentSupply)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$4_collection_ConcurrentSupply'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), e: $4_collection_ConcurrentSupply): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_collection_ConcurrentSupply'(ReadVec(v, i), e))
}

function $IndexOfVec'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), e: $4_collection_ConcurrentSupply): int;
axiom (forall v: Vec ($4_collection_ConcurrentSupply), e: $4_collection_ConcurrentSupply:: {$IndexOfVec'$4_collection_ConcurrentSupply'(v, e)}
    (var i := $IndexOfVec'$4_collection_ConcurrentSupply'(v, e);
     if (!$ContainsVec'$4_collection_ConcurrentSupply'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_collection_ConcurrentSupply'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$4_collection_ConcurrentSupply'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$4_collection_ConcurrentSupply'(): Vec ($4_collection_ConcurrentSupply) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$4_collection_ConcurrentSupply'() returns (v: Vec ($4_collection_ConcurrentSupply)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$4_collection_ConcurrentSupply'(): Vec ($4_collection_ConcurrentSupply) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), val: $4_collection_ConcurrentSupply) returns (m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), val: $4_collection_ConcurrentSupply): Vec ($4_collection_ConcurrentSupply) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply))) returns (e: $4_collection_ConcurrentSupply, m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    var v: Vec ($4_collection_ConcurrentSupply);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), other: Vec ($4_collection_ConcurrentSupply)) returns (m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply))) returns (m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), other: Vec ($4_collection_ConcurrentSupply)) returns (m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), new_len: int) returns (v: (Vec ($4_collection_ConcurrentSupply)), m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), new_len: int) returns (v: (Vec ($4_collection_ConcurrentSupply)), m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), left: int, right: int) returns (m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    var left_vec: Vec ($4_collection_ConcurrentSupply);
    var mid_vec: Vec ($4_collection_ConcurrentSupply);
    var right_vec: Vec ($4_collection_ConcurrentSupply);
    var v: Vec ($4_collection_ConcurrentSupply);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), rot: int) returns (n: int, m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    var v: Vec ($4_collection_ConcurrentSupply);
    var len: int;
    var left_vec: Vec ($4_collection_ConcurrentSupply);
    var right_vec: Vec ($4_collection_ConcurrentSupply);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    var left_vec: Vec ($4_collection_ConcurrentSupply);
    var mid_vec: Vec ($4_collection_ConcurrentSupply);
    var right_vec: Vec ($4_collection_ConcurrentSupply);
    var mid_left_vec: Vec ($4_collection_ConcurrentSupply);
    var mid_right_vec: Vec ($4_collection_ConcurrentSupply);
    var v: Vec ($4_collection_ConcurrentSupply);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), i: int, e: $4_collection_ConcurrentSupply) returns (m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    var left_vec: Vec ($4_collection_ConcurrentSupply);
    var right_vec: Vec ($4_collection_ConcurrentSupply);
    var v: Vec ($4_collection_ConcurrentSupply);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), i: int) returns (dst: $4_collection_ConcurrentSupply) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), i: int): $4_collection_ConcurrentSupply {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), index: int)
returns (dst: $Mutation ($4_collection_ConcurrentSupply), m': $Mutation (Vec ($4_collection_ConcurrentSupply)))
{
    var v: Vec ($4_collection_ConcurrentSupply);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), i: int): $4_collection_ConcurrentSupply {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), i: int, j: int) returns (m': $Mutation (Vec ($4_collection_ConcurrentSupply)))
{
    var v: Vec ($4_collection_ConcurrentSupply);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), i: int, j: int): Vec ($4_collection_ConcurrentSupply) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), i: int) returns (e: $4_collection_ConcurrentSupply, m': $Mutation (Vec ($4_collection_ConcurrentSupply)))
{
    var v: Vec ($4_collection_ConcurrentSupply);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), i: int) returns (e: $4_collection_ConcurrentSupply, m': $Mutation (Vec ($4_collection_ConcurrentSupply)))
{
    var len: int;
    var v: Vec ($4_collection_ConcurrentSupply);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), e: $4_collection_ConcurrentSupply) returns (res: bool)  {
    res := $ContainsVec'$4_collection_ConcurrentSupply'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), e: $4_collection_ConcurrentSupply) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$4_collection_ConcurrentSupply'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$4_royalty_Royalty`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$4_royalty_Royalty''(v1: Vec ($4_royalty_Royalty), v2: Vec ($4_royalty_Royalty)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$4_royalty_Royalty'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$4_royalty_Royalty''(v: Vec ($4_royalty_Royalty), prefix: Vec ($4_royalty_Royalty)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$4_royalty_Royalty'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$4_royalty_Royalty''(v: Vec ($4_royalty_Royalty), suffix: Vec ($4_royalty_Royalty)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$4_royalty_Royalty'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$4_royalty_Royalty''(v: Vec ($4_royalty_Royalty)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$4_royalty_Royalty'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_royalty_Royalty'(ReadVec(v, i), e))
}

function $IndexOfVec'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty): int;
axiom (forall v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty:: {$IndexOfVec'$4_royalty_Royalty'(v, e)}
    (var i := $IndexOfVec'$4_royalty_Royalty'(v, e);
     if (!$ContainsVec'$4_royalty_Royalty'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_royalty_Royalty'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$4_royalty_Royalty'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$4_royalty_Royalty'(): Vec ($4_royalty_Royalty) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$4_royalty_Royalty'() returns (v: Vec ($4_royalty_Royalty)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$4_royalty_Royalty'(): Vec ($4_royalty_Royalty) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), val: $4_royalty_Royalty) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), val: $4_royalty_Royalty): Vec ($4_royalty_Royalty) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty))) returns (e: $4_royalty_Royalty, m': $Mutation (Vec ($4_royalty_Royalty))) {
    var v: Vec ($4_royalty_Royalty);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), other: Vec ($4_royalty_Royalty)) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty))) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), other: Vec ($4_royalty_Royalty)) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), new_len: int) returns (v: (Vec ($4_royalty_Royalty)), m': $Mutation (Vec ($4_royalty_Royalty))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), new_len: int) returns (v: (Vec ($4_royalty_Royalty)), m': $Mutation (Vec ($4_royalty_Royalty))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), left: int, right: int) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    var left_vec: Vec ($4_royalty_Royalty);
    var mid_vec: Vec ($4_royalty_Royalty);
    var right_vec: Vec ($4_royalty_Royalty);
    var v: Vec ($4_royalty_Royalty);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), rot: int) returns (n: int, m': $Mutation (Vec ($4_royalty_Royalty))) {
    var v: Vec ($4_royalty_Royalty);
    var len: int;
    var left_vec: Vec ($4_royalty_Royalty);
    var right_vec: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($4_royalty_Royalty))) {
    var left_vec: Vec ($4_royalty_Royalty);
    var mid_vec: Vec ($4_royalty_Royalty);
    var right_vec: Vec ($4_royalty_Royalty);
    var mid_left_vec: Vec ($4_royalty_Royalty);
    var mid_right_vec: Vec ($4_royalty_Royalty);
    var v: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), i: int, e: $4_royalty_Royalty) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    var left_vec: Vec ($4_royalty_Royalty);
    var right_vec: Vec ($4_royalty_Royalty);
    var v: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), i: int) returns (dst: $4_royalty_Royalty) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), i: int): $4_royalty_Royalty {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), index: int)
returns (dst: $Mutation ($4_royalty_Royalty), m': $Mutation (Vec ($4_royalty_Royalty)))
{
    var v: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), i: int): $4_royalty_Royalty {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), i: int, j: int) returns (m': $Mutation (Vec ($4_royalty_Royalty)))
{
    var v: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), i: int, j: int): Vec ($4_royalty_Royalty) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), i: int) returns (e: $4_royalty_Royalty, m': $Mutation (Vec ($4_royalty_Royalty)))
{
    var v: Vec ($4_royalty_Royalty);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), i: int) returns (e: $4_royalty_Royalty, m': $Mutation (Vec ($4_royalty_Royalty)))
{
    var len: int;
    var v: Vec ($4_royalty_Royalty);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty) returns (res: bool)  {
    res := $ContainsVec'$4_royalty_Royalty'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$4_royalty_Royalty'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''(v1: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData), v2: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData), prefix: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData), suffix: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData), e: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(ReadVec(v, i), e))
}

function $IndexOfVec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData), e: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData): int;
axiom (forall v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData), e: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData:: {$IndexOfVec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v, e)}
    (var i := $IndexOfVec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v, e);
     if (!$ContainsVec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(): Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'() returns (v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(): Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(m: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)), val: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData) returns (m': $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData), val: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData): Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(m: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData))) returns (e: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData, m': $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData))) {
    var v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(m: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)), other: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)) returns (m': $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(m: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData))) returns (m': $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(m: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)), other: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)) returns (m': $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(m: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)), new_len: int) returns (v: (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)), m': $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(m: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)), new_len: int) returns (v: (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)), m': $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(m: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)), left: int, right: int) returns (m': $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData))) {
    var left_vec: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var mid_vec: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var right_vec: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(m: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)), rot: int) returns (n: int, m': $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData))) {
    var v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var len: int;
    var left_vec: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var right_vec: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(m: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData))) {
    var left_vec: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var mid_vec: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var right_vec: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var mid_left_vec: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var mid_right_vec: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(m: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)), i: int, e: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData) returns (m': $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData))) {
    var left_vec: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var right_vec: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData), i: int) returns (dst: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData), i: int): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(m: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)), index: int)
returns (dst: $Mutation ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData), m': $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)))
{
    var v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData), i: int): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(m: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)), i: int, j: int) returns (m': $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)))
{
    var v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData), i: int, j: int): Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(m: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)), i: int) returns (e: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData, m': $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)))
{
    var v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(m: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)), i: int) returns (e: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData, m': $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)))
{
    var len: int;
    var v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData), e: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData) returns (res: bool)  {
    res := $ContainsVec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData), e: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `vec'u8'`

// Not inlined. It appears faster this way.
function $IsEqual'vec'vec'u8'''(v1: Vec (Vec (int)), v2: Vec (Vec (int))): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'vec'u8''(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'vec'u8'''(v: Vec (Vec (int)), prefix: Vec (Vec (int))): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'vec'u8''(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'vec'u8'''(v: Vec (Vec (int)), suffix: Vec (Vec (int))): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'vec'u8''(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'vec'u8'''(v: Vec (Vec (int))): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'vec'u8''(ReadVec(v, i)))
}


function {:inline} $ContainsVec'vec'u8''(v: Vec (Vec (int)), e: Vec (int)): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'vec'u8''(ReadVec(v, i), e))
}

function $IndexOfVec'vec'u8''(v: Vec (Vec (int)), e: Vec (int)): int;
axiom (forall v: Vec (Vec (int)), e: Vec (int):: {$IndexOfVec'vec'u8''(v, e)}
    (var i := $IndexOfVec'vec'u8''(v, e);
     if (!$ContainsVec'vec'u8''(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'vec'u8''(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'vec'u8''(ReadVec(v, j), e))));


function {:inline} $RangeVec'vec'u8''(v: Vec (Vec (int))): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'vec'u8''(): Vec (Vec (int)) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'vec'u8''() returns (v: Vec (Vec (int))) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'vec'u8''(): Vec (Vec (int)) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'vec'u8''(v: Vec (Vec (int))) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'vec'u8''(m: $Mutation (Vec (Vec (int))), val: Vec (int)) returns (m': $Mutation (Vec (Vec (int)))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'vec'u8''(v: Vec (Vec (int)), val: Vec (int)): Vec (Vec (int)) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'vec'u8''(m: $Mutation (Vec (Vec (int)))) returns (e: Vec (int), m': $Mutation (Vec (Vec (int)))) {
    var v: Vec (Vec (int));
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'vec'u8''(m: $Mutation (Vec (Vec (int))), other: Vec (Vec (int))) returns (m': $Mutation (Vec (Vec (int)))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'vec'u8''(m: $Mutation (Vec (Vec (int)))) returns (m': $Mutation (Vec (Vec (int)))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'vec'u8''(m: $Mutation (Vec (Vec (int))), other: Vec (Vec (int))) returns (m': $Mutation (Vec (Vec (int)))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'vec'u8''(m: $Mutation (Vec (Vec (int))), new_len: int) returns (v: (Vec (Vec (int))), m': $Mutation (Vec (Vec (int)))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'vec'u8''(m: $Mutation (Vec (Vec (int))), new_len: int) returns (v: (Vec (Vec (int))), m': $Mutation (Vec (Vec (int)))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'vec'u8''(m: $Mutation (Vec (Vec (int))), left: int, right: int) returns (m': $Mutation (Vec (Vec (int)))) {
    var left_vec: Vec (Vec (int));
    var mid_vec: Vec (Vec (int));
    var right_vec: Vec (Vec (int));
    var v: Vec (Vec (int));
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'vec'u8''(m: $Mutation (Vec (Vec (int))), rot: int) returns (n: int, m': $Mutation (Vec (Vec (int)))) {
    var v: Vec (Vec (int));
    var len: int;
    var left_vec: Vec (Vec (int));
    var right_vec: Vec (Vec (int));
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'vec'u8''(m: $Mutation (Vec (Vec (int))), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (Vec (int)))) {
    var left_vec: Vec (Vec (int));
    var mid_vec: Vec (Vec (int));
    var right_vec: Vec (Vec (int));
    var mid_left_vec: Vec (Vec (int));
    var mid_right_vec: Vec (Vec (int));
    var v: Vec (Vec (int));
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'vec'u8''(m: $Mutation (Vec (Vec (int))), i: int, e: Vec (int)) returns (m': $Mutation (Vec (Vec (int)))) {
    var left_vec: Vec (Vec (int));
    var right_vec: Vec (Vec (int));
    var v: Vec (Vec (int));
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'vec'u8''(v: Vec (Vec (int))) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'vec'u8''(v: Vec (Vec (int))): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'vec'u8''(v: Vec (Vec (int)), i: int) returns (dst: Vec (int)) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'vec'u8''(v: Vec (Vec (int)), i: int): Vec (int) {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'vec'u8''(m: $Mutation (Vec (Vec (int))), index: int)
returns (dst: $Mutation (Vec (int)), m': $Mutation (Vec (Vec (int))))
{
    var v: Vec (Vec (int));
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'vec'u8''(v: Vec (Vec (int)), i: int): Vec (int) {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'vec'u8''(v: Vec (Vec (int))) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'vec'u8''(m: $Mutation (Vec (Vec (int))), i: int, j: int) returns (m': $Mutation (Vec (Vec (int))))
{
    var v: Vec (Vec (int));
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'vec'u8''(v: Vec (Vec (int)), i: int, j: int): Vec (Vec (int)) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'vec'u8''(m: $Mutation (Vec (Vec (int))), i: int) returns (e: Vec (int), m': $Mutation (Vec (Vec (int))))
{
    var v: Vec (Vec (int));

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'vec'u8''(m: $Mutation (Vec (Vec (int))), i: int) returns (e: Vec (int), m': $Mutation (Vec (Vec (int))))
{
    var len: int;
    var v: Vec (Vec (int));

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'vec'u8''(v: Vec (Vec (int)), e: Vec (int)) returns (res: bool)  {
    res := $ContainsVec'vec'u8''(v, e);
}

procedure {:inline 1}
$1_vector_index_of'vec'u8''(v: Vec (Vec (int)), e: Vec (int)) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'vec'u8''(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `address`

// Not inlined. It appears faster this way.
function $IsEqual'vec'address''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'address'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'address''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'address'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'address''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'address'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'address''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'address'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'address'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e))
}

function $IndexOfVec'address'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'address'(v, e)}
    (var i := $IndexOfVec'address'(v, e);
     if (!$ContainsVec'address'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'address'(ReadVec(v, j), e))));


function {:inline} $RangeVec'address'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'address'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'address'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'address'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'address'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'address'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'address'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'address'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'address'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'address'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'address'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'address'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'address'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'address'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'address'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'address'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'address'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'address'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'address'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'address'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'address'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'address'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u64''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u64''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u64''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u64''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u64'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e))
}

function $IndexOfVec'u64'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u64'(v, e)}
    (var i := $IndexOfVec'u64'(v, e);
     if (!$ContainsVec'u64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u64'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u64'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u64'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u64'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u64'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u64'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u64'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u64'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u64'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u64'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u64'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u64'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u64'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u64'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u64'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u64'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u64'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u64'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u64'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u64'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u64'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u64'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u8''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u8''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u8''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u8''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u8'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e))
}

function $IndexOfVec'u8'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u8'(v, e)}
    (var i := $IndexOfVec'u8'(v, e);
     if (!$ContainsVec'u8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u8'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u8'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u8'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u8'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u8'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u8'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u8'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u8'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u8'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u8'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u8'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u8'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u8'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u8'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u8'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u8'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u8'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u8'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u8'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u8'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `vec'bv8'`

// Not inlined. It appears faster this way.
function $IsEqual'vec'vec'bv8'''(v1: Vec (Vec (bv8)), v2: Vec (Vec (bv8))): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'vec'bv8''(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'vec'bv8'''(v: Vec (Vec (bv8)), prefix: Vec (Vec (bv8))): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'vec'bv8''(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'vec'bv8'''(v: Vec (Vec (bv8)), suffix: Vec (Vec (bv8))): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'vec'bv8''(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'vec'bv8'''(v: Vec (Vec (bv8))): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'vec'bv8''(ReadVec(v, i)))
}


function {:inline} $ContainsVec'vec'bv8''(v: Vec (Vec (bv8)), e: Vec (bv8)): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'vec'bv8''(ReadVec(v, i), e))
}

function $IndexOfVec'vec'bv8''(v: Vec (Vec (bv8)), e: Vec (bv8)): int;
axiom (forall v: Vec (Vec (bv8)), e: Vec (bv8):: {$IndexOfVec'vec'bv8''(v, e)}
    (var i := $IndexOfVec'vec'bv8''(v, e);
     if (!$ContainsVec'vec'bv8''(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'vec'bv8''(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'vec'bv8''(ReadVec(v, j), e))));


function {:inline} $RangeVec'vec'bv8''(v: Vec (Vec (bv8))): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'vec'bv8''(): Vec (Vec (bv8)) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'vec'bv8''() returns (v: Vec (Vec (bv8))) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'vec'bv8''(): Vec (Vec (bv8)) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'vec'bv8''(v: Vec (Vec (bv8))) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), val: Vec (bv8)) returns (m': $Mutation (Vec (Vec (bv8)))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'vec'bv8''(v: Vec (Vec (bv8)), val: Vec (bv8)): Vec (Vec (bv8)) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'vec'bv8''(m: $Mutation (Vec (Vec (bv8)))) returns (e: Vec (bv8), m': $Mutation (Vec (Vec (bv8)))) {
    var v: Vec (Vec (bv8));
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), other: Vec (Vec (bv8))) returns (m': $Mutation (Vec (Vec (bv8)))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'vec'bv8''(m: $Mutation (Vec (Vec (bv8)))) returns (m': $Mutation (Vec (Vec (bv8)))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), other: Vec (Vec (bv8))) returns (m': $Mutation (Vec (Vec (bv8)))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), new_len: int) returns (v: (Vec (Vec (bv8))), m': $Mutation (Vec (Vec (bv8)))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), new_len: int) returns (v: (Vec (Vec (bv8))), m': $Mutation (Vec (Vec (bv8)))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), left: int, right: int) returns (m': $Mutation (Vec (Vec (bv8)))) {
    var left_vec: Vec (Vec (bv8));
    var mid_vec: Vec (Vec (bv8));
    var right_vec: Vec (Vec (bv8));
    var v: Vec (Vec (bv8));
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), rot: int) returns (n: int, m': $Mutation (Vec (Vec (bv8)))) {
    var v: Vec (Vec (bv8));
    var len: int;
    var left_vec: Vec (Vec (bv8));
    var right_vec: Vec (Vec (bv8));
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (Vec (bv8)))) {
    var left_vec: Vec (Vec (bv8));
    var mid_vec: Vec (Vec (bv8));
    var right_vec: Vec (Vec (bv8));
    var mid_left_vec: Vec (Vec (bv8));
    var mid_right_vec: Vec (Vec (bv8));
    var v: Vec (Vec (bv8));
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), i: int, e: Vec (bv8)) returns (m': $Mutation (Vec (Vec (bv8)))) {
    var left_vec: Vec (Vec (bv8));
    var right_vec: Vec (Vec (bv8));
    var v: Vec (Vec (bv8));
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'vec'bv8''(v: Vec (Vec (bv8))) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'vec'bv8''(v: Vec (Vec (bv8))): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'vec'bv8''(v: Vec (Vec (bv8)), i: int) returns (dst: Vec (bv8)) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'vec'bv8''(v: Vec (Vec (bv8)), i: int): Vec (bv8) {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), index: int)
returns (dst: $Mutation (Vec (bv8)), m': $Mutation (Vec (Vec (bv8))))
{
    var v: Vec (Vec (bv8));
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'vec'bv8''(v: Vec (Vec (bv8)), i: int): Vec (bv8) {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'vec'bv8''(v: Vec (Vec (bv8))) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), i: int, j: int) returns (m': $Mutation (Vec (Vec (bv8))))
{
    var v: Vec (Vec (bv8));
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'vec'bv8''(v: Vec (Vec (bv8)), i: int, j: int): Vec (Vec (bv8)) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), i: int) returns (e: Vec (bv8), m': $Mutation (Vec (Vec (bv8))))
{
    var v: Vec (Vec (bv8));

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), i: int) returns (e: Vec (bv8), m': $Mutation (Vec (Vec (bv8))))
{
    var len: int;
    var v: Vec (Vec (bv8));

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'vec'bv8''(v: Vec (Vec (bv8)), e: Vec (bv8)) returns (res: bool)  {
    res := $ContainsVec'vec'bv8''(v, e);
}

procedure {:inline 1}
$1_vector_index_of'vec'bv8''(v: Vec (Vec (bv8)), e: Vec (bv8)) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'vec'bv8''(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv64''(v1: Vec (bv64), v2: Vec (bv64)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv64''(v: Vec (bv64), prefix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv64''(v: Vec (bv64), suffix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv64''(v: Vec (bv64)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv64'(v: Vec (bv64), e: bv64): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e))
}

function $IndexOfVec'bv64'(v: Vec (bv64), e: bv64): int;
axiom (forall v: Vec (bv64), e: bv64:: {$IndexOfVec'bv64'(v, e)}
    (var i := $IndexOfVec'bv64'(v, e);
     if (!$ContainsVec'bv64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv64'(v: Vec (bv64)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv64'() returns (v: Vec (bv64)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv64'(v: Vec (bv64)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv64'(m: $Mutation (Vec (bv64)), val: bv64) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv64'(v: Vec (bv64), val: bv64): Vec (bv64) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv64'(m: $Mutation (Vec (bv64))) returns (e: bv64, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv64'(m: $Mutation (Vec (bv64))) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv64'(m: $Mutation (Vec (bv64)), new_len: int) returns (v: (Vec (bv64)), m': $Mutation (Vec (bv64))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv64'(m: $Mutation (Vec (bv64)), new_len: int) returns (v: (Vec (bv64)), m': $Mutation (Vec (bv64))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv64'(m: $Mutation (Vec (bv64)), left: int, right: int) returns (m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var mid_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var v: Vec (bv64);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv64'(m: $Mutation (Vec (bv64)), rot: int) returns (n: int, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    var left_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv64'(m: $Mutation (Vec (bv64)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var mid_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var mid_left_vec: Vec (bv64);
    var mid_right_vec: Vec (bv64);
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv64'(m: $Mutation (Vec (bv64)), i: int, e: bv64) returns (m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv64'(v: Vec (bv64)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv64'(v: Vec (bv64)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv64'(v: Vec (bv64), i: int) returns (dst: bv64) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv64'(m: $Mutation (Vec (bv64)), index: int)
returns (dst: $Mutation (bv64), m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv64'(v: Vec (bv64)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv64'(m: $Mutation (Vec (bv64)), i: int, j: int) returns (m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv64'(v: Vec (bv64), i: int, j: int): Vec (bv64) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var len: int;
    var v: Vec (bv64);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv64'(v: Vec (bv64), e: bv64) returns (res: bool)  {
    res := $ContainsVec'bv64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv64'(v: Vec (bv64), e: bv64) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv8''(v1: Vec (bv8), v2: Vec (bv8)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv8''(v: Vec (bv8), prefix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv8''(v: Vec (bv8), suffix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv8''(v: Vec (bv8)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv8'(v: Vec (bv8), e: bv8): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e))
}

function $IndexOfVec'bv8'(v: Vec (bv8), e: bv8): int;
axiom (forall v: Vec (bv8), e: bv8:: {$IndexOfVec'bv8'(v, e)}
    (var i := $IndexOfVec'bv8'(v, e);
     if (!$ContainsVec'bv8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv8'(v: Vec (bv8)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv8'() returns (v: Vec (bv8)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv8'(v: Vec (bv8)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv8'(m: $Mutation (Vec (bv8)), val: bv8) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv8'(v: Vec (bv8), val: bv8): Vec (bv8) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv8'(m: $Mutation (Vec (bv8))) returns (e: bv8, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv8'(m: $Mutation (Vec (bv8))) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, right: int) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv8'(m: $Mutation (Vec (bv8)), rot: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var mid_left_vec: Vec (bv8);
    var mid_right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv8'(m: $Mutation (Vec (bv8)), i: int, e: bv8) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv8'(v: Vec (bv8)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv8'(v: Vec (bv8)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv8'(v: Vec (bv8), i: int) returns (dst: bv8) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv8'(m: $Mutation (Vec (bv8)), index: int)
returns (dst: $Mutation (bv8), m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv8'(v: Vec (bv8)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv8'(m: $Mutation (Vec (bv8)), i: int, j: int) returns (m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv8'(v: Vec (bv8), i: int, j: int): Vec (bv8) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var len: int;
    var v: Vec (bv8);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv8'(v: Vec (bv8), e: bv8) returns (res: bool)  {
    res := $ContainsVec'bv8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv8'(v: Vec (bv8), e: bv8) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ==================================================================================
// Native Table

// ----------------------------------------------------------------------------------
// Native Table key encoding for type `$1_copyable_any_Any`

function $EncodeKey'$1_copyable_any_Any'(k: $1_copyable_any_Any): int;
axiom (
  forall k1, k2: $1_copyable_any_Any :: {$EncodeKey'$1_copyable_any_Any'(k1), $EncodeKey'$1_copyable_any_Any'(k2)}
    $IsEqual'$1_copyable_any_Any'(k1, k2) <==> $EncodeKey'$1_copyable_any_Any'(k1) == $EncodeKey'$1_copyable_any_Any'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table implementation for type `($1_copyable_any_Any,$1_permissioned_signer_StoredPermission)`

function $IsEqual'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(t1: Table int ($1_permissioned_signer_StoredPermission), t2: Table int ($1_permissioned_signer_StoredPermission)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(t: Table int ($1_permissioned_signer_StoredPermission)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'$1_permissioned_signer_StoredPermission'(GetTable(t, i)))
}
procedure {:inline 2} $1_big_ordered_map_new'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'() returns (v: Table int ($1_permissioned_signer_StoredPermission)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_big_ordered_map_destroy_empty'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: Table int ($1_permissioned_signer_StoredPermission)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_big_ordered_map_is_empty'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: (Table int ($1_permissioned_signer_StoredPermission))) returns (r: bool) {
    r := LenTable(t) == 0;
}
procedure {:inline 2} $1_big_ordered_map_contains'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: (Table int ($1_permissioned_signer_StoredPermission)), k: $1_copyable_any_Any) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'$1_copyable_any_Any'(k));
}
procedure {:inline 2} $1_big_ordered_map_add'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(m: $Mutation (Table int ($1_permissioned_signer_StoredPermission)), k: $1_copyable_any_Any, v: $1_permissioned_signer_StoredPermission) returns (m': $Mutation(Table int ($1_permissioned_signer_StoredPermission))) {
    var enc_k: int;
    var t: Table int ($1_permissioned_signer_StoredPermission);
    enc_k := $EncodeKey'$1_copyable_any_Any'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_big_ordered_map_borrow'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: Table int ($1_permissioned_signer_StoredPermission), k: $1_copyable_any_Any) returns (v: $1_permissioned_signer_StoredPermission) {
    var enc_k: int;
    enc_k := $EncodeKey'$1_copyable_any_Any'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'$1_copyable_any_Any'(k));
    }
}
procedure {:inline 2} $1_big_ordered_map_borrow_mut'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(m: $Mutation (Table int ($1_permissioned_signer_StoredPermission)), k: $1_copyable_any_Any)
returns (dst: $Mutation ($1_permissioned_signer_StoredPermission), m': $Mutation (Table int ($1_permissioned_signer_StoredPermission))) {
    var enc_k: int;
    var t: Table int ($1_permissioned_signer_StoredPermission);
    enc_k := $EncodeKey'$1_copyable_any_Any'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_big_ordered_map_spec_len'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: (Table int ($1_permissioned_signer_StoredPermission))): int {
    LenTable(t)
}
function {:inline} $1_big_ordered_map_spec_contains_key'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: (Table int ($1_permissioned_signer_StoredPermission)), k: $1_copyable_any_Any): bool {
    ContainsTable(t, $EncodeKey'$1_copyable_any_Any'(k))
}
function {:inline} $1_big_ordered_map_spec_set'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: Table int ($1_permissioned_signer_StoredPermission), k: $1_copyable_any_Any, v: $1_permissioned_signer_StoredPermission): Table int ($1_permissioned_signer_StoredPermission) {
    (var enc_k := $EncodeKey'$1_copyable_any_Any'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_big_ordered_map_spec_remove'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: Table int ($1_permissioned_signer_StoredPermission), k: $1_copyable_any_Any): Table int ($1_permissioned_signer_StoredPermission) {
    RemoveTable(t, $EncodeKey'$1_copyable_any_Any'(k))
}
function {:inline} $1_big_ordered_map_spec_get'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: Table int ($1_permissioned_signer_StoredPermission), k: $1_copyable_any_Any): $1_permissioned_signer_StoredPermission {
    GetTable(t, $EncodeKey'$1_copyable_any_Any'(k))
}



// ==================================================================================
// Native Hash

// Hash is modeled as an otherwise uninterpreted injection.
// In truth, it is not an injection since the domain has greater cardinality
// (arbitrary length vectors) than the co-domain (vectors of length 32).  But it is
// common to assume in code there are no hash collisions in practice.  Fortunately,
// Boogie is not smart enough to recognized that there is an inconsistency.
// FIXME: If we were using a reliable extensional theory of arrays, and if we could use ==
// instead of $IsEqual, we might be able to avoid so many quantified formulas by
// using a sha2_inverse function in the ensures conditions of Hash_sha2_256 to
// assert that sha2/3 are injections without using global quantified axioms.


function $1_hash_sha2(val: Vec int): Vec int;

// This says that Hash_sha2 is bijective.
axiom (forall v1,v2: Vec int :: {$1_hash_sha2(v1), $1_hash_sha2(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha2(v1), $1_hash_sha2(v2)));

procedure $1_hash_sha2_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha2(val);     // returns Hash_sha2 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha2_256(val: Vec int): Vec int {
    $1_hash_sha2(val)
}

// similarly for Hash_sha3
function $1_hash_sha3(val: Vec int): Vec int;

axiom (forall v1,v2: Vec int :: {$1_hash_sha3(v1), $1_hash_sha3(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha3(v1), $1_hash_sha3(v2)));

procedure $1_hash_sha3_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha3(val);     // returns Hash_sha3 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha3_256(val: Vec int): Vec int {
    $1_hash_sha3(val)
}

// ==================================================================================
// Native string

// TODO: correct implementation of strings

procedure {:inline 1} $1_string_internal_check_utf8(x: Vec int) returns (r: bool) {
}

procedure {:inline 1} $1_string_internal_sub_string(x: Vec int, i: int, j: int) returns (r: Vec int) {
}

procedure {:inline 1} $1_string_internal_index_of(x: Vec int, y: Vec int) returns (r: int) {
}

procedure {:inline 1} $1_string_internal_is_char_boundary(x: Vec int, i: int) returns (r: bool) {
}




// ==================================================================================
// Native diem_account

procedure {:inline 1} $1_DiemAccount_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

procedure {:inline 1} $1_DiemAccount_destroy_signer(
  signer: $signer
) {
  return;
}

// ==================================================================================
// Native account

procedure {:inline 1} $1_Account_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

// ==================================================================================
// Native Signer

datatype $signer {
    $signer($addr: int),
    $permissioned_signer($addr: int, $permission_addr: int)
}

function {:inline} $IsValid'signer'(s: $signer): bool {
    if s is $signer then
        $IsValid'address'(s->$addr)
    else
        $IsValid'address'(s->$addr) &&
        $IsValid'address'(s->$permission_addr)
}

function {:inline} $IsEqual'signer'(s1: $signer, s2: $signer): bool {
    if s1 is $signer && s2 is $signer then
        s1 == s2
    else if s1 is $permissioned_signer && s2 is $permissioned_signer then
        s1 == s2
    else
        false
}

procedure {:inline 1} $1_signer_borrow_address(signer: $signer) returns (res: int) {
    res := signer->$addr;
}

function {:inline} $1_signer_$borrow_address(signer: $signer): int
{
    signer->$addr
}

function $1_signer_is_txn_signer(s: $signer): bool;

function $1_signer_is_txn_signer_addr(a: int): bool;


// ==================================================================================
// Native signature

// Signature related functionality is handled via uninterpreted functions. This is sound
// currently because we verify every code path based on signature verification with
// an arbitrary interpretation.

function $1_Signature_$ed25519_validate_pubkey(public_key: Vec int): bool;
function $1_Signature_$ed25519_verify(signature: Vec int, public_key: Vec int, message: Vec int): bool;

// Needed because we do not have extensional equality:
axiom (forall k1, k2: Vec int ::
    {$1_Signature_$ed25519_validate_pubkey(k1), $1_Signature_$ed25519_validate_pubkey(k2)}
    $IsEqual'vec'u8''(k1, k2) ==> $1_Signature_$ed25519_validate_pubkey(k1) == $1_Signature_$ed25519_validate_pubkey(k2));
axiom (forall s1, s2, k1, k2, m1, m2: Vec int ::
    {$1_Signature_$ed25519_verify(s1, k1, m1), $1_Signature_$ed25519_verify(s2, k2, m2)}
    $IsEqual'vec'u8''(s1, s2) && $IsEqual'vec'u8''(k1, k2) && $IsEqual'vec'u8''(m1, m2)
    ==> $1_Signature_$ed25519_verify(s1, k1, m1) == $1_Signature_$ed25519_verify(s2, k2, m2));


procedure {:inline 1} $1_Signature_ed25519_validate_pubkey(public_key: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_validate_pubkey(public_key);
}

procedure {:inline 1} $1_Signature_ed25519_verify(
        signature: Vec int, public_key: Vec int, message: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_verify(signature, public_key, message);
}


// ==================================================================================
// Native bcs::serialize

// ----------------------------------------------------------------------------------
// Native BCS implementation for element type `address`

// Serialize is modeled as an uninterpreted function, with an additional
// axiom to say it's an injection.

function $1_bcs_serialize'address'(v: int): Vec int;

axiom (forall v1, v2: int :: {$1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)}
   $IsEqual'address'(v1, v2) <==> $IsEqual'vec'u8''($1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)));

// This says that serialize returns a non-empty vec<u8>

axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); $IsValid'vec'u8''(r) && LenVec(r) > 0 ));


procedure $1_bcs_to_bytes'address'(v: int) returns (res: Vec int);
ensures res == $1_bcs_serialize'address'(v);

function {:inline} $1_bcs_$to_bytes'address'(v: int): Vec int {
    $1_bcs_serialize'address'(v)
}

// Serialized addresses should have the same length.
const $serialized_address_len: int;
// Serialized addresses should have the same length
axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); LenVec(r) == $serialized_address_len));




// ==================================================================================
// Native from_bcs::from_bytes


// ==================================================================================
// Native Event module



procedure {:inline 1} $InitEventStore() {
}

// ============================================================================================
// Type Reflection on Type Parameters

datatype $TypeParamInfo {
    $TypeParamBool(),
    $TypeParamU8(),
    $TypeParamU16(),
    $TypeParamU32(),
    $TypeParamU64(),
    $TypeParamU128(),
    $TypeParamU256(),
    $TypeParamAddress(),
    $TypeParamSigner(),
    $TypeParamVector(e: $TypeParamInfo),
    $TypeParamStruct(a: int, m: Vec int, s: Vec int)
}



//==================================
// Begin Translation

function $TypeName(t: $TypeParamInfo): Vec int;
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamBool ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)) ==> t is $TypeParamBool);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU8 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)) ==> t is $TypeParamU8);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU16 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)) ==> t is $TypeParamU16);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU32 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)) ==> t is $TypeParamU32);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU64 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)) ==> t is $TypeParamU64);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU128 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)) ==> t is $TypeParamU128);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU256 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)) ==> t is $TypeParamU256);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamAddress ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)) ==> t is $TypeParamAddress);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamSigner ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)) ==> t is $TypeParamSigner);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamVector ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7), $TypeName(t->e)), Vec(DefaultVecMap()[0 := 62], 1))));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} ($IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7)) && $IsSuffix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 62], 1))) ==> t is $TypeParamVector);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamStruct ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 48][1 := 120], 2), MakeVec1(t->a)), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), t->m), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), t->s)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 48][1 := 120], 2)) ==> t is $TypeParamVector);


// Given Types for Type Parameters

type #0;
function {:inline} $IsEqual'#0'(x1: #0, x2: #0): bool { x1 == x2 }
function {:inline} $IsValid'#0'(x: #0): bool { true }
var #0_info: $TypeParamInfo;
var #0_$memory: $Memory #0;
function {:inline} $1_cmp_$compare'#0'(v1: #0, v2: #0): $1_cmp_Ordering {
    if $IsEqual'#0'(v1, v2) then $1_cmp_Ordering_Equal()
    else $Arbitrary_value_of'$1_cmp_Ordering'()
}
procedure {:inline 1} $1_cmp_compare'#0'(v1: #0, v2: #0) returns ($ret0: $1_cmp_Ordering) {
    $ret0 := $1_cmp_$compare'#0'(v1, v2);
}

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'bool'(b1), $1_from_bcs_deserializable'bool'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u8'(b1), $1_from_bcs_deserializable'u8'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u64'(b1), $1_from_bcs_deserializable'u64'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u256'(b1), $1_from_bcs_deserializable'u256'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'address'(b1), $1_from_bcs_deserializable'address'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'signer'(b1), $1_from_bcs_deserializable'signer'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u8''(b1), $1_from_bcs_deserializable'vec'u8''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u64''(b1), $1_from_bcs_deserializable'vec'u64''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'address''(b1), $1_from_bcs_deserializable'vec'address''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<vector<u8>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'vec'u8'''(b1), $1_from_bcs_deserializable'vec'vec'u8'''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<0x1::string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_string_String''(b1), $1_from_bcs_deserializable'vec'$1_string_String''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<0x1::aggregator_v2::AggregatorSnapshot<u64>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(b1), $1_from_bcs_deserializable'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<0x4::royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$4_royalty_Royalty''(b1), $1_from_bcs_deserializable'vec'$4_royalty_Royalty''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<0x4::collection::ConcurrentSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$4_collection_ConcurrentSupply''(b1), $1_from_bcs_deserializable'vec'$4_collection_ConcurrentSupply''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::TokenData>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''(b1), $1_from_bcs_deserializable'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'#0''(b1), $1_from_bcs_deserializable'vec'#0''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'address''(b1), $1_from_bcs_deserializable'$1_option_Option'address''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<vector<u8>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'vec'u8'''(b1), $1_from_bcs_deserializable'$1_option_Option'vec'u8'''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<0x1::string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_string_String''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_string_String''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<0x1::aggregator_v2::AggregatorSnapshot<u64>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<0x4::royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$4_royalty_Royalty''(b1), $1_from_bcs_deserializable'$1_option_Option'$4_royalty_Royalty''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<0x4::collection::ConcurrentSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$4_collection_ConcurrentSupply''(b1), $1_from_bcs_deserializable'$1_option_Option'$4_collection_ConcurrentSupply''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_String'(b1), $1_from_bcs_deserializable'$1_string_String'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::features::Features>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_features_Features'(b1), $1_from_bcs_deserializable'$1_features_Features'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserializable'$1_type_info_TypeInfo'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::big_ordered_map::BigOrderedMap<0x1::copyable_any::Any, 0x1::permissioned_signer::StoredPermission>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(b1), $1_from_bcs_deserializable'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::permissioned_signer::GrantedPermissionHandles>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_permissioned_signer_GrantedPermissionHandles'(b1), $1_from_bcs_deserializable'$1_permissioned_signer_GrantedPermissionHandles'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::permissioned_signer::PermissionStorage>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_permissioned_signer_PermissionStorage'(b1), $1_from_bcs_deserializable'$1_permissioned_signer_PermissionStorage'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_GUID'(b1), $1_from_bcs_deserializable'$1_guid_GUID'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_ID'(b1), $1_from_bcs_deserializable'$1_guid_ID'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::event::EventHandle<0x1::account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::event::EventHandle<0x1::account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::event::EventHandle<0x1::object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::event::EventHandle<0x1::reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::event::EventHandle<0x4::collection::BurnEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_BurnEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_BurnEvent''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::event::EventHandle<0x4::collection::MintEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MintEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MintEvent''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::event::EventHandle<0x4::collection::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MutationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MutationEvent''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::event::EventHandle<0x4::token::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4_token_MutationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4_token_MutationEvent''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_Account'(b1), $1_from_bcs_deserializable'$1_account_Account'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::account::AccountPermission>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_AccountPermission'(b1), $1_from_bcs_deserializable'$1_account_AccountPermission'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::account::CapabilityOffer<0x1::account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::account::CapabilityOffer<0x1::account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::account::SignerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_SignerCapability'(b1), $1_from_bcs_deserializable'$1_account_SignerCapability'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ConstructorRef'(b1), $1_from_bcs_deserializable'$1_object_ConstructorRef'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::LinearTransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_LinearTransferRef'(b1), $1_from_bcs_deserializable'$1_object_LinearTransferRef'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::Object<0x1::object::ObjectCore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$1_object_ObjectCore''(b1), $1_from_bcs_deserializable'$1_object_Object'$1_object_ObjectCore''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::Object<0x4::collection::Collection>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$4_collection_Collection''(b1), $1_from_bcs_deserializable'$1_object_Object'$4_collection_Collection''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ObjectCore'(b1), $1_from_bcs_deserializable'$1_object_ObjectCore'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::TombStone>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TombStone'(b1), $1_from_bcs_deserializable'$1_object_TombStone'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::Transfer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Transfer'(b1), $1_from_bcs_deserializable'$1_object_Transfer'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferEvent'(b1), $1_from_bcs_deserializable'$1_object_TransferEvent'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferRef'(b1), $1_from_bcs_deserializable'$1_object_TransferRef'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Untransferable'(b1), $1_from_bcs_deserializable'$1_object_Untransferable'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::aggregator_v2::Aggregator<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(b1), $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::aggregator_v2::AggregatorSnapshot<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_v2_AggregatorSnapshot'u64''(b1), $1_from_bcs_deserializable'$1_aggregator_v2_AggregatorSnapshot'u64''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::aggregator_v2::DerivedStringSnapshot>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_v2_DerivedStringSnapshot'(b1), $1_from_bcs_deserializable'$1_aggregator_v2_DerivedStringSnapshot'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::randomness::PerBlockRandomness>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_randomness_PerBlockRandomness'(b1), $1_from_bcs_deserializable'$1_randomness_PerBlockRandomness'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::randomness::RandomnessGeneratedEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_randomness_RandomnessGeneratedEvent'(b1), $1_from_bcs_deserializable'$1_randomness_RandomnessGeneratedEvent'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x4::royalty::Royalty>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_royalty_Royalty'(b1), $1_from_bcs_deserializable'$4_royalty_Royalty'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x4::collection::ConcurrentSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_ConcurrentSupply'(b1), $1_from_bcs_deserializable'$4_collection_ConcurrentSupply'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x4::collection::Collection>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_Collection'(b1), $1_from_bcs_deserializable'$4_collection_Collection'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x4::collection::FixedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_FixedSupply'(b1), $1_from_bcs_deserializable'$4_collection_FixedSupply'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x4::collection::Mint>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_Mint'(b1), $1_from_bcs_deserializable'$4_collection_Mint'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x4::collection::MintEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_MintEvent'(b1), $1_from_bcs_deserializable'$4_collection_MintEvent'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x4::collection::UnlimitedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_UnlimitedSupply'(b1), $1_from_bcs_deserializable'$4_collection_UnlimitedSupply'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x4::token::Token>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_token_Token'(b1), $1_from_bcs_deserializable'$4_token_Token'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x4::token::TokenIdentifiers>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_token_TokenIdentifiers'(b1), $1_from_bcs_deserializable'$4_token_TokenIdentifiers'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'(b1), $1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'(b1), $1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMintedEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent'(b1), $1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::TokenData>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(b1), $1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'(b1), $1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'#0'(b1), $1_from_bcs_deserializable'#0'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserialize'bool'(b1), $1_from_bcs_deserialize'bool'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u8'($1_from_bcs_deserialize'u8'(b1), $1_from_bcs_deserialize'u8'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u64'($1_from_bcs_deserialize'u64'(b1), $1_from_bcs_deserialize'u64'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u256'($1_from_bcs_deserialize'u256'(b1), $1_from_bcs_deserialize'u256'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'address'($1_from_bcs_deserialize'address'(b1), $1_from_bcs_deserialize'address'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'signer'($1_from_bcs_deserialize'signer'(b1), $1_from_bcs_deserialize'signer'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u8''($1_from_bcs_deserialize'vec'u8''(b1), $1_from_bcs_deserialize'vec'u8''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u64''($1_from_bcs_deserialize'vec'u64''(b1), $1_from_bcs_deserialize'vec'u64''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'address''($1_from_bcs_deserialize'vec'address''(b1), $1_from_bcs_deserialize'vec'address''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<vector<u8>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'vec'u8'''($1_from_bcs_deserialize'vec'vec'u8'''(b1), $1_from_bcs_deserialize'vec'vec'u8'''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<0x1::string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_string_String''($1_from_bcs_deserialize'vec'$1_string_String''(b1), $1_from_bcs_deserialize'vec'$1_string_String''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<0x1::aggregator_v2::AggregatorSnapshot<u64>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''($1_from_bcs_deserialize'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(b1), $1_from_bcs_deserialize'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<0x4::royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$4_royalty_Royalty''($1_from_bcs_deserialize'vec'$4_royalty_Royalty''(b1), $1_from_bcs_deserialize'vec'$4_royalty_Royalty''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<0x4::collection::ConcurrentSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$4_collection_ConcurrentSupply''($1_from_bcs_deserialize'vec'$4_collection_ConcurrentSupply''(b1), $1_from_bcs_deserialize'vec'$4_collection_ConcurrentSupply''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::TokenData>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''($1_from_bcs_deserialize'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''(b1), $1_from_bcs_deserialize'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'#0''($1_from_bcs_deserialize'vec'#0''(b1), $1_from_bcs_deserialize'vec'#0''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'address''($1_from_bcs_deserialize'$1_option_Option'address''(b1), $1_from_bcs_deserialize'$1_option_Option'address''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<vector<u8>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'vec'u8'''($1_from_bcs_deserialize'$1_option_Option'vec'u8'''(b1), $1_from_bcs_deserialize'$1_option_Option'vec'u8'''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<0x1::string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_string_String''($1_from_bcs_deserialize'$1_option_Option'$1_string_String''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_string_String''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<0x1::aggregator_v2::AggregatorSnapshot<u64>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($1_from_bcs_deserialize'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<0x4::royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$4_royalty_Royalty''($1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(b1), $1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<0x4::collection::ConcurrentSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$4_collection_ConcurrentSupply''($1_from_bcs_deserialize'$1_option_Option'$4_collection_ConcurrentSupply''(b1), $1_from_bcs_deserialize'$1_option_Option'$4_collection_ConcurrentSupply''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_String'($1_from_bcs_deserialize'$1_string_String'(b1), $1_from_bcs_deserialize'$1_string_String'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::features::Features>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_features_Features'($1_from_bcs_deserialize'$1_features_Features'(b1), $1_from_bcs_deserialize'$1_features_Features'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_type_info_TypeInfo'($1_from_bcs_deserialize'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserialize'$1_type_info_TypeInfo'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_chain_status_GenesisEndMarker'($1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_timestamp_CurrentTimeMicroseconds'($1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::big_ordered_map::BigOrderedMap<0x1::copyable_any::Any, 0x1::permissioned_signer::StoredPermission>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''($1_from_bcs_deserialize'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(b1), $1_from_bcs_deserialize'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::permissioned_signer::GrantedPermissionHandles>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_permissioned_signer_GrantedPermissionHandles'($1_from_bcs_deserialize'$1_permissioned_signer_GrantedPermissionHandles'(b1), $1_from_bcs_deserialize'$1_permissioned_signer_GrantedPermissionHandles'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::permissioned_signer::PermissionStorage>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_permissioned_signer_PermissionStorage'($1_from_bcs_deserialize'$1_permissioned_signer_PermissionStorage'(b1), $1_from_bcs_deserialize'$1_permissioned_signer_PermissionStorage'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_GUID'($1_from_bcs_deserialize'$1_guid_GUID'(b1), $1_from_bcs_deserialize'$1_guid_GUID'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_ID'($1_from_bcs_deserialize'$1_guid_ID'(b1), $1_from_bcs_deserialize'$1_guid_ID'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::event::EventHandle<0x1::account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::event::EventHandle<0x1::account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::event::EventHandle<0x1::object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_object_TransferEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::event::EventHandle<0x1::reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::event::EventHandle<0x4::collection::BurnEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4_collection_BurnEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::event::EventHandle<0x4::collection::MintEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4_collection_MintEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::event::EventHandle<0x4::collection::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4_collection_MutationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::event::EventHandle<0x4::token::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4_token_MutationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_Account'($1_from_bcs_deserialize'$1_account_Account'(b1), $1_from_bcs_deserialize'$1_account_Account'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::account::AccountPermission>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_AccountPermission'($1_from_bcs_deserialize'$1_account_AccountPermission'(b1), $1_from_bcs_deserialize'$1_account_AccountPermission'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::account::CapabilityOffer<0x1::account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::account::CapabilityOffer<0x1::account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::account::SignerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_SignerCapability'($1_from_bcs_deserialize'$1_account_SignerCapability'(b1), $1_from_bcs_deserialize'$1_account_SignerCapability'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ConstructorRef'($1_from_bcs_deserialize'$1_object_ConstructorRef'(b1), $1_from_bcs_deserialize'$1_object_ConstructorRef'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::LinearTransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_LinearTransferRef'($1_from_bcs_deserialize'$1_object_LinearTransferRef'(b1), $1_from_bcs_deserialize'$1_object_LinearTransferRef'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::Object<0x1::object::ObjectCore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$1_object_ObjectCore''($1_from_bcs_deserialize'$1_object_Object'$1_object_ObjectCore''(b1), $1_from_bcs_deserialize'$1_object_Object'$1_object_ObjectCore''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::Object<0x4::collection::Collection>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$4_collection_Collection''($1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(b1), $1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ObjectCore'($1_from_bcs_deserialize'$1_object_ObjectCore'(b1), $1_from_bcs_deserialize'$1_object_ObjectCore'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::TombStone>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TombStone'($1_from_bcs_deserialize'$1_object_TombStone'(b1), $1_from_bcs_deserialize'$1_object_TombStone'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::Transfer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Transfer'($1_from_bcs_deserialize'$1_object_Transfer'(b1), $1_from_bcs_deserialize'$1_object_Transfer'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferEvent'($1_from_bcs_deserialize'$1_object_TransferEvent'(b1), $1_from_bcs_deserialize'$1_object_TransferEvent'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferRef'($1_from_bcs_deserialize'$1_object_TransferRef'(b1), $1_from_bcs_deserialize'$1_object_TransferRef'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Untransferable'($1_from_bcs_deserialize'$1_object_Untransferable'(b1), $1_from_bcs_deserialize'$1_object_Untransferable'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::aggregator_v2::Aggregator<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_v2_Aggregator'u64''($1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(b1), $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::aggregator_v2::AggregatorSnapshot<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''($1_from_bcs_deserialize'$1_aggregator_v2_AggregatorSnapshot'u64''(b1), $1_from_bcs_deserialize'$1_aggregator_v2_AggregatorSnapshot'u64''(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::aggregator_v2::DerivedStringSnapshot>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_v2_DerivedStringSnapshot'($1_from_bcs_deserialize'$1_aggregator_v2_DerivedStringSnapshot'(b1), $1_from_bcs_deserialize'$1_aggregator_v2_DerivedStringSnapshot'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_reconfiguration_Configuration'($1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::randomness::PerBlockRandomness>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_randomness_PerBlockRandomness'($1_from_bcs_deserialize'$1_randomness_PerBlockRandomness'(b1), $1_from_bcs_deserialize'$1_randomness_PerBlockRandomness'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::randomness::RandomnessGeneratedEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_randomness_RandomnessGeneratedEvent'($1_from_bcs_deserialize'$1_randomness_RandomnessGeneratedEvent'(b1), $1_from_bcs_deserialize'$1_randomness_RandomnessGeneratedEvent'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x4::royalty::Royalty>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_royalty_Royalty'($1_from_bcs_deserialize'$4_royalty_Royalty'(b1), $1_from_bcs_deserialize'$4_royalty_Royalty'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x4::collection::ConcurrentSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_ConcurrentSupply'($1_from_bcs_deserialize'$4_collection_ConcurrentSupply'(b1), $1_from_bcs_deserialize'$4_collection_ConcurrentSupply'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x4::collection::Collection>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_Collection'($1_from_bcs_deserialize'$4_collection_Collection'(b1), $1_from_bcs_deserialize'$4_collection_Collection'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x4::collection::FixedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_FixedSupply'($1_from_bcs_deserialize'$4_collection_FixedSupply'(b1), $1_from_bcs_deserialize'$4_collection_FixedSupply'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x4::collection::Mint>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_Mint'($1_from_bcs_deserialize'$4_collection_Mint'(b1), $1_from_bcs_deserialize'$4_collection_Mint'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x4::collection::MintEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_MintEvent'($1_from_bcs_deserialize'$4_collection_MintEvent'(b1), $1_from_bcs_deserialize'$4_collection_MintEvent'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x4::collection::UnlimitedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_UnlimitedSupply'($1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(b1), $1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x4::token::Token>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_token_Token'($1_from_bcs_deserialize'$4_token_Token'(b1), $1_from_bcs_deserialize'$4_token_Token'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x4::token::TokenIdentifiers>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_token_TokenIdentifiers'($1_from_bcs_deserialize'$4_token_TokenIdentifiers'(b1), $1_from_bcs_deserialize'$4_token_TokenIdentifiers'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'($1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'(b1), $1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'($1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'(b1), $1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMintedEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent'($1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent'(b1), $1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::TokenData>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'($1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(b1), $1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'($1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'(b1), $1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'#0'($1_from_bcs_deserialize'#0'(b1), $1_from_bcs_deserialize'#0'(b2)))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.spec.move:5:9+288
axiom (forall a: $1_permissioned_signer_GrantedPermissionHandles :: $IsValid'$1_permissioned_signer_GrantedPermissionHandles'(a) ==> ((var $range_0 := $Range(0, LenVec(a->$active_handles)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
((var $range_2 := $Range(0, LenVec(a->$active_handles)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var j := $i_3;
((!$IsEqual'num'(i, j) ==> !$IsEqual'address'(ReadVec(a->$active_handles, i), ReadVec(a->$active_handles, j)))))))))))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:8:9+113
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_keccak256(b1), $1_aptos_hash_spec_keccak256(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:13:9+129
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha2_512_internal(b1), $1_aptos_hash_spec_sha2_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:18:9+129
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha3_512_internal(b1), $1_aptos_hash_spec_sha3_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:23:9+131
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_ripemd160_internal(b1), $1_aptos_hash_spec_ripemd160_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:28:9+135
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_blake2b_256_internal(b1), $1_aptos_hash_spec_blake2b_256_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:199:5+93
function {:inline} $1_vector_$is_empty'address'(self: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'address'(self), 0)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:199:5+93
function {:inline} $1_vector_$is_empty'vec'u8''(self: Vec (Vec (int))): bool {
    $IsEqual'u64'($1_vector_$length'vec'u8''(self), 0)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:199:5+93
function {:inline} $1_vector_$is_empty'$1_string_String'(self: Vec ($1_string_String)): bool {
    $IsEqual'u64'($1_vector_$length'$1_string_String'(self), 0)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:199:5+93
function {:inline} $1_vector_$is_empty'$1_aggregator_v2_AggregatorSnapshot'u64''(self: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')): bool {
    $IsEqual'u64'($1_vector_$length'$1_aggregator_v2_AggregatorSnapshot'u64''(self), 0)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:199:5+93
function {:inline} $1_vector_$is_empty'$4_royalty_Royalty'(self: Vec ($4_royalty_Royalty)): bool {
    $IsEqual'u64'($1_vector_$length'$4_royalty_Royalty'(self), 0)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:199:5+93
function {:inline} $1_vector_$is_empty'$4_collection_ConcurrentSupply'(self: Vec ($4_collection_ConcurrentSupply)): bool {
    $IsEqual'u64'($1_vector_$length'$4_collection_ConcurrentSupply'(self), 0)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+81
function {:inline} $1_option_spec_none'$1_string_String'(): $1_option_Option'$1_string_String' {
    $1_option_Option'$1_string_String'($EmptyVec'$1_string_String'())
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+81
function {:inline} $1_option_spec_none'$1_aggregator_v2_AggregatorSnapshot'u64''(): $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'' {
    $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''($EmptyVec'$1_aggregator_v2_AggregatorSnapshot'u64''())
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+81
function {:inline} $1_option_spec_none'$4_royalty_Royalty'(): $1_option_Option'$4_royalty_Royalty' {
    $1_option_Option'$4_royalty_Royalty'($EmptyVec'$4_royalty_Royalty'())
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'address'(e: int): $1_option_Option'address' {
    $1_option_Option'address'(MakeVec1(e))
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'$1_aggregator_v2_AggregatorSnapshot'u64''(e: $1_aggregator_v2_AggregatorSnapshot'u64'): $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'' {
    $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''(MakeVec1(e))
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'$4_collection_ConcurrentSupply'(e: $4_collection_ConcurrentSupply): $1_option_Option'$4_collection_ConcurrentSupply' {
    $1_option_Option'$4_collection_ConcurrentSupply'(MakeVec1(e))
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+90
function {:inline} $1_option_spec_is_none'address'(self: $1_option_Option'address'): bool {
    $1_vector_$is_empty'address'(self->$vec)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+90
function {:inline} $1_option_spec_is_none'vec'u8''(self: $1_option_Option'vec'u8''): bool {
    $1_vector_$is_empty'vec'u8''(self->$vec)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+90
function {:inline} $1_option_spec_is_none'$1_string_String'(self: $1_option_Option'$1_string_String'): bool {
    $1_vector_$is_empty'$1_string_String'(self->$vec)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+90
function {:inline} $1_option_spec_is_none'$4_royalty_Royalty'(self: $1_option_Option'$4_royalty_Royalty'): bool {
    $1_vector_$is_empty'$4_royalty_Royalty'(self->$vec)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+90
function {:inline} $1_option_spec_is_none'$4_collection_ConcurrentSupply'(self: $1_option_Option'$4_collection_ConcurrentSupply'): bool {
    $1_vector_$is_empty'$4_collection_ConcurrentSupply'(self->$vec)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+91
function {:inline} $1_option_spec_is_some'$1_string_String'(self: $1_option_Option'$1_string_String'): bool {
    !$1_vector_$is_empty'$1_string_String'(self->$vec)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+91
function {:inline} $1_option_spec_is_some'$1_aggregator_v2_AggregatorSnapshot'u64''(self: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''): bool {
    !$1_vector_$is_empty'$1_aggregator_v2_AggregatorSnapshot'u64''(self->$vec)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+91
function {:inline} $1_option_spec_is_some'$4_royalty_Royalty'(self: $1_option_Option'$4_royalty_Royalty'): bool {
    !$1_vector_$is_empty'$4_royalty_Royalty'(self->$vec)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+91
function {:inline} $1_option_spec_is_some'$4_collection_ConcurrentSupply'(self: $1_option_Option'$4_collection_ConcurrentSupply'): bool {
    !$1_vector_$is_empty'$4_collection_ConcurrentSupply'(self->$vec)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'vec'u8''(self: $1_option_Option'vec'u8''): Vec (int) {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'$1_string_String'(self: $1_option_Option'$1_string_String'): $1_string_String {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'$1_aggregator_v2_AggregatorSnapshot'u64''(self: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''): $1_aggregator_v2_AggregatorSnapshot'u64' {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'$4_royalty_Royalty'(self: $1_option_Option'$4_royalty_Royalty'): $4_royalty_Royalty {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'$4_collection_ConcurrentSupply'(self: $1_option_Option'$4_collection_ConcurrentSupply'): $4_collection_ConcurrentSupply {
    ReadVec(self->$vec, 0)
}

// struct option::Option<address> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'address' {
    $1_option_Option'address'($vec: Vec (int))
}
function {:inline} $Update'$1_option_Option'address''_vec(s: $1_option_Option'address', x: Vec (int)): $1_option_Option'address' {
    $1_option_Option'address'(x)
}
function $IsValid'$1_option_Option'address''(s: $1_option_Option'address'): bool {
    $IsValid'vec'address''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'address''(s1: $1_option_Option'address', s2: $1_option_Option'address'): bool {
    $IsEqual'vec'address''(s1->$vec, s2->$vec)}

// struct option::Option<vector<u8>> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'vec'u8'' {
    $1_option_Option'vec'u8''($vec: Vec (Vec (int)))
}
function {:inline} $Update'$1_option_Option'vec'u8'''_vec(s: $1_option_Option'vec'u8'', x: Vec (Vec (int))): $1_option_Option'vec'u8'' {
    $1_option_Option'vec'u8''(x)
}
function $IsValid'$1_option_Option'vec'u8'''(s: $1_option_Option'vec'u8''): bool {
    $IsValid'vec'vec'u8'''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'vec'u8'''(s1: $1_option_Option'vec'u8'', s2: $1_option_Option'vec'u8''): bool {
    $IsEqual'vec'vec'u8'''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::string::String> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_string_String' {
    $1_option_Option'$1_string_String'($vec: Vec ($1_string_String))
}
function {:inline} $Update'$1_option_Option'$1_string_String''_vec(s: $1_option_Option'$1_string_String', x: Vec ($1_string_String)): $1_option_Option'$1_string_String' {
    $1_option_Option'$1_string_String'(x)
}
function $IsValid'$1_option_Option'$1_string_String''(s: $1_option_Option'$1_string_String'): bool {
    $IsValid'vec'$1_string_String''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_string_String''(s1: $1_option_Option'$1_string_String', s2: $1_option_Option'$1_string_String'): bool {
    $IsEqual'vec'$1_string_String''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::aggregator_v2::AggregatorSnapshot<u64>> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'' {
    $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''($vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))
}
function {:inline} $Update'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''_vec(s: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'', x: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')): $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'' {
    $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''(x)
}
function $IsValid'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(s: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''): bool {
    $IsValid'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(s1: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'', s2: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''): bool {
    $IsEqual'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(s1->$vec, s2->$vec)}

// struct option::Option<0x4::royalty::Royalty> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$4_royalty_Royalty' {
    $1_option_Option'$4_royalty_Royalty'($vec: Vec ($4_royalty_Royalty))
}
function {:inline} $Update'$1_option_Option'$4_royalty_Royalty''_vec(s: $1_option_Option'$4_royalty_Royalty', x: Vec ($4_royalty_Royalty)): $1_option_Option'$4_royalty_Royalty' {
    $1_option_Option'$4_royalty_Royalty'(x)
}
function $IsValid'$1_option_Option'$4_royalty_Royalty''(s: $1_option_Option'$4_royalty_Royalty'): bool {
    $IsValid'vec'$4_royalty_Royalty''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$4_royalty_Royalty''(s1: $1_option_Option'$4_royalty_Royalty', s2: $1_option_Option'$4_royalty_Royalty'): bool {
    $IsEqual'vec'$4_royalty_Royalty''(s1->$vec, s2->$vec)}

// struct option::Option<0x4::collection::ConcurrentSupply> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$4_collection_ConcurrentSupply' {
    $1_option_Option'$4_collection_ConcurrentSupply'($vec: Vec ($4_collection_ConcurrentSupply))
}
function {:inline} $Update'$1_option_Option'$4_collection_ConcurrentSupply''_vec(s: $1_option_Option'$4_collection_ConcurrentSupply', x: Vec ($4_collection_ConcurrentSupply)): $1_option_Option'$4_collection_ConcurrentSupply' {
    $1_option_Option'$4_collection_ConcurrentSupply'(x)
}
function $IsValid'$1_option_Option'$4_collection_ConcurrentSupply''(s: $1_option_Option'$4_collection_ConcurrentSupply'): bool {
    $IsValid'vec'$4_collection_ConcurrentSupply''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$4_collection_ConcurrentSupply''(s1: $1_option_Option'$4_collection_ConcurrentSupply', s2: $1_option_Option'$4_collection_ConcurrentSupply'): bool {
    $IsEqual'vec'$4_collection_ConcurrentSupply''(s1->$vec, s2->$vec)}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.spec.move:28:9+50
function  $1_string_spec_internal_check_utf8(v: Vec (int)): bool;
axiom (forall v: Vec (int) ::
(var $$res := $1_string_spec_internal_check_utf8(v);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.spec.move:29:9+64
function  $1_string_spec_internal_is_char_boundary(v: Vec (int), i: int): bool;
axiom (forall v: Vec (int), i: int ::
(var $$res := $1_string_spec_internal_is_char_boundary(v, i);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.spec.move:30:9+72
function  $1_string_spec_internal_sub_string(v: Vec (int), i: int, j: int): Vec (int);
axiom (forall v: Vec (int), i: int, j: int ::
(var $$res := $1_string_spec_internal_sub_string(v, i, j);
$IsValid'vec'u8''($$res)));

// struct string::String at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:12:5+70
datatype $1_string_String {
    $1_string_String($bytes: Vec (int))
}
function {:inline} $Update'$1_string_String'_bytes(s: $1_string_String, x: Vec (int)): $1_string_String {
    $1_string_String(x)
}
function $IsValid'$1_string_String'(s: $1_string_String): bool {
    $IsValid'vec'u8''(s->$bytes)
}
function {:inline} $IsEqual'$1_string_String'(s1: $1_string_String, s2: $1_string_String): bool {
    $IsEqual'vec'u8''(s1->$bytes, s2->$bytes)}

// fun string::append [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:47:5+90
procedure {:inline 1} $1_string_append(_$t0: $Mutation ($1_string_String), _$t1: $1_string_String) returns ($ret0: $Mutation ($1_string_String))
{
    // declare local variables
    var $t2: $Mutation (Vec (int));
    var $t3: Vec (int);
    var $t4: int;
    var $t0: $Mutation ($1_string_String);
    var $t1: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:47:5+1
    assume {:print "$at(16,1383,1384)"} true;
    $temp_0'$1_string_String' := $Dereference($t0);
    assume {:print "$track_local(4,1,0):", $temp_0'$1_string_String'} $temp_0'$1_string_String' == $temp_0'$1_string_String';

    // trace_local[r]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:47:5+1
    assume {:print "$track_local(4,1,1):", $t1} $t1 == $t1;

    // $t2 := borrow_field<0x1::string::String>.bytes($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:48:9+26
    assume {:print "$at(16,1441,1467)"} true;
    $t2 := $ChildMutation($t0, 0, $Dereference($t0)->$bytes);

    // $t3 := get_field<0x1::string::String>.bytes($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:48:27+7
    $t3 := $t1->$bytes;

    // vector::append<u8>($t2, $t3) on_abort goto L2 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:48:9+26
    call $t2 := $1_vector_append'u8'($t2, $t3);
    if ($abort_flag) {
        assume {:print "$at(16,1441,1467)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(4,1):", $t4} $t4 == $t4;
        goto L2;
    }

    // write_back[Reference($t0).bytes (vector<u8>)]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:48:9+26
    $t0 := $UpdateMutation($t0, $Update'$1_string_String'_bytes($Dereference($t0), $Dereference($t2)));

    // trace_local[self]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:48:9+26
    $temp_0'$1_string_String' := $Dereference($t0);
    assume {:print "$track_local(4,1,0):", $temp_0'$1_string_String'} $temp_0'$1_string_String' == $temp_0'$1_string_String';

    // trace_local[self]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:48:9+26
    $temp_0'$1_string_String' := $Dereference($t0);
    assume {:print "$track_local(4,1,0):", $temp_0'$1_string_String'} $temp_0'$1_string_String' == $temp_0'$1_string_String';

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:49:5+1
    assume {:print "$at(16,1472,1473)"} true;
L1:

    // return () at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:49:5+1
    assume {:print "$at(16,1472,1473)"} true;
    $ret0 := $t0;
    return;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:49:5+1
L2:

    // abort($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:49:5+1
    assume {:print "$at(16,1472,1473)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun string::length [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:42:5+73
procedure {:inline 1} $1_string_length(_$t0: $1_string_String) returns ($ret0: int)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: int;
    var $t3: int;
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:42:5+1
    assume {:print "$at(16,1278,1279)"} true;
    assume {:print "$track_local(4,4,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::string::String>.bytes($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:43:9+19
    assume {:print "$at(16,1326,1345)"} true;
    $t1 := $t0->$bytes;

    // $t2 := vector::length<u8>($t1) on_abort goto L2 with $t3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:43:9+19
    call $t2 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(16,1326,1345)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(4,4):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:43:9+19
    assume {:print "$track_return(4,4,0):", $t2} $t2 == $t2;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:5+1
    assume {:print "$at(16,1350,1351)"} true;
L1:

    // return $t2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:5+1
    assume {:print "$at(16,1350,1351)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:5+1
L2:

    // abort($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:5+1
    assume {:print "$at(16,1350,1351)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun string::bytes [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:32:5+72
procedure {:inline 1} $1_string_bytes(_$t0: $1_string_String) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t1: Vec (int);
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:32:5+1
    assume {:print "$at(16,1018,1019)"} true;
    assume {:print "$track_local(4,6,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::string::String>.bytes($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:33:9+11
    assume {:print "$at(16,1073,1084)"} true;
    $t1 := $t0->$bytes;

    // trace_return[0]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:33:9+11
    assume {:print "$track_return(4,6,0):", $t1} $t1 == $t1;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:34:5+1
    assume {:print "$at(16,1089,1090)"} true;
L1:

    // return $t1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:34:5+1
    assume {:print "$at(16,1089,1090)"} true;
    $ret0 := $t1;
    return;

}

// fun string::sub_string [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:72:5+355
procedure {:inline 1} $1_string_sub_string(_$t0: $1_string_String, _$t1: int, _$t2: int) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t3: Vec (int);
    var $t4: int;
    var $t5: bool;
    var $t6: bool;
    var $t7: bool;
    var $t8: Vec (int);
    var $t9: int;
    var $t10: int;
    var $t11: bool;
    var $t12: bool;
    var $t13: bool;
    var $t14: bool;
    var $t15: Vec (int);
    var $t16: $1_string_String;
    var $t17: int;
    var $t18: bool;
    var $t19: bool;
    var $t20: bool;
    var $t0: $1_string_String;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'bool': bool;
    var $temp_0'u64': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:72:5+1
    assume {:print "$at(16,2448,2449)"} true;
    assume {:print "$track_local(4,11,0):", $t0} $t0 == $t0;

    // trace_local[i]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:72:5+1
    assume {:print "$track_local(4,11,1):", $t1} $t1 == $t1;

    // trace_local[j]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:72:5+1
    assume {:print "$track_local(4,11,2):", $t2} $t2 == $t2;

    // $t8 := get_field<0x1::string::String>.bytes($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:73:21+11
    assume {:print "$at(16,2531,2542)"} true;
    $t8 := $t0->$bytes;

    // trace_local[bytes]($t8) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:73:21+11
    assume {:print "$track_local(4,11,3):", $t8} $t8 == $t8;

    // $t9 := vector::length<u8>($t8) on_abort goto L12 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:74:17+14
    assume {:print "$at(16,2560,2574)"} true;
    call $t9 := $1_vector_length'u8'($t8);
    if ($abort_flag) {
        assume {:print "$at(16,2560,2574)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(4,11):", $t10} $t10 == $t10;
        goto L12;
    }

    // trace_local[l]($t9) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:74:17+14
    assume {:print "$track_local(4,11,4):", $t9} $t9 == $t9;

    // $t11 := <=($t2, $t9) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+6
    assume {:print "$at(16,2605,2611)"} true;
    call $t11 := $Le($t2, $t9);

    // if ($t11) goto L1 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+16
    if ($t11) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:23+1
L1:

    // $t12 := <=($t1, $t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:23+6
    assume {:print "$at(16,2615,2621)"} true;
    call $t12 := $Le($t1, $t2);

    // $t5 := $t12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:23+6
    $t5 := $t12;

    // trace_local[$t9]($t12) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:23+6
    assume {:print "$track_local(4,11,5):", $t12} $t12 == $t12;

    // label L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+55
L10:

    // if ($t5) goto L3 else goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+55
    assume {:print "$at(16,2605,2660)"} true;
    if ($t5) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:59+5
L3:

    // $t13 := opaque begin: string::internal_is_char_boundary($t8, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:33+35
    assume {:print "$at(16,2625,2660)"} true;

    // assume WellFormed($t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:33+35
    assume $IsValid'bool'($t13);

    // assume Eq<bool>($t13, string::spec_internal_is_char_boundary($t8, $t1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:33+35
    assume $IsEqual'bool'($t13, $1_string_spec_internal_is_char_boundary($t8, $t1));

    // $t13 := opaque end: string::internal_is_char_boundary($t8, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:33+35

    // $t6 := $t13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:33+35
    $t6 := $t13;

    // trace_local[$t7]($t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:33+35
    assume {:print "$track_local(4,11,6):", $t13} $t13 == $t13;

    // label L9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+94
L9:

    // if ($t6) goto L5 else goto L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+94
    assume {:print "$at(16,2605,2699)"} true;
    if ($t6) { goto L5; } else { goto L4; }

    // label L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:98+5
L5:

    // $t14 := opaque begin: string::internal_is_char_boundary($t8, $t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:72+35
    assume {:print "$at(16,2664,2699)"} true;

    // assume WellFormed($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:72+35
    assume $IsValid'bool'($t14);

    // assume Eq<bool>($t14, string::spec_internal_is_char_boundary($t8, $t2)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:72+35
    assume $IsEqual'bool'($t14, $1_string_spec_internal_is_char_boundary($t8, $t2));

    // $t14 := opaque end: string::internal_is_char_boundary($t8, $t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:72+35

    // $t7 := $t14 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:72+35
    $t7 := $t14;

    // trace_local[$t6]($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:72+35
    assume {:print "$track_local(4,11,7):", $t14} $t14 == $t14;

    // label L8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:75:9+6
    assume {:print "$at(16,2584,2590)"} true;
L8:

    // if ($t7) goto L7 else goto L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:75:9+6
    assume {:print "$at(16,2584,2590)"} true;
    if ($t7) { goto L7; } else { goto L6; }

    // label L7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:79:45+5
    assume {:print "$at(16,2783,2788)"} true;
L7:

    // $t15 := opaque begin: string::internal_sub_string($t8, $t1, $t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:79:25+32
    assume {:print "$at(16,2763,2795)"} true;

    // assume WellFormed($t15) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:79:25+32
    assume $IsValid'vec'u8''($t15);

    // assume Eq<vector<u8>>($t15, string::spec_internal_sub_string($t8, $t1, $t2)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:79:25+32
    assume $IsEqual'vec'u8''($t15, $1_string_spec_internal_sub_string($t8, $t1, $t2));

    // $t15 := opaque end: string::internal_sub_string($t8, $t1, $t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:79:25+32

    // $t16 := pack 0x1::string::String($t15) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:79:9+50
    $t16 := $1_string_String($t15);

    // trace_return[0]($t16) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:72:66+294
    assume {:print "$at(16,2509,2803)"} true;
    assume {:print "$track_return(4,11,0):", $t16} $t16 == $t16;

    // goto L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:72:66+294
    goto L11;

    // label L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:75:9+6
    assume {:print "$at(16,2584,2590)"} true;
L6:

    // $t17 := 2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:77:13+14
    assume {:print "$at(16,2713,2727)"} true;
    $t17 := 2;
    assume $IsValid'u64'($t17);

    // trace_abort($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:75:9+6
    assume {:print "$at(16,2584,2590)"} true;
    assume {:print "$track_abort(4,11):", $t17} $t17 == $t17;

    // $t10 := move($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:75:9+6
    $t10 := $t17;

    // goto L12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:75:9+6
    goto L12;

    // label L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+94
    assume {:print "$at(16,2605,2699)"} true;
L4:

    // $t18 := false at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+94
    assume {:print "$at(16,2605,2699)"} true;
    $t18 := false;
    assume $IsValid'bool'($t18);

    // $t7 := $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+94
    $t7 := $t18;

    // trace_local[$t6]($t18) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+94
    assume {:print "$track_local(4,11,7):", $t18} $t18 == $t18;

    // goto L8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+94
    goto L8;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+55
L2:

    // $t19 := false at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+55
    assume {:print "$at(16,2605,2660)"} true;
    $t19 := false;
    assume $IsValid'bool'($t19);

    // $t6 := $t19 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+55
    $t6 := $t19;

    // trace_local[$t7]($t19) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+55
    assume {:print "$track_local(4,11,6):", $t19} $t19 == $t19;

    // goto L9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+55
    goto L9;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+16
L0:

    // $t20 := false at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+16
    assume {:print "$at(16,2605,2621)"} true;
    $t20 := false;
    assume $IsValid'bool'($t20);

    // $t5 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+16
    $t5 := $t20;

    // trace_local[$t9]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+16
    assume {:print "$track_local(4,11,5):", $t20} $t20 == $t20;

    // goto L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:76:13+16
    goto L10;

    // label L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:80:5+1
    assume {:print "$at(16,2802,2803)"} true;
L11:

    // return $t16 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:80:5+1
    assume {:print "$at(16,2802,2803)"} true;
    $ret0 := $t16;
    return;

    // label L12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:80:5+1
L12:

    // abort($t10) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:80:5+1
    assume {:print "$at(16,2802,2803)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun string::utf8 [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:17:5+133
procedure {:inline 1} $1_string_utf8(_$t0: Vec (int)) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: bool;
    var $t2: $1_string_String;
    var $t3: int;
    var $t0: Vec (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[bytes]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:17:5+1
    assume {:print "$at(16,552,553)"} true;
    assume {:print "$track_local(4,13,0):", $t0} $t0 == $t0;

    // $t1 := opaque begin: string::internal_check_utf8($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:17+27
    assume {:print "$at(16,613,640)"} true;

    // assume WellFormed($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:17+27
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, string::spec_internal_check_utf8($t0)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:17+27
    assume $IsEqual'bool'($t1, $1_string_spec_internal_check_utf8($t0));

    // $t1 := opaque end: string::internal_check_utf8($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:17+27

    // if ($t1) goto L1 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:9+6
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+13
    assume {:print "$at(16,666,679)"} true;
L1:

    // $t2 := pack 0x1::string::String($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+13
    assume {:print "$at(16,666,679)"} true;
    $t2 := $1_string_String($t0);

    // trace_return[0]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:17:48+90
    assume {:print "$at(16,595,685)"} true;
    assume {:print "$track_return(4,13,0):", $t2} $t2 == $t2;

    // goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:17:48+90
    goto L2;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:46+13
    assume {:print "$at(16,642,655)"} true;
L0:

    // $t3 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:46+13
    assume {:print "$at(16,642,655)"} true;
    $t3 := 1;
    assume $IsValid'u64'($t3);

    // trace_abort($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:9+6
    assume {:print "$at(16,605,611)"} true;
    assume {:print "$track_abort(4,13):", $t3} $t3 == $t3;

    // goto L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:9+6
    goto L3;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:5+1
    assume {:print "$at(16,684,685)"} true;
L2:

    // return $t2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:5+1
    assume {:print "$at(16,684,685)"} true;
    $ret0 := $t2;
    return;

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:5+1
L3:

    // abort($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:5+1
    assume {:print "$at(16,684,685)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:26:5+77
function {:inline} $1_signer_$address_of(s: $signer): int {
    $1_signer_$borrow_address(s)
}

// fun signer::address_of [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:26:5+77
procedure {:inline 1} $1_signer_address_of(_$t0: $signer) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:26:5+1
    assume {:print "$at(15,794,795)"} true;
    assume {:print "$track_local(5,0,0):", $t0} $t0 == $t0;

    // $t1 := signer::borrow_address($t0) on_abort goto L2 with $t2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:27:10+17
    assume {:print "$at(15,848,865)"} true;
    call $t1 := $1_signer_borrow_address($t0);
    if ($abort_flag) {
        assume {:print "$at(15,848,865)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(5,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:27:9+18
    assume {:print "$track_return(5,0,0):", $t1} $t1 == $t1;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:28:5+1
    assume {:print "$at(15,870,871)"} true;
L1:

    // return $t1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:28:5+1
    assume {:print "$at(15,870,871)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:28:5+1
L2:

    // abort($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:28:5+1
    assume {:print "$at(15,870,871)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun error::already_exists [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:3+71
procedure {:inline 1} $1_error_already_exists(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:3+1
    assume {:print "$at(10,3585,3586)"} true;
    assume {:print "$track_local(6,1,0):", $t0} $t0 == $t0;

    // $t1 := 8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:54+14
    $t1 := 8;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume {:print "$at(10,3626,3654)"} true;

    // assume WellFormed($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28

    // trace_return[0]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume {:print "$track_return(6,1,0):", $t3} $t3 == $t3;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:73+1
L1:

    // return $t3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:73+1
    assume {:print "$at(10,3655,3656)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_argument [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:3+76
procedure {:inline 1} $1_error_invalid_argument(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:3+1
    assume {:print "$at(10,3082,3083)"} true;
    assume {:print "$track_local(6,4,0):", $t0} $t0 == $t0;

    // $t1 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:57+16
    $t1 := 1;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume {:print "$at(10,3126,3156)"} true;

    // assume WellFormed($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30

    // trace_return[0]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume {:print "$track_return(6,4,0):", $t3} $t3 == $t3;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:78+1
L1:

    // return $t3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:78+1
    assume {:print "$at(10,3157,3158)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_state [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:3+70
procedure {:inline 1} $1_error_invalid_state(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:3+1
    assume {:print "$at(10,3232,3233)"} true;
    assume {:print "$track_local(6,5,0):", $t0} $t0 == $t0;

    // $t1 := 3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:54+13
    $t1 := 3;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume {:print "$at(10,3273,3300)"} true;

    // assume WellFormed($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27

    // trace_return[0]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume {:print "$track_return(6,5,0):", $t3} $t3 == $t3;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:72+1
L1:

    // return $t3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:72+1
    assume {:print "$at(10,3301,3302)"} true;
    $ret0 := $t3;
    return;

}

// fun error::not_found [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:3+61
procedure {:inline 1} $1_error_not_found(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:3+1
    assume {:print "$at(10,3461,3462)"} true;
    assume {:print "$track_local(6,6,0):", $t0} $t0 == $t0;

    // $t1 := 6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:49+9
    $t1 := 6;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume {:print "$at(10,3497,3520)"} true;

    // assume WellFormed($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23

    // trace_return[0]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume {:print "$track_return(6,6,0):", $t3} $t3 == $t3;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:63+1
L1:

    // return $t3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:63+1
    assume {:print "$at(10,3521,3522)"} true;
    $ret0 := $t3;
    return;

}

// fun error::out_of_range [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:3+68
procedure {:inline 1} $1_error_out_of_range(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:3+1
    assume {:print "$at(10,3161,3162)"} true;
    assume {:print "$track_local(6,8,0):", $t0} $t0 == $t0;

    // $t1 := 2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:53+12
    $t1 := 2;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume {:print "$at(10,3201,3227)"} true;

    // assume WellFormed($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26

    // trace_return[0]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume {:print "$track_return(6,8,0):", $t3} $t3 == $t3;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:70+1
L1:

    // return $t3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:70+1
    assume {:print "$at(10,3228,3229)"} true;
    $ret0 := $t3;
    return;

}

// fun error::permission_denied [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:3+77
procedure {:inline 1} $1_error_permission_denied(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:3+1
    assume {:print "$at(10,3381,3382)"} true;
    assume {:print "$track_local(6,9,0):", $t0} $t0 == $t0;

    // $t1 := 5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:57+17
    $t1 := 5;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume {:print "$at(10,3425,3456)"} true;

    // assume WellFormed($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31

    // trace_return[0]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume {:print "$track_return(6,9,0):", $t3} $t3 == $t3;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:79+1
L1:

    // return $t3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:79+1
    assume {:print "$at(10,3457,3458)"} true;
    $ret0 := $t3;
    return;

}

// fun error::unauthenticated [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:3+73
procedure {:inline 1} $1_error_unauthenticated(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:3+1
    assume {:print "$at(10,3305,3306)"} true;
    assume {:print "$track_local(6,11,0):", $t0} $t0 == $t0;

    // $t1 := 4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:55+15
    $t1 := 4;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:45+29
    assume {:print "$at(10,3347,3376)"} true;

    // assume WellFormed($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:45+29
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:45+29
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:45+29

    // trace_return[0]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:45+29
    assume {:print "$track_return(6,11,0):", $t3} $t3 == $t3;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:75+1
L1:

    // return $t3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:75+1
    assume {:print "$at(10,3377,3378)"} true;
    $ret0 := $t3;
    return;

}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.spec.move:61:10+40
function  $1_features_spec_is_enabled(feature: int): bool;
axiom (forall feature: int ::
(var $$res := $1_features_spec_is_enabled(feature);
$IsValid'bool'($$res)));

// struct features::Features at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:742:5+61
datatype $1_features_Features {
    $1_features_Features($features: Vec (bv8))
}
function {:inline} $Update'$1_features_Features'_features(s: $1_features_Features, x: Vec (bv8)): $1_features_Features {
    $1_features_Features(x)
}
function $IsValid'$1_features_Features'(s: $1_features_Features): bool {
    $IsValid'vec'bv8''(s->$features)
}
function {:inline} $IsEqual'$1_features_Features'(s1: $1_features_Features, s2: $1_features_Features): bool {
    $IsEqual'vec'bv8''(s1->$features, s2->$features)}
var $1_features_Features_$memory: $Memory $1_features_Features;

// fun features::module_event_migration_enabled [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:472:5+118
procedure {:inline 1} $1_features_module_event_migration_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 57 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:473:20+22
    assume {:print "$at(8,17014,17036)"} true;
    $t0 := 57;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:473:9+34

    // assume WellFormed($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:473:9+34
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:473:9+34
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:473:9+34

    // trace_return[0]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:473:9+34
    assume {:print "$track_return(7,109,0):", $t1} $t1 == $t1;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:474:5+1
    assume {:print "$at(8,17042,17043)"} true;
L1:

    // return $t1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:474:5+1
    assume {:print "$at(8,17042,17043)"} true;
    $ret0 := $t1;
    return;

}

// struct type_info::TypeInfo at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/type_info.move:19:5+145
datatype $1_type_info_TypeInfo {
    $1_type_info_TypeInfo($account_address: int, $module_name: Vec (int), $struct_name: Vec (int))
}
function {:inline} $Update'$1_type_info_TypeInfo'_account_address(s: $1_type_info_TypeInfo, x: int): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(x, s->$module_name, s->$struct_name)
}
function {:inline} $Update'$1_type_info_TypeInfo'_module_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(s->$account_address, x, s->$struct_name)
}
function {:inline} $Update'$1_type_info_TypeInfo'_struct_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(s->$account_address, s->$module_name, x)
}
function $IsValid'$1_type_info_TypeInfo'(s: $1_type_info_TypeInfo): bool {
    $IsValid'address'(s->$account_address)
      && $IsValid'vec'u8''(s->$module_name)
      && $IsValid'vec'u8''(s->$struct_name)
}
function {:inline} $IsEqual'$1_type_info_TypeInfo'(s1: $1_type_info_TypeInfo, s2: $1_type_info_TypeInfo): bool {
    $IsEqual'address'(s1->$account_address, s2->$account_address)
    && $IsEqual'vec'u8''(s1->$module_name, s2->$module_name)
    && $IsEqual'vec'u8''(s1->$struct_name, s2->$struct_name)}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u8'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u8'(bytes);
$IsValid'u8'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u64'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u64'(bytes);
$IsValid'u64'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u256'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u256'(bytes);
$IsValid'u256'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'address'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'address'(bytes);
$IsValid'address'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'signer'(bytes: Vec (int)): $signer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'signer'(bytes);
$IsValid'signer'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u8''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u8''(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u64''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u64''(bytes);
$IsValid'vec'u64''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'address''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'address''(bytes);
$IsValid'vec'address''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'vec'u8'''(bytes: Vec (int)): Vec (Vec (int));
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'vec'u8'''(bytes);
$IsValid'vec'vec'u8'''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_string_String''(bytes: Vec (int)): Vec ($1_string_String);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_string_String''(bytes);
$IsValid'vec'$1_string_String''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(bytes: Vec (int)): Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(bytes);
$IsValid'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$4_royalty_Royalty''(bytes: Vec (int)): Vec ($4_royalty_Royalty);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$4_royalty_Royalty''(bytes);
$IsValid'vec'$4_royalty_Royalty''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$4_collection_ConcurrentSupply''(bytes: Vec (int)): Vec ($4_collection_ConcurrentSupply);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$4_collection_ConcurrentSupply''(bytes);
$IsValid'vec'$4_collection_ConcurrentSupply''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''(bytes: Vec (int)): Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''(bytes);
$IsValid'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'#0''(bytes: Vec (int)): Vec (#0);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'#0''(bytes);
$IsValid'vec'#0''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'address''(bytes: Vec (int)): $1_option_Option'address';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'address''(bytes);
$IsValid'$1_option_Option'address''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'vec'u8'''(bytes: Vec (int)): $1_option_Option'vec'u8'';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'vec'u8'''(bytes);
$IsValid'$1_option_Option'vec'u8'''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_string_String''(bytes: Vec (int)): $1_option_Option'$1_string_String';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_string_String''(bytes);
$IsValid'$1_option_Option'$1_string_String''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(bytes: Vec (int)): $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(bytes);
$IsValid'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(bytes: Vec (int)): $1_option_Option'$4_royalty_Royalty';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(bytes);
$IsValid'$1_option_Option'$4_royalty_Royalty''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$4_collection_ConcurrentSupply''(bytes: Vec (int)): $1_option_Option'$4_collection_ConcurrentSupply';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$4_collection_ConcurrentSupply''(bytes);
$IsValid'$1_option_Option'$4_collection_ConcurrentSupply''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_String'(bytes: Vec (int)): $1_string_String;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_String'(bytes);
$IsValid'$1_string_String'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_features_Features'(bytes: Vec (int)): $1_features_Features;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_features_Features'(bytes);
$IsValid'$1_features_Features'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes: Vec (int)): $1_type_info_TypeInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes);
$IsValid'$1_type_info_TypeInfo'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): $1_chain_status_GenesisEndMarker;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'$1_chain_status_GenesisEndMarker'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): $1_timestamp_CurrentTimeMicroseconds;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'$1_timestamp_CurrentTimeMicroseconds'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(bytes: Vec (int)): Table int ($1_permissioned_signer_StoredPermission);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(bytes);
$IsValid'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_permissioned_signer_GrantedPermissionHandles'(bytes: Vec (int)): $1_permissioned_signer_GrantedPermissionHandles;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_permissioned_signer_GrantedPermissionHandles'(bytes);
$IsValid'$1_permissioned_signer_GrantedPermissionHandles'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_permissioned_signer_PermissionStorage'(bytes: Vec (int)): $1_permissioned_signer_PermissionStorage;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_permissioned_signer_PermissionStorage'(bytes);
$IsValid'$1_permissioned_signer_PermissionStorage'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_GUID'(bytes: Vec (int)): $1_guid_GUID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_GUID'(bytes);
$IsValid'$1_guid_GUID'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_ID'(bytes: Vec (int)): $1_guid_ID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_ID'(bytes);
$IsValid'$1_guid_ID'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_CoinRegisterEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_KeyRotationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_object_TransferEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_object_TransferEvent''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(bytes: Vec (int)): $1_event_EventHandle'$4_collection_BurnEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(bytes);
$IsValid'$1_event_EventHandle'$4_collection_BurnEvent''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(bytes: Vec (int)): $1_event_EventHandle'$4_collection_MintEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(bytes);
$IsValid'$1_event_EventHandle'$4_collection_MintEvent''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(bytes: Vec (int)): $1_event_EventHandle'$4_collection_MutationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(bytes);
$IsValid'$1_event_EventHandle'$4_collection_MutationEvent''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(bytes: Vec (int)): $1_event_EventHandle'$4_token_MutationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(bytes);
$IsValid'$1_event_EventHandle'$4_token_MutationEvent''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_Account'(bytes: Vec (int)): $1_account_Account;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_Account'(bytes);
$IsValid'$1_account_Account'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_AccountPermission'(bytes: Vec (int)): $1_account_AccountPermission;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_AccountPermission'(bytes);
$IsValid'$1_account_AccountPermission'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_RotationCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_SignerCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_SignerCapability'(bytes: Vec (int)): $1_account_SignerCapability;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_SignerCapability'(bytes);
$IsValid'$1_account_SignerCapability'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ConstructorRef'(bytes: Vec (int)): $1_object_ConstructorRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ConstructorRef'(bytes);
$IsValid'$1_object_ConstructorRef'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_LinearTransferRef'(bytes: Vec (int)): $1_object_LinearTransferRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_LinearTransferRef'(bytes);
$IsValid'$1_object_LinearTransferRef'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$1_object_ObjectCore''(bytes: Vec (int)): $1_object_Object'$1_object_ObjectCore';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$1_object_ObjectCore''(bytes);
$IsValid'$1_object_Object'$1_object_ObjectCore''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(bytes: Vec (int)): $1_object_Object'$4_collection_Collection';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(bytes);
$IsValid'$1_object_Object'$4_collection_Collection''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ObjectCore'(bytes: Vec (int)): $1_object_ObjectCore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ObjectCore'(bytes);
$IsValid'$1_object_ObjectCore'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TombStone'(bytes: Vec (int)): $1_object_TombStone;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TombStone'(bytes);
$IsValid'$1_object_TombStone'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Transfer'(bytes: Vec (int)): $1_object_Transfer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Transfer'(bytes);
$IsValid'$1_object_Transfer'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferEvent'(bytes: Vec (int)): $1_object_TransferEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferEvent'(bytes);
$IsValid'$1_object_TransferEvent'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferRef'(bytes: Vec (int)): $1_object_TransferRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferRef'(bytes);
$IsValid'$1_object_TransferRef'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Untransferable'(bytes: Vec (int)): $1_object_Untransferable;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Untransferable'(bytes);
$IsValid'$1_object_Untransferable'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(bytes: Vec (int)): $1_aggregator_v2_Aggregator'u64';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(bytes);
$IsValid'$1_aggregator_v2_Aggregator'u64''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_v2_AggregatorSnapshot'u64''(bytes: Vec (int)): $1_aggregator_v2_AggregatorSnapshot'u64';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_v2_AggregatorSnapshot'u64''(bytes);
$IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_v2_DerivedStringSnapshot'(bytes: Vec (int)): $1_aggregator_v2_DerivedStringSnapshot;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_v2_DerivedStringSnapshot'(bytes);
$IsValid'$1_aggregator_v2_DerivedStringSnapshot'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes: Vec (int)): $1_reconfiguration_Configuration;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes);
$IsValid'$1_reconfiguration_Configuration'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_randomness_PerBlockRandomness'(bytes: Vec (int)): $1_randomness_PerBlockRandomness;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_randomness_PerBlockRandomness'(bytes);
$IsValid'$1_randomness_PerBlockRandomness'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_randomness_RandomnessGeneratedEvent'(bytes: Vec (int)): $1_randomness_RandomnessGeneratedEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_randomness_RandomnessGeneratedEvent'(bytes);
$IsValid'$1_randomness_RandomnessGeneratedEvent'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_royalty_Royalty'(bytes: Vec (int)): $4_royalty_Royalty;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_royalty_Royalty'(bytes);
$IsValid'$4_royalty_Royalty'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_ConcurrentSupply'(bytes: Vec (int)): $4_collection_ConcurrentSupply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_ConcurrentSupply'(bytes);
$IsValid'$4_collection_ConcurrentSupply'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_Collection'(bytes: Vec (int)): $4_collection_Collection;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_Collection'(bytes);
$IsValid'$4_collection_Collection'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_FixedSupply'(bytes: Vec (int)): $4_collection_FixedSupply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_FixedSupply'(bytes);
$IsValid'$4_collection_FixedSupply'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_Mint'(bytes: Vec (int)): $4_collection_Mint;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_Mint'(bytes);
$IsValid'$4_collection_Mint'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_MintEvent'(bytes: Vec (int)): $4_collection_MintEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_MintEvent'(bytes);
$IsValid'$4_collection_MintEvent'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(bytes: Vec (int)): $4_collection_UnlimitedSupply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(bytes);
$IsValid'$4_collection_UnlimitedSupply'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_token_Token'(bytes: Vec (int)): $4_token_Token;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_token_Token'(bytes);
$IsValid'$4_token_Token'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_token_TokenIdentifiers'(bytes: Vec (int)): $4_token_TokenIdentifiers;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_token_TokenIdentifiers'(bytes);
$IsValid'$4_token_TokenIdentifiers'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'(bytes: Vec (int)): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'(bytes);
$IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'(bytes: Vec (int)): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'(bytes);
$IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent'(bytes: Vec (int)): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent'(bytes);
$IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(bytes: Vec (int)): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(bytes);
$IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'(bytes: Vec (int)): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'(bytes);
$IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'#0'(bytes: Vec (int)): #0;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'#0'(bytes);
$IsValid'#0'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u8'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u8'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u64'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u64'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u256'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u256'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'address'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'address'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'signer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'signer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u8''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u8''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'vec'u8'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'vec'u8'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_string_String''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_string_String''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$4_royalty_Royalty''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$4_royalty_Royalty''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$4_collection_ConcurrentSupply''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$4_collection_ConcurrentSupply''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'vec'u8'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'vec'u8'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_string_String''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_string_String''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$4_royalty_Royalty''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$4_royalty_Royalty''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$4_collection_ConcurrentSupply''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$4_collection_ConcurrentSupply''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_String'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_String'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_features_Features'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_features_Features'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_permissioned_signer_GrantedPermissionHandles'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_permissioned_signer_GrantedPermissionHandles'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_permissioned_signer_PermissionStorage'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_permissioned_signer_PermissionStorage'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_GUID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_GUID'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_ID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_ID'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_BurnEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_BurnEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MintEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MintEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MutationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MutationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4_token_MutationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4_token_MutationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_Account'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_Account'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_AccountPermission'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_AccountPermission'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_SignerCapability'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_SignerCapability'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ConstructorRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ConstructorRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_LinearTransferRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_LinearTransferRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$1_object_ObjectCore''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$1_object_ObjectCore''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$4_collection_Collection''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$4_collection_Collection''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ObjectCore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ObjectCore'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TombStone'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TombStone'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Transfer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Transfer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Untransferable'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Untransferable'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_v2_AggregatorSnapshot'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_v2_AggregatorSnapshot'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_v2_DerivedStringSnapshot'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_v2_DerivedStringSnapshot'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_randomness_PerBlockRandomness'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_randomness_PerBlockRandomness'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_randomness_RandomnessGeneratedEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_randomness_RandomnessGeneratedEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_royalty_Royalty'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_royalty_Royalty'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_ConcurrentSupply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_ConcurrentSupply'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_Collection'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_Collection'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_FixedSupply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_FixedSupply'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_Mint'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_Mint'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_MintEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_MintEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_UnlimitedSupply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_UnlimitedSupply'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_token_Token'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_token_Token'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_token_TokenIdentifiers'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_token_TokenIdentifiers'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'#0'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'#0'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/transaction_context.spec.move:50:10+36
function  $1_transaction_context_spec_get_txn_hash(): Vec (int);
axiom (var $$res := $1_transaction_context_spec_get_txn_hash();
$IsValid'vec'u8''($$res));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/chain_status.move:35:5+90
function {:inline} $1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker): bool {
    $ResourceExists($1_chain_status_GenesisEndMarker_$memory, 1)
}

// struct chain_status::GenesisEndMarker at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/chain_status.move:12:5+34
datatype $1_chain_status_GenesisEndMarker {
    $1_chain_status_GenesisEndMarker($dummy_field: bool)
}
function {:inline} $Update'$1_chain_status_GenesisEndMarker'_dummy_field(s: $1_chain_status_GenesisEndMarker, x: bool): $1_chain_status_GenesisEndMarker {
    $1_chain_status_GenesisEndMarker(x)
}
function $IsValid'$1_chain_status_GenesisEndMarker'(s: $1_chain_status_GenesisEndMarker): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_chain_status_GenesisEndMarker'(s1: $1_chain_status_GenesisEndMarker, s2: $1_chain_status_GenesisEndMarker): bool {
    s1 == s2
}
var $1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker;

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.spec.move:57:10+111
function {:inline} $1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds): int {
    $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, 1)->$microseconds
}

// struct timestamp::CurrentTimeMicroseconds at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:12:5+73
datatype $1_timestamp_CurrentTimeMicroseconds {
    $1_timestamp_CurrentTimeMicroseconds($microseconds: int)
}
function {:inline} $Update'$1_timestamp_CurrentTimeMicroseconds'_microseconds(s: $1_timestamp_CurrentTimeMicroseconds, x: int): $1_timestamp_CurrentTimeMicroseconds {
    $1_timestamp_CurrentTimeMicroseconds(x)
}
function $IsValid'$1_timestamp_CurrentTimeMicroseconds'(s: $1_timestamp_CurrentTimeMicroseconds): bool {
    $IsValid'u64'(s->$microseconds)
}
function {:inline} $IsEqual'$1_timestamp_CurrentTimeMicroseconds'(s1: $1_timestamp_CurrentTimeMicroseconds, s2: $1_timestamp_CurrentTimeMicroseconds): bool {
    s1 == s2
}
var $1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds;

// fun timestamp::now_microseconds [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:61:5+153
procedure {:inline 1} $1_timestamp_now_microseconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: $1_timestamp_CurrentTimeMicroseconds;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := 0x1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:62:48+16
    assume {:print "$at(214,2511,2527)"} true;
    $t0 := 1;
    assume $IsValid'address'($t0);

    // $t1 := get_global<0x1::timestamp::CurrentTimeMicroseconds>($t0) on_abort goto L2 with $t2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:62:9+56
    if (!$ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t1 := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(214,2472,2528)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(23,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := get_field<0x1::timestamp::CurrentTimeMicroseconds>.microseconds($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:62:9+69
    $t3 := $t1->$microseconds;

    // trace_return[0]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:62:9+69
    assume {:print "$track_return(23,0,0):", $t3} $t3 == $t3;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(214,2546,2547)"} true;
L1:

    // return $t3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(214,2546,2547)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:63:5+1
L2:

    // abort($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(214,2546,2547)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/create_signer.spec.move:47:10+46
function  $1_create_signer_spec_create_signer(addr: int): $signer;
axiom (forall addr: int ::
(var $$res := $1_create_signer_spec_create_signer(addr);
$IsValid'signer'($$res)));

// struct copyable_any::Any at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/copyable_any.move:12:5+92
datatype $1_copyable_any_Any {
    $1_copyable_any_Any($type_name: $1_string_String, $data: Vec (int))
}
function {:inline} $Update'$1_copyable_any_Any'_type_name(s: $1_copyable_any_Any, x: $1_string_String): $1_copyable_any_Any {
    $1_copyable_any_Any(x, s->$data)
}
function {:inline} $Update'$1_copyable_any_Any'_data(s: $1_copyable_any_Any, x: Vec (int)): $1_copyable_any_Any {
    $1_copyable_any_Any(s->$type_name, x)
}
function $IsValid'$1_copyable_any_Any'(s: $1_copyable_any_Any): bool {
    $IsValid'$1_string_String'(s->$type_name)
      && $IsValid'vec'u8''(s->$data)
}
function {:inline} $IsEqual'$1_copyable_any_Any'(s1: $1_copyable_any_Any, s2: $1_copyable_any_Any): bool {
    $IsEqual'$1_string_String'(s1->$type_name, s2->$type_name)
    && $IsEqual'vec'u8''(s1->$data, s2->$data)}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.spec.move:37:10+48
function  $1_permissioned_signer_spec_permission_address(s: $signer): int;
axiom (forall s: $signer ::
(var $$res := $1_permissioned_signer_spec_permission_address(s);
$IsValid'address'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.spec.move:121:10+95
function  $1_permissioned_signer_spec_check_permission_exists'$1_account_AccountPermission'(s: $signer, perm: $1_account_AccountPermission): bool;
axiom (forall s: $signer, perm: $1_account_AccountPermission ::
(var $$res := $1_permissioned_signer_spec_check_permission_exists'$1_account_AccountPermission'(s, perm);
$IsValid'bool'($$res)));

// struct permissioned_signer::GrantedPermissionHandles at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.move:64:5+188
datatype $1_permissioned_signer_GrantedPermissionHandles {
    $1_permissioned_signer_GrantedPermissionHandles($active_handles: Vec (int))
}
function {:inline} $Update'$1_permissioned_signer_GrantedPermissionHandles'_active_handles(s: $1_permissioned_signer_GrantedPermissionHandles, x: Vec (int)): $1_permissioned_signer_GrantedPermissionHandles {
    $1_permissioned_signer_GrantedPermissionHandles(x)
}
function $IsValid'$1_permissioned_signer_GrantedPermissionHandles'(s: $1_permissioned_signer_GrantedPermissionHandles): bool {
    $IsValid'vec'address''(s->$active_handles)
}
function {:inline} $IsEqual'$1_permissioned_signer_GrantedPermissionHandles'(s1: $1_permissioned_signer_GrantedPermissionHandles, s2: $1_permissioned_signer_GrantedPermissionHandles): bool {
    $IsEqual'vec'address''(s1->$active_handles, s2->$active_handles)}
var $1_permissioned_signer_GrantedPermissionHandles_$memory: $Memory $1_permissioned_signer_GrantedPermissionHandles;

// enum permissioned_signer::PermissionStorage at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.move:99:5+257
datatype $1_permissioned_signer_PermissionStorage {
    $1_permissioned_signer_PermissionStorage_V1($perms_V1: Table int ($1_permissioned_signer_StoredPermission))
}
function {:inline} $Update'$1_permissioned_signer_PermissionStorage_V1'_perms(s: $1_permissioned_signer_PermissionStorage, x: Table int ($1_permissioned_signer_StoredPermission)): $1_permissioned_signer_PermissionStorage {
    $1_permissioned_signer_PermissionStorage_V1(x)
}
function $IsValid'$1_permissioned_signer_PermissionStorage_V1'(s: $1_permissioned_signer_PermissionStorage): bool {
    if s is $1_permissioned_signer_PermissionStorage_V1 then
    $IsValid'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(s->$perms_V1)
    else false
}
function {:inline} $Update'$1_permissioned_signer_PermissionStorage'_Table_int_$1_permissioned_signer_StoredPermission_perms(s: $1_permissioned_signer_PermissionStorage, x: Table int ($1_permissioned_signer_StoredPermission)): $1_permissioned_signer_PermissionStorage {
     if s is $1_permissioned_signer_PermissionStorage_V1 then
    $Update'$1_permissioned_signer_PermissionStorage_V1'_perms(s, x)
    else s
}
function $IsValid'$1_permissioned_signer_PermissionStorage'(s: $1_permissioned_signer_PermissionStorage): bool {
     if s is $1_permissioned_signer_PermissionStorage_V1 then
    $IsValid'$1_permissioned_signer_PermissionStorage_V1'(s)
    else false
}
function {:inline} $IsEqual'$1_permissioned_signer_PermissionStorage'(s1: $1_permissioned_signer_PermissionStorage, s2: $1_permissioned_signer_PermissionStorage): bool {
     if s1 is $1_permissioned_signer_PermissionStorage_V1 && s2 is $1_permissioned_signer_PermissionStorage_V1 then
    $IsEqual'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(s1->$perms_V1, s2->$perms_V1)
    else false
}
var $1_permissioned_signer_PermissionStorage_$memory: $Memory $1_permissioned_signer_PermissionStorage;

// enum permissioned_signer::StoredPermission at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.move:108:5+196
datatype $1_permissioned_signer_StoredPermission {
    $1_permissioned_signer_StoredPermission_Unlimited(),
    $1_permissioned_signer_StoredPermission_Capacity($0_Capacity: int)
}
function $IsValid'$1_permissioned_signer_StoredPermission_Unlimited'(s: $1_permissioned_signer_StoredPermission): bool {
    true
}
function {:inline} $Update'$1_permissioned_signer_StoredPermission_Capacity'_0(s: $1_permissioned_signer_StoredPermission, x: int): $1_permissioned_signer_StoredPermission {
    $1_permissioned_signer_StoredPermission_Capacity(x)
}
function $IsValid'$1_permissioned_signer_StoredPermission_Capacity'(s: $1_permissioned_signer_StoredPermission): bool {
    if s is $1_permissioned_signer_StoredPermission_Capacity then
    $IsValid'u256'(s->$0_Capacity)
    else false
}
function {:inline} $Update'$1_permissioned_signer_StoredPermission'_int_0(s: $1_permissioned_signer_StoredPermission, x: int): $1_permissioned_signer_StoredPermission {
     if s is $1_permissioned_signer_StoredPermission_Capacity then
    $Update'$1_permissioned_signer_StoredPermission_Capacity'_0(s, x)
    else s
}
function $IsValid'$1_permissioned_signer_StoredPermission'(s: $1_permissioned_signer_StoredPermission): bool {
     if s is $1_permissioned_signer_StoredPermission_Unlimited then
    $IsValid'$1_permissioned_signer_StoredPermission_Unlimited'(s)
    else if s is $1_permissioned_signer_StoredPermission_Capacity then
    $IsValid'$1_permissioned_signer_StoredPermission_Capacity'(s)
    else false
}
function {:inline} $IsEqual'$1_permissioned_signer_StoredPermission'(s1: $1_permissioned_signer_StoredPermission, s2: $1_permissioned_signer_StoredPermission): bool {
    s1 == s2
}

// struct guid::GUID at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:7:5+50
datatype $1_guid_GUID {
    $1_guid_GUID($id: $1_guid_ID)
}
function {:inline} $Update'$1_guid_GUID'_id(s: $1_guid_GUID, x: $1_guid_ID): $1_guid_GUID {
    $1_guid_GUID(x)
}
function $IsValid'$1_guid_GUID'(s: $1_guid_GUID): bool {
    $IsValid'$1_guid_ID'(s->$id)
}
function {:inline} $IsEqual'$1_guid_GUID'(s1: $1_guid_GUID, s2: $1_guid_GUID): bool {
    s1 == s2
}

// struct guid::ID at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:12:5+209
datatype $1_guid_ID {
    $1_guid_ID($creation_num: int, $addr: int)
}
function {:inline} $Update'$1_guid_ID'_creation_num(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(x, s->$addr)
}
function {:inline} $Update'$1_guid_ID'_addr(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(s->$creation_num, x)
}
function $IsValid'$1_guid_ID'(s: $1_guid_ID): bool {
    $IsValid'u64'(s->$creation_num)
      && $IsValid'address'(s->$addr)
}
function {:inline} $IsEqual'$1_guid_ID'(s1: $1_guid_ID, s2: $1_guid_ID): bool {
    s1 == s2
}

// fun guid::create [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:23:5+286
procedure {:inline 1} $1_guid_create(_$t0: int, _$t1: $Mutation (int)) returns ($ret0: $1_guid_GUID, $ret1: $Mutation (int))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_guid_ID;
    var $t8: $1_guid_GUID;
    var $t0: int;
    var $t1: $Mutation (int);
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:23:5+1
    assume {:print "$at(174,836,837)"} true;
    assume {:print "$track_local(36,0,0):", $t0} $t0 == $t0;

    // trace_local[creation_num_ref]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:23:5+1
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(36,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t3 := read_ref($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:24:28+17
    assume {:print "$at(174,940,957)"} true;
    $t3 := $Dereference($t1);

    // trace_local[creation_num]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:24:28+17
    assume {:print "$track_local(36,0,2):", $t3} $t3 == $t3;

    // $t4 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:25:44+1
    assume {:print "$at(174,1002,1003)"} true;
    $t4 := 1;
    assume $IsValid'u64'($t4);

    // $t5 := +($t3, $t4) on_abort goto L2 with $t6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:25:29+16
    call $t5 := $AddU64($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(174,987,1003)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(36,0):", $t6} $t6 == $t6;
        goto L2;
    }

    // write_ref($t1, $t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:25:9+36
    $t1 := $UpdateMutation($t1, $t5);

    // $t7 := pack 0x1::guid::ID($t3, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:27:17+70
    assume {:print "$at(174,1036,1106)"} true;
    $t7 := $1_guid_ID($t3, $t0);

    // $t8 := pack 0x1::guid::GUID($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:26:9+103
    assume {:print "$at(174,1013,1116)"} true;
    $t8 := $1_guid_GUID($t7);

    // trace_return[0]($t8) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:23:80+211
    assume {:print "$at(174,911,1122)"} true;
    assume {:print "$track_return(36,0,0):", $t8} $t8 == $t8;

    // trace_local[creation_num_ref]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:23:80+211
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(36,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(174,1121,1122)"} true;
L1:

    // return $t8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(174,1121,1122)"} true;
    $ret0 := $t8;
    $ret1 := $t1;
    return;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:32:5+1
L2:

    // abort($t6) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(174,1121,1122)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// struct event::EventHandle<0x1::account::CoinRegisterEvent> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:37:5+224
datatype $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_counter(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: int): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_guid(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s1: $1_event_EventHandle'$1_account_CoinRegisterEvent', s2: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x1::account::KeyRotationEvent> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:37:5+224
datatype $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_counter(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: int): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_guid(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''(s: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''(s1: $1_event_EventHandle'$1_account_KeyRotationEvent', s2: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x1::object::TransferEvent> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:37:5+224
datatype $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_object_TransferEvent''_counter(s: $1_event_EventHandle'$1_object_TransferEvent', x: int): $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_object_TransferEvent''_guid(s: $1_event_EventHandle'$1_object_TransferEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_object_TransferEvent''(s: $1_event_EventHandle'$1_object_TransferEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_object_TransferEvent''(s1: $1_event_EventHandle'$1_object_TransferEvent', s2: $1_event_EventHandle'$1_object_TransferEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x1::reconfiguration::NewEpochEvent> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:37:5+224
datatype $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_counter(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: int): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_guid(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s1: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', s2: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x4::collection::BurnEvent> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:37:5+224
datatype $1_event_EventHandle'$4_collection_BurnEvent' {
    $1_event_EventHandle'$4_collection_BurnEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_BurnEvent''_counter(s: $1_event_EventHandle'$4_collection_BurnEvent', x: int): $1_event_EventHandle'$4_collection_BurnEvent' {
    $1_event_EventHandle'$4_collection_BurnEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_BurnEvent''_guid(s: $1_event_EventHandle'$4_collection_BurnEvent', x: $1_guid_GUID): $1_event_EventHandle'$4_collection_BurnEvent' {
    $1_event_EventHandle'$4_collection_BurnEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4_collection_BurnEvent''(s: $1_event_EventHandle'$4_collection_BurnEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4_collection_BurnEvent''(s1: $1_event_EventHandle'$4_collection_BurnEvent', s2: $1_event_EventHandle'$4_collection_BurnEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x4::collection::MintEvent> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:37:5+224
datatype $1_event_EventHandle'$4_collection_MintEvent' {
    $1_event_EventHandle'$4_collection_MintEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_MintEvent''_counter(s: $1_event_EventHandle'$4_collection_MintEvent', x: int): $1_event_EventHandle'$4_collection_MintEvent' {
    $1_event_EventHandle'$4_collection_MintEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_MintEvent''_guid(s: $1_event_EventHandle'$4_collection_MintEvent', x: $1_guid_GUID): $1_event_EventHandle'$4_collection_MintEvent' {
    $1_event_EventHandle'$4_collection_MintEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4_collection_MintEvent''(s: $1_event_EventHandle'$4_collection_MintEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4_collection_MintEvent''(s1: $1_event_EventHandle'$4_collection_MintEvent', s2: $1_event_EventHandle'$4_collection_MintEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x4::collection::MutationEvent> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:37:5+224
datatype $1_event_EventHandle'$4_collection_MutationEvent' {
    $1_event_EventHandle'$4_collection_MutationEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_MutationEvent''_counter(s: $1_event_EventHandle'$4_collection_MutationEvent', x: int): $1_event_EventHandle'$4_collection_MutationEvent' {
    $1_event_EventHandle'$4_collection_MutationEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_MutationEvent''_guid(s: $1_event_EventHandle'$4_collection_MutationEvent', x: $1_guid_GUID): $1_event_EventHandle'$4_collection_MutationEvent' {
    $1_event_EventHandle'$4_collection_MutationEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4_collection_MutationEvent''(s: $1_event_EventHandle'$4_collection_MutationEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4_collection_MutationEvent''(s1: $1_event_EventHandle'$4_collection_MutationEvent', s2: $1_event_EventHandle'$4_collection_MutationEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x4::token::MutationEvent> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:37:5+224
datatype $1_event_EventHandle'$4_token_MutationEvent' {
    $1_event_EventHandle'$4_token_MutationEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4_token_MutationEvent''_counter(s: $1_event_EventHandle'$4_token_MutationEvent', x: int): $1_event_EventHandle'$4_token_MutationEvent' {
    $1_event_EventHandle'$4_token_MutationEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4_token_MutationEvent''_guid(s: $1_event_EventHandle'$4_token_MutationEvent', x: $1_guid_GUID): $1_event_EventHandle'$4_token_MutationEvent' {
    $1_event_EventHandle'$4_token_MutationEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4_token_MutationEvent''(s: $1_event_EventHandle'$4_token_MutationEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4_token_MutationEvent''(s1: $1_event_EventHandle'$4_token_MutationEvent', s2: $1_event_EventHandle'$4_token_MutationEvent'): bool {
    s1 == s2
}

// fun event::new_event_handle<0x1::object::TransferEvent> [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:46:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_object_TransferEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_object_TransferEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_object_TransferEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_object_TransferEvent'': $1_event_EventHandle'$1_object_TransferEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:46:5+1
    assume {:print "$at(164,1731,1732)"} true;
    assume {:print "$track_local(37,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:48:22+1
    assume {:print "$at(164,1860,1861)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack 0x1::event::EventHandle<#0>($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:47:9+68
    assume {:print "$at(164,1822,1890)"} true;
    $t2 := $1_event_EventHandle'$1_object_TransferEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:47:9+68
    assume {:print "$track_return(37,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:51:5+1
    assume {:print "$at(164,1895,1896)"} true;
L1:

    // return $t2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:51:5+1
    assume {:print "$at(164,1895,1896)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<0x4::collection::MutationEvent> [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:46:5+165
procedure {:inline 1} $1_event_new_event_handle'$4_collection_MutationEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$4_collection_MutationEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$4_collection_MutationEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$4_collection_MutationEvent'': $1_event_EventHandle'$4_collection_MutationEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:46:5+1
    assume {:print "$at(164,1731,1732)"} true;
    assume {:print "$track_local(37,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:48:22+1
    assume {:print "$at(164,1860,1861)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack 0x1::event::EventHandle<#0>($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:47:9+68
    assume {:print "$at(164,1822,1890)"} true;
    $t2 := $1_event_EventHandle'$4_collection_MutationEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:47:9+68
    assume {:print "$track_return(37,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:51:5+1
    assume {:print "$at(164,1895,1896)"} true;
L1:

    // return $t2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:51:5+1
    assume {:print "$at(164,1895,1896)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<0x4::token::MutationEvent> [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:46:5+165
procedure {:inline 1} $1_event_new_event_handle'$4_token_MutationEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$4_token_MutationEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$4_token_MutationEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$4_token_MutationEvent'': $1_event_EventHandle'$4_token_MutationEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:46:5+1
    assume {:print "$at(164,1731,1732)"} true;
    assume {:print "$track_local(37,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:48:22+1
    assume {:print "$at(164,1860,1861)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack 0x1::event::EventHandle<#0>($t1, $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:47:9+68
    assume {:print "$at(164,1822,1890)"} true;
    $t2 := $1_event_EventHandle'$4_token_MutationEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:47:9+68
    assume {:print "$track_return(37,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:51:5+1
    assume {:print "$at(164,1895,1896)"} true;
L1:

    // return $t2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:51:5+1
    assume {:print "$at(164,1895,1896)"} true;
    $ret0 := $t2;
    return;

}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:162:10+212
function {:inline} $1_account_spec_exists_at($1_account_Account_$memory: $Memory $1_account_Account, addr: int): bool {
    ($1_features_spec_is_enabled(91) || $ResourceExists($1_account_Account_$memory, addr))
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:598:10+77
function  $1_account_spec_create_resource_address(source: int, seed: Vec (int)): int;
axiom (forall source: int, seed: Vec (int) ::
(var $$res := $1_account_spec_create_resource_address(source, seed);
$IsValid'address'($$res)));

// struct account::Account at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:61:5+401
datatype $1_account_Account {
    $1_account_Account($authentication_key: Vec (int), $sequence_number: int, $guid_creation_num: int, $coin_register_events: $1_event_EventHandle'$1_account_CoinRegisterEvent', $key_rotation_events: $1_event_EventHandle'$1_account_KeyRotationEvent', $rotation_capability_offer: $1_account_CapabilityOffer'$1_account_RotationCapability', $signer_capability_offer: $1_account_CapabilityOffer'$1_account_SignerCapability')
}
function {:inline} $Update'$1_account_Account'_authentication_key(s: $1_account_Account, x: Vec (int)): $1_account_Account {
    $1_account_Account(x, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_sequence_number(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account(s->$authentication_key, x, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_guid_creation_num(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, x, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_coin_register_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_CoinRegisterEvent'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, x, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_key_rotation_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_KeyRotationEvent'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, x, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_rotation_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_RotationCapability'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, x, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_signer_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_SignerCapability'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, x)
}
function $IsValid'$1_account_Account'(s: $1_account_Account): bool {
    $IsValid'vec'u8''(s->$authentication_key)
      && $IsValid'u64'(s->$sequence_number)
      && $IsValid'u64'(s->$guid_creation_num)
      && $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s->$coin_register_events)
      && $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''(s->$key_rotation_events)
      && $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''(s->$rotation_capability_offer)
      && $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''(s->$signer_capability_offer)
}
function {:inline} $IsEqual'$1_account_Account'(s1: $1_account_Account, s2: $1_account_Account): bool {
    $IsEqual'vec'u8''(s1->$authentication_key, s2->$authentication_key)
    && $IsEqual'u64'(s1->$sequence_number, s2->$sequence_number)
    && $IsEqual'u64'(s1->$guid_creation_num, s2->$guid_creation_num)
    && $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s1->$coin_register_events, s2->$coin_register_events)
    && $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''(s1->$key_rotation_events, s2->$key_rotation_events)
    && $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''(s1->$rotation_capability_offer, s2->$rotation_capability_offer)
    && $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''(s1->$signer_capability_offer, s2->$signer_capability_offer)}
var $1_account_Account_$memory: $Memory $1_account_Account;

// enum account::AccountPermission at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:231:5+204
datatype $1_account_AccountPermission {
    $1_account_AccountPermission_KeyRotation(),
    $1_account_AccountPermission_Offering()
}
function $IsValid'$1_account_AccountPermission_KeyRotation'(s: $1_account_AccountPermission): bool {
    true
}
function $IsValid'$1_account_AccountPermission_Offering'(s: $1_account_AccountPermission): bool {
    true
}
function $IsValid'$1_account_AccountPermission'(s: $1_account_AccountPermission): bool {
    true
}
function {:inline} $IsEqual'$1_account_AccountPermission'(s1: $1_account_AccountPermission, s2: $1_account_AccountPermission): bool {
    s1 == s2
}

// struct account::CapabilityOffer<0x1::account::RotationCapability> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:86:5+68
datatype $1_account_CapabilityOffer'$1_account_RotationCapability' {
    $1_account_CapabilityOffer'$1_account_RotationCapability'($for: $1_option_Option'address')
}
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_RotationCapability''_for(s: $1_account_CapabilityOffer'$1_account_RotationCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_RotationCapability' {
    $1_account_CapabilityOffer'$1_account_RotationCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''(s: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsValid'$1_option_Option'address''(s->$for)
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''(s1: $1_account_CapabilityOffer'$1_account_RotationCapability', s2: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsEqual'$1_option_Option'address''(s1->$for, s2->$for)}

// struct account::CapabilityOffer<0x1::account::SignerCapability> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:86:5+68
datatype $1_account_CapabilityOffer'$1_account_SignerCapability' {
    $1_account_CapabilityOffer'$1_account_SignerCapability'($for: $1_option_Option'address')
}
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_SignerCapability''_for(s: $1_account_CapabilityOffer'$1_account_SignerCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_SignerCapability' {
    $1_account_CapabilityOffer'$1_account_SignerCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''(s: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsValid'$1_option_Option'address''(s->$for)
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''(s1: $1_account_CapabilityOffer'$1_account_SignerCapability', s2: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsEqual'$1_option_Option'address''(s1->$for, s2->$for)}

// struct account::CoinRegisterEvent at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:76:5+77
datatype $1_account_CoinRegisterEvent {
    $1_account_CoinRegisterEvent($type_info: $1_type_info_TypeInfo)
}
function {:inline} $Update'$1_account_CoinRegisterEvent'_type_info(s: $1_account_CoinRegisterEvent, x: $1_type_info_TypeInfo): $1_account_CoinRegisterEvent {
    $1_account_CoinRegisterEvent(x)
}
function $IsValid'$1_account_CoinRegisterEvent'(s: $1_account_CoinRegisterEvent): bool {
    $IsValid'$1_type_info_TypeInfo'(s->$type_info)
}
function {:inline} $IsEqual'$1_account_CoinRegisterEvent'(s1: $1_account_CoinRegisterEvent, s2: $1_account_CoinRegisterEvent): bool {
    $IsEqual'$1_type_info_TypeInfo'(s1->$type_info, s2->$type_info)}

// struct account::KeyRotationEvent at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:71:5+135
datatype $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent($old_authentication_key: Vec (int), $new_authentication_key: Vec (int))
}
function {:inline} $Update'$1_account_KeyRotationEvent'_old_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent(x, s->$new_authentication_key)
}
function {:inline} $Update'$1_account_KeyRotationEvent'_new_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent(s->$old_authentication_key, x)
}
function $IsValid'$1_account_KeyRotationEvent'(s: $1_account_KeyRotationEvent): bool {
    $IsValid'vec'u8''(s->$old_authentication_key)
      && $IsValid'vec'u8''(s->$new_authentication_key)
}
function {:inline} $IsEqual'$1_account_KeyRotationEvent'(s1: $1_account_KeyRotationEvent, s2: $1_account_KeyRotationEvent): bool {
    $IsEqual'vec'u8''(s1->$old_authentication_key, s2->$old_authentication_key)
    && $IsEqual'vec'u8''(s1->$new_authentication_key, s2->$new_authentication_key)}

// struct account::RotationCapability at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:88:5+62
datatype $1_account_RotationCapability {
    $1_account_RotationCapability($account: int)
}
function {:inline} $Update'$1_account_RotationCapability'_account(s: $1_account_RotationCapability, x: int): $1_account_RotationCapability {
    $1_account_RotationCapability(x)
}
function $IsValid'$1_account_RotationCapability'(s: $1_account_RotationCapability): bool {
    $IsValid'address'(s->$account)
}
function {:inline} $IsEqual'$1_account_RotationCapability'(s1: $1_account_RotationCapability, s2: $1_account_RotationCapability): bool {
    s1 == s2
}

// struct account::SignerCapability at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:90:5+60
datatype $1_account_SignerCapability {
    $1_account_SignerCapability($account: int)
}
function {:inline} $Update'$1_account_SignerCapability'_account(s: $1_account_SignerCapability, x: int): $1_account_SignerCapability {
    $1_account_SignerCapability(x)
}
function $IsValid'$1_account_SignerCapability'(s: $1_account_SignerCapability): bool {
    $IsValid'address'(s->$account)
}
function {:inline} $IsEqual'$1_account_SignerCapability'(s1: $1_account_SignerCapability, s2: $1_account_SignerCapability): bool {
    s1 == s2
}

// fun account::create_account_if_does_not_exist [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:276:5+419
procedure {:inline 1} $1_account_create_account_if_does_not_exist(_$t0: int) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: Vec (int);
    var $t4: bool;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: bool;
    var $t11: Vec (int);
    var $t12: $signer;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: bool;
    var $t0: int;
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, bcs::$to_bytes<address>($t0)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:122:9+56
    assume {:print "$at(97,7171,7227)"} true;
    assume ($t3 == $1_bcs_$to_bytes'address'($t0));

    // trace_local[account_address]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:276:5+1
    assume {:print "$at(96,13904,13905)"} true;
    assume {:print "$track_local(39,4,0):", $t0} $t0 == $t0;

    // $t4 := exists<0x1::account::Account>($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:360:9+21
    assume {:print "$at(96,17759,17780)"} true;
    $t4 := $ResourceExists($1_account_Account_$memory, $t0);

    // if ($t4) goto L1 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:277:13+36
    assume {:print "$at(96,13988,14024)"} true;
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:277:9+333
L1:

    // goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:277:9+333
    assume {:print "$at(96,13984,14317)"} true;
    goto L2;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+15
    assume {:print "$at(96,14065,14080)"} true;
L0:

    // $t5 := 0x0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:36+12
    assume {:print "$at(96,14084,14096)"} true;
    $t5 := 0;
    assume $IsValid'address'($t5);

    // $t6 := !=($t0, $t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+31
    $t6 := !$IsEqual'address'($t0, $t5);

    // if ($t6) goto L4 else goto L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+70
    if ($t6) { goto L4; } else { goto L3; }

    // label L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:52+15
L4:

    // $t7 := 0x1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:71+16
    assume {:print "$at(96,14119,14135)"} true;
    $t7 := 1;
    assume $IsValid'address'($t7);

    // $t8 := !=($t0, $t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:52+35
    $t8 := !$IsEqual'address'($t0, $t7);

    // $t1 := $t8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:52+35
    $t1 := $t8;

    // trace_local[$t2]($t8) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:52+35
    assume {:print "$track_local(39,4,1):", $t8} $t8 == $t8;

    // label L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+105
L10:

    // if ($t1) goto L6 else goto L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+105
    assume {:print "$at(96,14065,14170)"} true;
    if ($t1) { goto L6; } else { goto L5; }

    // label L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:91+15
L6:

    // $t9 := 0x3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:110+12
    assume {:print "$at(96,14158,14170)"} true;
    $t9 := 3;
    assume $IsValid'address'($t9);

    // $t10 := !=($t0, $t9) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:91+31
    $t10 := !$IsEqual'address'($t0, $t9);

    // $t2 := $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:91+31
    $t2 := $t10;

    // trace_local[$t4]($t10) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:91+31
    assume {:print "$track_local(39,4,2):", $t10} $t10 == $t10;

    // label L9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:278:13+6
    assume {:print "$at(96,14040,14046)"} true;
L9:

    // if ($t2) goto L8 else goto L7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:278:13+6
    assume {:print "$at(96,14040,14046)"} true;
    if ($t2) { goto L8; } else { goto L7; }

    // label L8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume {:print "$at(96,14265,14306)"} true;
L8:

    // assume Identical($t11, bcs::$to_bytes<address>($t0)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:170:9+45
    assume {:print "$at(97,9092,9137)"} true;
    assume ($t11 == $1_bcs_$to_bytes'address'($t0));

    // $t12 := opaque begin: account::create_account_unchecked($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume {:print "$at(96,14265,14306)"} true;

    // assume Identical($t13, Or(Neq<num>(Len<u8>($t11), 32), exists<0x1::account::Account>($t0))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume ($t13 == (!$IsEqual'num'(LenVec($t11), 32) || $ResourceExists($1_account_Account_$memory, $t0)));

    // if ($t13) goto L14 else goto L13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    if ($t13) { goto L14; } else { goto L13; }

    // label L14 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
L14:

    // trace_abort($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume {:print "$at(96,14265,14306)"} true;
    assume {:print "$track_abort(39,4):", $t14} $t14 == $t14;

    // goto L12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    goto L12;

    // label L13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
L13:

    // modifies global<0x1::account::Account>($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume {:print "$at(96,14265,14306)"} true;
    havoc $temp_0'bool';
    if ($temp_0'bool') {
        havoc $temp_0'$1_account_Account';
        $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $t0, $temp_0'$1_account_Account');
    } else {
        $1_account_Account_$memory := $ResourceRemove($1_account_Account_$memory, $t0);
    }

    // assume WellFormed($t12) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume $IsValid'signer'($t12) && $1_signer_is_txn_signer($t12) && $1_signer_is_txn_signer_addr($t12->$addr);

    // assume Eq<num>(Len<u8>($t11), 32) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume $IsEqual'num'(LenVec($t11), 32);

    // assume Eq<address>(signer::$address_of($t12), $t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume $IsEqual'address'($1_signer_$address_of($t12), $t0);

    // assume exists<0x1::account::Account>($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume $ResourceExists($1_account_Account_$memory, $t0);

    // $t12 := opaque end: account::create_account_unchecked($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41

    // drop($t12) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:277:9+333
    assume {:print "$at(96,13984,14317)"} true;
L2:

    // goto L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:277:9+333
    assume {:print "$at(96,13984,14317)"} true;
    goto L11;

    // label L7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:280:41+24
    assume {:print "$at(96,14212,14236)"} true;
L7:

    // $t15 := 5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:280:41+24
    assume {:print "$at(96,14212,14236)"} true;
    $t15 := 5;
    assume $IsValid'u64'($t15);

    // $t16 := error::invalid_argument($t15) on_abort goto L12 with $t14 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:280:17+49
    call $t16 := $1_error_invalid_argument($t15);
    if ($abort_flag) {
        assume {:print "$at(96,14188,14237)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(39,4):", $t14} $t14 == $t14;
        goto L12;
    }

    // trace_abort($t16) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:278:13+6
    assume {:print "$at(96,14040,14046)"} true;
    assume {:print "$track_abort(39,4):", $t16} $t16 == $t16;

    // $t14 := move($t16) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:278:13+6
    $t14 := $t16;

    // goto L12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:278:13+6
    goto L12;

    // label L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+105
    assume {:print "$at(96,14065,14170)"} true;
L5:

    // $t17 := false at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+105
    assume {:print "$at(96,14065,14170)"} true;
    $t17 := false;
    assume $IsValid'bool'($t17);

    // $t2 := $t17 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+105
    $t2 := $t17;

    // trace_local[$t4]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+105
    assume {:print "$track_local(39,4,2):", $t17} $t17 == $t17;

    // goto L9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+105
    goto L9;

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+70
L3:

    // $t18 := false at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+70
    assume {:print "$at(96,14065,14135)"} true;
    $t18 := false;
    assume $IsValid'bool'($t18);

    // $t1 := $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+70
    $t1 := $t18;

    // trace_local[$t2]($t18) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+70
    assume {:print "$track_local(39,4,1):", $t18} $t18 == $t18;

    // goto L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+70
    goto L10;

    // label L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:284:5+1
    assume {:print "$at(96,14322,14323)"} true;
L11:

    // return () at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:284:5+1
    assume {:print "$at(96,14322,14323)"} true;
    return;

    // label L12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:284:5+1
L12:

    // abort($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:284:5+1
    assume {:print "$at(96,14322,14323)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun account::create_resource_account [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1125:5+1421
procedure {:inline 1} $1_account_create_resource_account(_$t0: $signer, _$t1: Vec (int)) returns ($ret0: $signer, $ret1: $1_account_SignerCapability)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $signer;
    var $t5: $Mutation ($1_account_Account);
    var $t6: $1_account_SignerCapability;
    var $t7: $signer;
    var $t8: int;
    var $t9: int;
    var $t10: $1_account_Account;
    var $t11: Vec (int);
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: bool;
    var $t17: $1_account_Account;
    var $t18: $1_account_CapabilityOffer'$1_account_SignerCapability';
    var $t19: $1_option_Option'address';
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: $signer;
    var $t25: Vec (int);
    var $t26: int;
    var $t27: $Mutation ($1_account_Account);
    var $t28: $1_option_Option'address';
    var $t29: $Mutation ($1_account_CapabilityOffer'$1_account_SignerCapability');
    var $t30: $Mutation ($1_option_Option'address');
    var $t31: $1_account_SignerCapability;
    var $t32: int;
    var $t33: int;
    var $t34: int;
    var $t35: int;
    var $t36: Vec (int);
    var $t37: $signer;
    var $t38: bool;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t8, signer::$address_of($t0)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:601:9+45
    assume {:print "$at(97,30375,30420)"} true;
    assume ($t8 == $1_signer_$address_of($t0));

    // assume Identical($t9, account::spec_create_resource_address($t8, $t1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:602:9+68
    assume {:print "$at(97,30429,30497)"} true;
    assume ($t9 == $1_account_spec_create_resource_address($t8, $t1));

    // assume Identical($t10, global<0x1::account::Account>($t9)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:676:9+45
    assume {:print "$at(97,33456,33501)"} true;
    assume ($t10 == $ResourceValue($1_account_Account_$memory, $t9));

    // assume Identical($t11, bcs::$to_bytes<address>($t9)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:170:9+45
    assume {:print "$at(97,9092,9137)"} true;
    assume ($t11 == $1_bcs_$to_bytes'address'($t9));

    // trace_local[source]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1125:5+1
    assume {:print "$at(96,58520,58521)"} true;
    assume {:print "$track_local(39,9,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1125:5+1
    assume {:print "$track_local(39,9,1):", $t1} $t1 == $t1;

    // $t12 := signer::address_of($t0) on_abort goto L11 with $t13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1126:54+26
    assume {:print "$at(96,58690,58716)"} true;
    call $t12 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(96,58690,58716)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(39,9):", $t13} $t13 == $t13;
        goto L11;
    }

    // trace_local[$t6]($t12) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1126:54+26
    assume {:print "$track_local(39,9,2):", $t12} $t12 == $t12;

    // $t14 := opaque begin: account::create_resource_address($t12, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1126:29+58

    // assume WellFormed($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1126:29+58
    assume $IsValid'address'($t14);

    // assume Eq<address>($t14, account::spec_create_resource_address($t12, $t1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1126:29+58
    assume $IsEqual'address'($t14, $1_account_spec_create_resource_address($t12, $t1));

    // assume Neq<address>($t12, $t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1126:29+58
    assume !$IsEqual'address'($t12, $t14);

    // $t14 := opaque end: account::create_resource_address($t12, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1126:29+58

    // trace_local[resource_addr]($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1126:29+58
    assume {:print "$track_local(39,9,3):", $t14} $t14 == $t14;

    // $t15 := opaque begin: account::exists_at($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1127:28+24
    assume {:print "$at(96,58752,58776)"} true;

    // assume WellFormed($t15) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1127:28+24
    assume $IsValid'bool'($t15);

    // assume Eq<bool>($t15, account::spec_exists_at($t14)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1127:28+24
    assume $IsEqual'bool'($t15, $1_account_spec_exists_at($1_account_Account_$memory, $t14));

    // $t15 := opaque end: account::exists_at($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1127:28+24

    // if ($t15) goto L1 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1127:24+589
    if ($t15) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:359:16+18
    assume {:print "$at(96,17709,17727)"} true;
L1:

    // $t16 := exists<0x1::account::Account>($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:360:9+21
    assume {:print "$at(96,17759,17780)"} true;
    $t16 := $ResourceExists($1_account_Account_$memory, $t14);

    // if ($t16) goto L2 else goto L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1128:13+270
    assume {:print "$at(96,58792,59062)"} true;
    if ($t16) { goto L2; } else { goto L4; }

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1129:27+23
    assume {:print "$at(96,58859,58882)"} true;
L2:

    // $t17 := get_global<0x1::account::Account>($t14) on_abort goto L11 with $t13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1129:27+23
    assume {:print "$at(96,58859,58882)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t14)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $ResourceValue($1_account_Account_$memory, $t14);
    }
    if ($abort_flag) {
        assume {:print "$at(96,58859,58882)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(39,9):", $t13} $t13 == $t13;
        goto L11;
    }

    // $t18 := get_field<0x1::account::Account>.signer_capability_offer($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1131:17+31
    assume {:print "$at(96,58921,58952)"} true;
    $t18 := $t17->$signer_capability_offer;

    // $t19 := get_field<0x1::account::CapabilityOffer<0x1::account::SignerCapability>>.for($t18) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1131:17+45
    $t19 := $t18->$for;

    // $t20 := opaque begin: option::is_none<address>($t19) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1131:17+45

    // assume WellFormed($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1131:17+45
    assume $IsValid'bool'($t20);

    // assume Eq<bool>($t20, option::spec_is_none<address>($t19)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1131:17+45
    assume $IsEqual'bool'($t20, $1_option_spec_is_none'address'($t19));

    // $t20 := opaque end: option::is_none<address>($t19) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1131:17+45

    // if ($t20) goto L6 else goto L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1130:13+6
    assume {:print "$at(96,58896,58902)"} true;
    if ($t20) { goto L6; } else { goto L5; }

    // label L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1130:13+6
L6:

    // label L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1136:17+34
    assume {:print "$at(96,59101,59135)"} true;
L4:

    // $t21 := account::get_sequence_number($t14) on_abort goto L11 with $t13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1136:17+34
    assume {:print "$at(96,59101,59135)"} true;
    call $t21 := $1_account_get_sequence_number($t14);
    if ($abort_flag) {
        assume {:print "$at(96,59101,59135)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(39,9):", $t13} $t13 == $t13;
        goto L11;
    }

    // $t22 := 0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1136:55+1
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := ==($t21, $t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1136:17+39
    $t23 := $IsEqual'u64'($t21, $t22);

    // if ($t23) goto L8 else goto L7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1135:13+6
    assume {:print "$at(96,59076,59082)"} true;
    if ($t23) { goto L8; } else { goto L7; }

    // label L8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1139:13+28
    assume {:print "$at(96,59230,59258)"} true;
L8:

    // $t24 := opaque begin: create_signer::create_signer($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1139:13+28
    assume {:print "$at(96,59230,59258)"} true;

    // assume WellFormed($t24) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1139:13+28
    assume $IsValid'signer'($t24) && $1_signer_is_txn_signer($t24) && $1_signer_is_txn_signer_addr($t24->$addr);

    // assume Eq<address>(signer::$address_of($t24), $t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1139:13+28
    assume $IsEqual'address'($1_signer_$address_of($t24), $t14);

    // assume Eq<signer>($t24, create_signer::spec_create_signer($t14)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1139:13+28
    assume $IsEqual'signer'($t24, $1_create_signer_spec_create_signer($t14));

    // $t24 := opaque end: create_signer::create_signer($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1139:13+28

    // $t4 := $t24 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1139:13+28
    $t4 := $t24;

    // trace_local[resource]($t24) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1139:13+28
    assume {:print "$track_local(39,9,4):", $t24} $t24 == $t24;

    // label L9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1147:44+9
    assume {:print "$at(96,59681,59690)"} true;
L9:

    // $t25 := [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1147:55+13
    assume {:print "$at(96,59692,59705)"} true;
    $t25 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(0, 0, 0, 0), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0));
    assume $IsValid'vec'u8''($t25);

    // assume Identical($t26, signer::$address_of($t4)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:211:9+39
    assume {:print "$at(97,10678,10717)"} true;
    assume ($t26 == $1_signer_$address_of($t4));

    // account::rotate_authentication_key_internal($t4, $t25) on_abort goto L11 with $t13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1147:9+60
    assume {:print "$at(96,59646,59706)"} true;
    call $1_account_rotate_authentication_key_internal($t4, $t25);
    if ($abort_flag) {
        assume {:print "$at(96,59646,59706)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(39,9):", $t13} $t13 == $t13;
        goto L11;
    }

    // $t27 := borrow_global<0x1::account::Account>($t14) on_abort goto L11 with $t13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1149:23+27
    assume {:print "$at(96,59731,59758)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t14)) {
        call $ExecFailureAbort();
    } else {
        $t27 := $Mutation($Global($t14), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t14));
    }
    if ($abort_flag) {
        assume {:print "$at(96,59731,59758)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(39,9):", $t13} $t13 == $t13;
        goto L11;
    }

    // trace_local[account]($t27) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1149:23+27
    $temp_0'$1_account_Account' := $Dereference($t27);
    assume {:print "$track_local(39,9,5):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t28 := opaque begin: option::some<address>($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1150:47+27
    assume {:print "$at(96,59806,59833)"} true;

    // assume And(WellFormed($t28), Le(Len<address>(select option::Option.vec($t28)), 1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1150:47+27
    assume ($IsValid'$1_option_Option'address''($t28) && (LenVec($t28->$vec) <= 1));

    // assume Eq<0x1::option::Option<address>>($t28, option::spec_some<address>($t14)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1150:47+27
    assume $IsEqual'$1_option_Option'address''($t28, $1_option_spec_some'address'($t14));

    // $t28 := opaque end: option::some<address>($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1150:47+27

    // $t29 := borrow_field<0x1::account::Account>.signer_capability_offer($t27) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1150:9+31
    $t29 := $ChildMutation($t27, 6, $Dereference($t27)->$signer_capability_offer);

    // $t30 := borrow_field<0x1::account::CapabilityOffer<0x1::account::SignerCapability>>.for($t29) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1150:9+35
    $t30 := $ChildMutation($t29, 0, $Dereference($t29)->$for);

    // write_ref($t30, $t28) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1150:9+65
    $t30 := $UpdateMutation($t30, $t28);

    // write_back[Reference($t29).for (0x1::option::Option<address>)]($t30) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1150:9+65
    $t29 := $UpdateMutation($t29, $Update'$1_account_CapabilityOffer'$1_account_SignerCapability''_for($Dereference($t29), $Dereference($t30)));

    // write_back[Reference($t27).signer_capability_offer (0x1::account::CapabilityOffer<0x1::account::SignerCapability>)]($t29) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1150:9+65
    $t27 := $UpdateMutation($t27, $Update'$1_account_Account'_signer_capability_offer($Dereference($t27), $Dereference($t29)));

    // pack_ref_deep($t27) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1150:9+65

    // write_back[0x1::account::Account@]($t27) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1150:9+65
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t27),
        $Dereference($t27));

    // $t31 := pack 0x1::account::SignerCapability($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1151:26+43
    assume {:print "$at(96,59860,59903)"} true;
    $t31 := $1_account_SignerCapability($t14);

    // trace_local[signer_cap]($t31) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1151:26+43
    assume {:print "$track_local(39,9,6):", $t31} $t31 == $t31;

    // trace_return[0]($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1125:120+1306
    assume {:print "$at(96,58635,59941)"} true;
    assume {:print "$track_return(39,9,0):", $t4} $t4 == $t4;

    // trace_return[1]($t31) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1125:120+1306
    assume {:print "$track_return(39,9,1):", $t31} $t31 == $t31;

    // goto L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1125:120+1306
    goto L10;

    // label L7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1137:38+21
    assume {:print "$at(96,59179,59200)"} true;
L7:

    // $t32 := 16 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1137:38+21
    assume {:print "$at(96,59179,59200)"} true;
    $t32 := 16;
    assume $IsValid'u64'($t32);

    // $t33 := error::invalid_state($t32) on_abort goto L11 with $t13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1137:17+43
    call $t33 := $1_error_invalid_state($t32);
    if ($abort_flag) {
        assume {:print "$at(96,59158,59201)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(39,9):", $t13} $t13 == $t13;
        goto L11;
    }

    // trace_abort($t33) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1135:13+6
    assume {:print "$at(96,59076,59082)"} true;
    assume {:print "$track_abort(39,9):", $t33} $t33 == $t33;

    // $t13 := move($t33) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1135:13+6
    $t13 := $t33;

    // goto L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1135:13+6
    goto L11;

    // label L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1132:39+25
    assume {:print "$at(96,59006,59031)"} true;
L5:

    // $t34 := 15 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1132:39+25
    assume {:print "$at(96,59006,59031)"} true;
    $t34 := 15;
    assume $IsValid'u64'($t34);

    // $t35 := error::already_exists($t34) on_abort goto L11 with $t13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1132:17+48
    call $t35 := $1_error_already_exists($t34);
    if ($abort_flag) {
        assume {:print "$at(96,58984,59032)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(39,9):", $t13} $t13 == $t13;
        goto L11;
    }

    // trace_abort($t35) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1130:13+6
    assume {:print "$at(96,58896,58902)"} true;
    assume {:print "$track_abort(39,9):", $t35} $t35 == $t35;

    // $t13 := move($t35) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1130:13+6
    $t13 := $t35;

    // goto L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1130:13+6
    goto L11;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39
    assume {:print "$at(96,59288,59327)"} true;
L0:

    // assume Identical($t36, bcs::$to_bytes<address>($t14)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:170:9+45
    assume {:print "$at(97,9092,9137)"} true;
    assume ($t36 == $1_bcs_$to_bytes'address'($t14));

    // $t37 := opaque begin: account::create_account_unchecked($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39
    assume {:print "$at(96,59288,59327)"} true;

    // assume Identical($t38, Or(Neq<num>(Len<u8>($t36), 32), exists<0x1::account::Account>($t14))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39
    assume ($t38 == (!$IsEqual'num'(LenVec($t36), 32) || $ResourceExists($1_account_Account_$memory, $t14)));

    // if ($t38) goto L13 else goto L12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39
    if ($t38) { goto L13; } else { goto L12; }

    // label L13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39
L13:

    // trace_abort($t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39
    assume {:print "$at(96,59288,59327)"} true;
    assume {:print "$track_abort(39,9):", $t13} $t13 == $t13;

    // goto L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39
    goto L11;

    // label L12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39
L12:

    // modifies global<0x1::account::Account>($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39
    assume {:print "$at(96,59288,59327)"} true;
    havoc $temp_0'bool';
    if ($temp_0'bool') {
        havoc $temp_0'$1_account_Account';
        $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $t14, $temp_0'$1_account_Account');
    } else {
        $1_account_Account_$memory := $ResourceRemove($1_account_Account_$memory, $t14);
    }

    // assume WellFormed($t37) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39
    assume $IsValid'signer'($t37) && $1_signer_is_txn_signer($t37) && $1_signer_is_txn_signer_addr($t37->$addr);

    // assume Eq<num>(Len<u8>($t36), 32) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39
    assume $IsEqual'num'(LenVec($t36), 32);

    // assume Eq<address>(signer::$address_of($t37), $t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39
    assume $IsEqual'address'($1_signer_$address_of($t37), $t14);

    // assume exists<0x1::account::Account>($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39
    assume $ResourceExists($1_account_Account_$memory, $t14);

    // $t37 := opaque end: account::create_account_unchecked($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39

    // $t4 := $t37 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39
    $t4 := $t37;

    // trace_local[resource]($t37) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39
    assume {:print "$track_local(39,9,4):", $t37} $t37 == $t37;

    // goto L9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1141:13+39
    goto L9;

    // label L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1153:5+1
    assume {:print "$at(96,59940,59941)"} true;
L10:

    // return ($t4, $t31) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1153:5+1
    assume {:print "$at(96,59940,59941)"} true;
    $ret0 := $t4;
    $ret1 := $t31;
    return;

    // label L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1153:5+1
L11:

    // abort($t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1153:5+1
    assume {:print "$at(96,59940,59941)"} true;
    $abort_code := $t13;
    $abort_flag := true;
    return;

}

// fun account::create_signer_with_capability [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1253:5+156
procedure {:inline 1} $1_account_create_signer_with_capability(_$t0: $1_account_SignerCapability) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $signer;
    var $t0: $1_account_SignerCapability;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, select account::SignerCapability.account<0x1::account::SignerCapability>($t0)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:670:9+30
    assume {:print "$at(97,33278,33308)"} true;
    assume ($t1 == $t0->$account);

    // trace_local[capability]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1253:5+1
    assume {:print "$at(96,63987,63988)"} true;
    assume {:print "$track_local(39,11,0):", $t0} $t0 == $t0;

    // $t2 := get_field<0x1::account::SignerCapability>.account($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1254:20+19
    assume {:print "$at(96,64088,64107)"} true;
    $t2 := $t0->$account;

    // $t3 := opaque begin: create_signer::create_signer($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1255:9+20
    assume {:print "$at(96,64117,64137)"} true;

    // assume WellFormed($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1255:9+20
    assume $IsValid'signer'($t3) && $1_signer_is_txn_signer($t3) && $1_signer_is_txn_signer_addr($t3->$addr);

    // assume Eq<address>(signer::$address_of($t3), $t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1255:9+20
    assume $IsEqual'address'($1_signer_$address_of($t3), $t2);

    // assume Eq<signer>($t3, create_signer::spec_create_signer($t2)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1255:9+20
    assume $IsEqual'signer'($t3, $1_create_signer_spec_create_signer($t2));

    // $t3 := opaque end: create_signer::create_signer($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1255:9+20

    // trace_return[0]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1255:9+20
    assume {:print "$track_return(39,11,0):", $t3} $t3 == $t3;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1256:5+1
    assume {:print "$at(96,64142,64143)"} true;
L1:

    // return $t3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1256:5+1
    assume {:print "$at(96,64142,64143)"} true;
    $ret0 := $t3;
    return;

}

// fun account::get_sequence_number [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:384:5+328
procedure {:inline 1} $1_account_get_sequence_number(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: $1_account_Account;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:384:5+1
    assume {:print "$at(96,18601,18602)"} true;
    assume {:print "$track_local(39,16,0):", $t0} $t0 == $t0;

    // $t2 := exists<0x1::account::Account>($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:360:9+21
    assume {:print "$at(96,17759,17780)"} true;
    $t2 := $ResourceExists($1_account_Account_$memory, $t0);

    // if ($t2) goto L1 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:385:9+244
    assume {:print "$at(96,18679,18923)"} true;
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:386:13+13
    assume {:print "$at(96,18723,18736)"} true;
L1:

    // $t3 := get_global<0x1::account::Account>($t0) on_abort goto L6 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:386:13+13
    assume {:print "$at(96,18723,18736)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $ResourceValue($1_account_Account_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(96,18723,18736)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(39,16):", $t4} $t4 == $t4;
        goto L6;
    }

    // $t5 := get_field<0x1::account::Account>.sequence_number($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:386:13+29
    $t5 := $t3->$sequence_number;

    // $t1 := $t5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:386:13+29
    $t1 := $t5;

    // trace_local[return]($t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:386:13+29
    assume {:print "$track_local(39,16,1):", $t5} $t5 == $t5;

    // label L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:385:9+244
    assume {:print "$at(96,18679,18923)"} true;
L4:

    // trace_return[0]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:385:9+244
    assume {:print "$at(96,18679,18923)"} true;
    assume {:print "$track_return(39,16,0):", $t1} $t1 == $t1;

    // goto L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:385:9+244
    goto L5;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:387:20+47
    assume {:print "$at(96,18772,18819)"} true;
L0:

    // $t6 := opaque begin: features::is_default_account_resource_enabled() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:387:20+47
    assume {:print "$at(96,18772,18819)"} true;

    // assume WellFormed($t6) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:387:20+47
    assume $IsValid'bool'($t6);

    // assume Eq<bool>($t6, features::spec_is_enabled(91)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:387:20+47
    assume $IsEqual'bool'($t6, $1_features_spec_is_enabled(91));

    // $t6 := opaque end: features::is_default_account_resource_enabled() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:387:20+47

    // if ($t6) goto L3 else goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:387:16+155
    if ($t6) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:388:13+1
    assume {:print "$at(96,18835,18836)"} true;
L3:

    // $t7 := 0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:388:13+1
    assume {:print "$at(96,18835,18836)"} true;
    $t7 := 0;
    assume $IsValid'u64'($t7);

    // $t1 := $t7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:388:13+1
    $t1 := $t7;

    // trace_local[return]($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:388:13+1
    assume {:print "$track_local(39,16,1):", $t7} $t7 == $t7;

    // goto L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:388:13+1
    goto L4;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:390:36+23
    assume {:print "$at(96,18889,18912)"} true;
L2:

    // $t8 := 2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:390:36+23
    assume {:print "$at(96,18889,18912)"} true;
    $t8 := 2;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L6 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:390:19+41
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(96,18872,18913)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(39,16):", $t4} $t4 == $t4;
        goto L6;
    }

    // trace_abort($t9) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:390:13+47
    assume {:print "$at(96,18866,18913)"} true;
    assume {:print "$track_abort(39,16):", $t9} $t9 == $t9;

    // $t4 := move($t9) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:390:13+47
    $t4 := $t9;

    // goto L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:390:13+47
    goto L6;

    // label L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:392:5+1
    assume {:print "$at(96,18928,18929)"} true;
L5:

    // return $t1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:392:5+1
    assume {:print "$at(96,18928,18929)"} true;
    $ret0 := $t1;
    return;

    // label L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:392:5+1
L6:

    // abort($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:392:5+1
    assume {:print "$at(96,18928,18929)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun account::rotate_authentication_key_internal [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:440:5+499
procedure {:inline 1} $1_account_rotate_authentication_key_internal(_$t0: $signer, _$t1: Vec (int)) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation (Vec (int));
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: bool;
    var $t9: Vec (int);
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: $1_account_AccountPermission;
    var $t14: bool;
    var $t15: bool;
    var $t16: $Mutation ($1_account_Account);
    var $t17: $Mutation (Vec (int));
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: bool;
    var $t23: int;
    var $t24: int;
    var $t0: $signer;
    var $t1: Vec (int);
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_permissioned_signer_PermissionStorage': $1_permissioned_signer_PermissionStorage;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t5, signer::$address_of($t0)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:211:9+39
    assume {:print "$at(97,10678,10717)"} true;
    assume ($t5 == $1_signer_$address_of($t0));

    // trace_local[account]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:440:5+1
    assume {:print "$at(96,20757,20758)"} true;
    assume {:print "$track_local(39,35,0):", $t0} $t0 == $t0;

    // trace_local[new_auth_key]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:440:5+1
    assume {:print "$track_local(39,35,1):", $t1} $t1 == $t1;

    // $t6 := signer::address_of($t0) on_abort goto L10 with $t7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:441:20+27
    assume {:print "$at(96,20893,20920)"} true;
    call $t6 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(96,20893,20920)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,35):", $t7} $t7 == $t7;
        goto L10;
    }

    // trace_local[addr]($t6) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:441:20+27
    assume {:print "$track_local(39,35,2):", $t6} $t6 == $t6;

    // trace_local[addr]($t6) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:404:16+22
    assume {:print "$at(96,19311,19333)"} true;
    assume {:print "$track_local(39,35,3):", $t6} $t6 == $t6;

    // $t8 := opaque begin: features::is_default_account_resource_enabled() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:405:13+47
    assume {:print "$at(96,19379,19426)"} true;

    // assume WellFormed($t8) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:405:13+47
    assume $IsValid'bool'($t8);

    // assume Eq<bool>($t8, features::spec_is_enabled(91)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:405:13+47
    assume $IsEqual'bool'($t8, $1_features_spec_is_enabled(91));

    // $t8 := opaque end: features::is_default_account_resource_enabled() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:405:13+47

    // if ($t8) goto L1 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:405:9+214
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:406:13+38
    assume {:print "$at(96,19442,19480)"} true;
L1:

    // assume Identical($t9, bcs::$to_bytes<address>($t6)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:122:9+56
    assume {:print "$at(97,7171,7227)"} true;
    assume ($t9 == $1_bcs_$to_bytes'address'($t6));

    // account::create_account_if_does_not_exist($t6) on_abort goto L10 with $t7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:406:13+38
    assume {:print "$at(96,19442,19480)"} true;
    call $1_account_create_account_if_does_not_exist($t6);
    if ($abort_flag) {
        assume {:print "$at(96,19442,19480)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,35):", $t7} $t7 == $t7;
        goto L10;
    }

    // label L8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:444:13+21
    assume {:print "$at(96,20989,21010)"} true;
L8:

    // $t10 := vector::length<u8>($t1) on_abort goto L10 with $t7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:444:13+21
    assume {:print "$at(96,20989,21010)"} true;
    call $t10 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(96,20989,21010)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,35):", $t7} $t7 == $t7;
        goto L10;
    }

    // $t11 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:444:38+2
    $t11 := 32;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:444:13+27
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L3 else goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:443:9+6
    assume {:print "$at(96,20968,20974)"} true;
    if ($t12) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:240:16+25
    assume {:print "$at(96,12294,12319)"} true;
L3:

    // $t13 := pack_variant 0x1::account::AccountPermission::KeyRotation() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:242:61+33
    assume {:print "$at(96,12411,12444)"} true;
    $t13 := $1_account_AccountPermission_KeyRotation();

    // $t14 := opaque begin: permissioned_signer::check_permission_exists<0x1::account::AccountPermission>($t0, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:242:13+82

    // $t15 := havoc[val]() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:242:13+82
    havoc $t15;

    // if ($t15) goto L12 else goto L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:242:13+82
    if ($t15) { goto L12; } else { goto L11; }

    // label L12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:242:13+82
L12:

    // trace_abort($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:242:13+82
    assume {:print "$at(96,12363,12445)"} true;
    assume {:print "$track_abort(39,35):", $t7} $t7 == $t7;

    // goto L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:242:13+82
    goto L10;

    // label L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:242:13+82
L11:

    // modifies global<0x1::permissioned_signer::PermissionStorage>(permissioned_signer::spec_permission_address($t0)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:242:13+82
    assume {:print "$at(96,12363,12445)"} true;
    havoc $temp_0'bool';
    if ($temp_0'bool') {
        havoc $temp_0'$1_permissioned_signer_PermissionStorage';
        $1_permissioned_signer_PermissionStorage_$memory := $ResourceUpdate($1_permissioned_signer_PermissionStorage_$memory, $1_permissioned_signer_spec_permission_address($t0), $temp_0'$1_permissioned_signer_PermissionStorage');
    } else {
        $1_permissioned_signer_PermissionStorage_$memory := $ResourceRemove($1_permissioned_signer_PermissionStorage_$memory, $1_permissioned_signer_spec_permission_address($t0));
    }

    // assume WellFormed($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:242:13+82
    assume $IsValid'bool'($t14);

    // assume Eq<bool>($t14, permissioned_signer::spec_check_permission_exists<0x1::account::AccountPermission>($t0, $t13)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:242:13+82
    assume $IsEqual'bool'($t14, $1_permissioned_signer_spec_check_permission_exists'$1_account_AccountPermission'($t0, $t13));

    // $t14 := opaque end: permissioned_signer::check_permission_exists<0x1::account::AccountPermission>($t0, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:242:13+82

    // if ($t14) goto L5 else goto L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:241:9+6
    assume {:print "$at(96,12342,12348)"} true;
    if ($t14) { goto L5; } else { goto L4; }

    // label L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:448:32+18
    assume {:print "$at(96,21171,21189)"} true;
L5:

    // $t16 := borrow_global<0x1::account::Account>($t6) on_abort goto L10 with $t7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:448:32+18
    assume {:print "$at(96,21171,21189)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t16 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(96,21171,21189)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,35):", $t7} $t7 == $t7;
        goto L10;
    }

    // $t17 := borrow_field<0x1::account::Account>.authentication_key($t16) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:449:9+35
    assume {:print "$at(96,21199,21234)"} true;
    $t17 := $ChildMutation($t16, 0, $Dereference($t16)->$authentication_key);

    // trace_local[$t21]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:449:9+50
    $temp_0'vec'u8'' := $Dereference($t17);
    assume {:print "$track_local(39,35,4):", $temp_0'vec'u8''} $temp_0'vec'u8'' == $temp_0'vec'u8'';

    // write_ref($t17, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:449:9+50
    $t17 := $UpdateMutation($t17, $t1);

    // write_back[Reference($t16).authentication_key (vector<u8>)]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:449:9+50
    $t16 := $UpdateMutation($t16, $Update'$1_account_Account'_authentication_key($Dereference($t16), $Dereference($t17)));

    // pack_ref_deep($t16) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:449:9+50

    // write_back[0x1::account::Account@]($t16) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:449:9+50
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t16),
        $Dereference($t16));

    // goto L9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:440:120+384
    assume {:print "$at(96,20872,21256)"} true;
    goto L9;

    // label L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:243:38+22
    assume {:print "$at(96,12484,12506)"} true;
L4:

    // $t18 := 23 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:243:38+22
    assume {:print "$at(96,12484,12506)"} true;
    $t18 := 23;
    assume $IsValid'u64'($t18);

    // $t19 := error::permission_denied($t18) on_abort goto L10 with $t7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:243:13+48
    call $t19 := $1_error_permission_denied($t18);
    if ($abort_flag) {
        assume {:print "$at(96,12459,12507)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,35):", $t7} $t7 == $t7;
        goto L10;
    }

    // trace_abort($t19) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:241:9+6
    assume {:print "$at(96,12342,12348)"} true;
    assume {:print "$track_abort(39,35):", $t19} $t19 == $t19;

    // $t7 := move($t19) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:241:9+6
    $t7 := $t19;

    // goto L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:241:9+6
    goto L10;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:443:9+6
    assume {:print "$at(96,20968,20974)"} true;
L2:

    // $t20 := 4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:445:37+29
    assume {:print "$at(96,21054,21083)"} true;
    $t20 := 4;
    assume $IsValid'u64'($t20);

    // $t21 := error::invalid_argument($t20) on_abort goto L10 with $t7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:445:13+54
    call $t21 := $1_error_invalid_argument($t20);
    if ($abort_flag) {
        assume {:print "$at(96,21030,21084)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,35):", $t7} $t7 == $t7;
        goto L10;
    }

    // trace_abort($t21) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:443:9+6
    assume {:print "$at(96,20968,20974)"} true;
    assume {:print "$track_abort(39,35):", $t21} $t21 == $t21;

    // $t7 := move($t21) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:443:9+6
    $t7 := $t21;

    // goto L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:443:9+6
    goto L10;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:21+15
    assume {:print "$at(96,19519,19534)"} true;
L0:

    // $t22 := opaque begin: account::exists_at($t6) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:21+15
    assume {:print "$at(96,19519,19534)"} true;

    // assume WellFormed($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:21+15
    assume $IsValid'bool'($t22);

    // assume Eq<bool>($t22, account::spec_exists_at($t6)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:21+15
    assume $IsEqual'bool'($t22, $1_account_spec_exists_at($1_account_Account_$memory, $t6));

    // $t22 := opaque end: account::exists_at($t6) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:21+15

    // if ($t22) goto L7 else goto L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
    if ($t22) { goto L7; } else { goto L6; }

    // label L7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
L7:

    // goto L8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
    assume {:print "$at(96,19511,19517)"} true;
    goto L8;

    // label L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
L6:

    // $t23 := 2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:55+23
    assume {:print "$at(96,19553,19576)"} true;
    $t23 := 2;
    assume $IsValid'u64'($t23);

    // $t24 := error::not_found($t23) on_abort goto L10 with $t7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:38+41
    call $t24 := $1_error_not_found($t23);
    if ($abort_flag) {
        assume {:print "$at(96,19536,19577)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,35):", $t7} $t7 == $t7;
        goto L10;
    }

    // trace_abort($t24) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
    assume {:print "$at(96,19511,19517)"} true;
    assume {:print "$track_abort(39,35):", $t24} $t24 == $t24;

    // $t7 := move($t24) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
    $t7 := $t24;

    // goto L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
    goto L10;

    // label L9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:450:5+1
    assume {:print "$at(96,21255,21256)"} true;
L9:

    // return () at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:450:5+1
    assume {:print "$at(96,21255,21256)"} true;
    return;

    // label L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:450:5+1
L10:

    // abort($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:450:5+1
    assume {:print "$at(96,21255,21256)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:60:10+50
function  $1_object_spec_exists_at'$4_collection_Collection'(object: int): bool;
axiom (forall object: int ::
(var $$res := $1_object_spec_exists_at'$4_collection_Collection'(object);
$IsValid'bool'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:567:10+75
function  $1_object_spec_create_object_address(source: int, seed: Vec (int)): int;
axiom (forall source: int, seed: Vec (int) ::
(var $$res := $1_object_spec_create_object_address(source, seed);
$IsValid'address'($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:249:5+91
function {:inline} $1_object_$object_address'$4_collection_Collection'(object: $1_object_Object'$4_collection_Collection'): int {
    object->$inner
}

// struct object::ConstructorRef at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:136:5+167
datatype $1_object_ConstructorRef {
    $1_object_ConstructorRef($self: int, $can_delete: bool)
}
function {:inline} $Update'$1_object_ConstructorRef'_self(s: $1_object_ConstructorRef, x: int): $1_object_ConstructorRef {
    $1_object_ConstructorRef(x, s->$can_delete)
}
function {:inline} $Update'$1_object_ConstructorRef'_can_delete(s: $1_object_ConstructorRef, x: bool): $1_object_ConstructorRef {
    $1_object_ConstructorRef(s->$self, x)
}
function $IsValid'$1_object_ConstructorRef'(s: $1_object_ConstructorRef): bool {
    $IsValid'address'(s->$self)
      && $IsValid'bool'(s->$can_delete)
}
function {:inline} $IsEqual'$1_object_ConstructorRef'(s1: $1_object_ConstructorRef, s2: $1_object_ConstructorRef): bool {
    s1 == s2
}

// struct object::LinearTransferRef at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:159:5+88
datatype $1_object_LinearTransferRef {
    $1_object_LinearTransferRef($self: int, $owner: int)
}
function {:inline} $Update'$1_object_LinearTransferRef'_self(s: $1_object_LinearTransferRef, x: int): $1_object_LinearTransferRef {
    $1_object_LinearTransferRef(x, s->$owner)
}
function {:inline} $Update'$1_object_LinearTransferRef'_owner(s: $1_object_LinearTransferRef, x: int): $1_object_LinearTransferRef {
    $1_object_LinearTransferRef(s->$self, x)
}
function $IsValid'$1_object_LinearTransferRef'(s: $1_object_LinearTransferRef): bool {
    $IsValid'address'(s->$self)
      && $IsValid'address'(s->$owner)
}
function {:inline} $IsEqual'$1_object_LinearTransferRef'(s1: $1_object_LinearTransferRef, s2: $1_object_LinearTransferRef): bool {
    s1 == s2
}

// struct object::Object<0x1::object::ObjectCore> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:131:5+78
datatype $1_object_Object'$1_object_ObjectCore' {
    $1_object_Object'$1_object_ObjectCore'($inner: int)
}
function {:inline} $Update'$1_object_Object'$1_object_ObjectCore''_inner(s: $1_object_Object'$1_object_ObjectCore', x: int): $1_object_Object'$1_object_ObjectCore' {
    $1_object_Object'$1_object_ObjectCore'(x)
}
function $IsValid'$1_object_Object'$1_object_ObjectCore''(s: $1_object_Object'$1_object_ObjectCore'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$1_object_ObjectCore''(s1: $1_object_Object'$1_object_ObjectCore', s2: $1_object_Object'$1_object_ObjectCore'): bool {
    s1 == s2
}

// struct object::Object<0x4::collection::Collection> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:131:5+78
datatype $1_object_Object'$4_collection_Collection' {
    $1_object_Object'$4_collection_Collection'($inner: int)
}
function {:inline} $Update'$1_object_Object'$4_collection_Collection''_inner(s: $1_object_Object'$4_collection_Collection', x: int): $1_object_Object'$4_collection_Collection' {
    $1_object_Object'$4_collection_Collection'(x)
}
function $IsValid'$1_object_Object'$4_collection_Collection''(s: $1_object_Object'$4_collection_Collection'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$4_collection_Collection''(s1: $1_object_Object'$4_collection_Collection', s2: $1_object_Object'$4_collection_Collection'): bool {
    s1 == s2
}

// struct object::ObjectCore at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:100:5+551
datatype $1_object_ObjectCore {
    $1_object_ObjectCore($guid_creation_num: int, $owner: int, $allow_ungated_transfer: bool, $transfer_events: $1_event_EventHandle'$1_object_TransferEvent')
}
function {:inline} $Update'$1_object_ObjectCore'_guid_creation_num(s: $1_object_ObjectCore, x: int): $1_object_ObjectCore {
    $1_object_ObjectCore(x, s->$owner, s->$allow_ungated_transfer, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_owner(s: $1_object_ObjectCore, x: int): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, x, s->$allow_ungated_transfer, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_allow_ungated_transfer(s: $1_object_ObjectCore, x: bool): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, s->$owner, x, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_transfer_events(s: $1_object_ObjectCore, x: $1_event_EventHandle'$1_object_TransferEvent'): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, s->$owner, s->$allow_ungated_transfer, x)
}
function $IsValid'$1_object_ObjectCore'(s: $1_object_ObjectCore): bool {
    $IsValid'u64'(s->$guid_creation_num)
      && $IsValid'address'(s->$owner)
      && $IsValid'bool'(s->$allow_ungated_transfer)
      && $IsValid'$1_event_EventHandle'$1_object_TransferEvent''(s->$transfer_events)
}
function {:inline} $IsEqual'$1_object_ObjectCore'(s1: $1_object_ObjectCore, s2: $1_object_ObjectCore): bool {
    s1 == s2
}
var $1_object_ObjectCore_$memory: $Memory $1_object_ObjectCore;

// struct object::TombStone at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:114:5+170
datatype $1_object_TombStone {
    $1_object_TombStone($original_owner: int)
}
function {:inline} $Update'$1_object_TombStone'_original_owner(s: $1_object_TombStone, x: int): $1_object_TombStone {
    $1_object_TombStone(x)
}
function $IsValid'$1_object_TombStone'(s: $1_object_TombStone): bool {
    $IsValid'address'(s->$original_owner)
}
function {:inline} $IsEqual'$1_object_TombStone'(s1: $1_object_TombStone, s2: $1_object_TombStone): bool {
    s1 == s2
}
var $1_object_TombStone_$memory: $Memory $1_object_TombStone;

// struct object::Transfer at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:183:5+108
datatype $1_object_Transfer {
    $1_object_Transfer($object: int, $from: int, $to: int)
}
function {:inline} $Update'$1_object_Transfer'_object(s: $1_object_Transfer, x: int): $1_object_Transfer {
    $1_object_Transfer(x, s->$from, s->$to)
}
function {:inline} $Update'$1_object_Transfer'_from(s: $1_object_Transfer, x: int): $1_object_Transfer {
    $1_object_Transfer(s->$object, x, s->$to)
}
function {:inline} $Update'$1_object_Transfer'_to(s: $1_object_Transfer, x: int): $1_object_Transfer {
    $1_object_Transfer(s->$object, s->$from, x)
}
function $IsValid'$1_object_Transfer'(s: $1_object_Transfer): bool {
    $IsValid'address'(s->$object)
      && $IsValid'address'(s->$from)
      && $IsValid'address'(s->$to)
}
function {:inline} $IsEqual'$1_object_Transfer'(s1: $1_object_Transfer, s2: $1_object_Transfer): bool {
    s1 == s2
}

// struct object::TransferEvent at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:175:5+113
datatype $1_object_TransferEvent {
    $1_object_TransferEvent($object: int, $from: int, $to: int)
}
function {:inline} $Update'$1_object_TransferEvent'_object(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(x, s->$from, s->$to)
}
function {:inline} $Update'$1_object_TransferEvent'_from(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(s->$object, x, s->$to)
}
function {:inline} $Update'$1_object_TransferEvent'_to(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(s->$object, s->$from, x)
}
function $IsValid'$1_object_TransferEvent'(s: $1_object_TransferEvent): bool {
    $IsValid'address'(s->$object)
      && $IsValid'address'(s->$from)
      && $IsValid'address'(s->$to)
}
function {:inline} $IsEqual'$1_object_TransferEvent'(s1: $1_object_TransferEvent, s2: $1_object_TransferEvent): bool {
    s1 == s2
}

// struct object::TransferRef at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:153:5+65
datatype $1_object_TransferRef {
    $1_object_TransferRef($self: int)
}
function {:inline} $Update'$1_object_TransferRef'_self(s: $1_object_TransferRef, x: int): $1_object_TransferRef {
    $1_object_TransferRef(x)
}
function $IsValid'$1_object_TransferRef'(s: $1_object_TransferRef): bool {
    $IsValid'address'(s->$self)
}
function {:inline} $IsEqual'$1_object_TransferRef'(s1: $1_object_TransferRef, s2: $1_object_TransferRef): bool {
    s1 == s2
}

// struct object::Untransferable at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:121:5+32
datatype $1_object_Untransferable {
    $1_object_Untransferable($dummy_field: bool)
}
function {:inline} $Update'$1_object_Untransferable'_dummy_field(s: $1_object_Untransferable, x: bool): $1_object_Untransferable {
    $1_object_Untransferable(x)
}
function $IsValid'$1_object_Untransferable'(s: $1_object_Untransferable): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_object_Untransferable'(s1: $1_object_Untransferable, s2: $1_object_Untransferable): bool {
    s1 == s2
}
var $1_object_Untransferable_$memory: $Memory $1_object_Untransferable;

// fun object::new_event_handle<0x4::collection::MutationEvent> [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:404:5+180
procedure {:inline 1} $1_object_new_event_handle'$4_collection_MutationEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$4_collection_MutationEvent')
{
    // declare local variables
    var $t1: $1_object_ObjectCore;
    var $t2: $1_guid_GUID;
    var $t3: $1_object_ObjectCore;
    var $t4: $1_guid_GUID;
    var $t5: int;
    var $t6: $1_event_EventHandle'$4_collection_MutationEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$4_collection_MutationEvent'': $1_event_EventHandle'$4_collection_MutationEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, global<0x1::object::ObjectCore>(signer::$address_of($t0))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:371:9+65
    assume {:print "$at(186,15272,15337)"} true;
    assume ($t1 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // assume Identical($t2, pack guid::GUID(pack guid::ID(select object::ObjectCore.guid_creation_num<0x1::object::ObjectCore>($t1), signer::$address_of($t0)))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:374:9+185
    assume {:print "$at(186,15410,15595)"} true;
    assume ($t2 == $1_guid_GUID($1_guid_ID($t1->$guid_creation_num, $1_signer_$address_of($t0))));

    // trace_local[object]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:404:5+1
    assume {:print "$at(185,17618,17619)"} true;
    assume {:print "$track_local(40,0,0):", $t0} $t0 == $t0;

    // assume Identical($t3, global<0x1::object::ObjectCore>(signer::$address_of($t0))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:355:9+65
    assume {:print "$at(186,14733,14798)"} true;
    assume ($t3 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // $t4 := object::create_guid($t0) on_abort goto L2 with $t5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:407:33+19
    assume {:print "$at(185,17772,17791)"} true;
    call $t4 := $1_object_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(185,17772,17791)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(40,0):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := event::new_event_handle<#0>($t4) on_abort goto L2 with $t5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:407:9+44
    call $t6 := $1_event_new_event_handle'$4_collection_MutationEvent'($t4);
    if ($abort_flag) {
        assume {:print "$at(185,17748,17792)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(40,0):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t6) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:407:9+44
    assume {:print "$track_return(40,0,0):", $t6} $t6 == $t6;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:408:5+1
    assume {:print "$at(185,17797,17798)"} true;
L1:

    // return $t6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:408:5+1
    assume {:print "$at(185,17797,17798)"} true;
    $ret0 := $t6;
    return;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:408:5+1
L2:

    // abort($t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:408:5+1
    assume {:print "$at(185,17797,17798)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::new_event_handle<0x4::token::MutationEvent> [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:404:5+180
procedure {:inline 1} $1_object_new_event_handle'$4_token_MutationEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$4_token_MutationEvent')
{
    // declare local variables
    var $t1: $1_object_ObjectCore;
    var $t2: $1_guid_GUID;
    var $t3: $1_object_ObjectCore;
    var $t4: $1_guid_GUID;
    var $t5: int;
    var $t6: $1_event_EventHandle'$4_token_MutationEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$4_token_MutationEvent'': $1_event_EventHandle'$4_token_MutationEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, global<0x1::object::ObjectCore>(signer::$address_of($t0))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:371:9+65
    assume {:print "$at(186,15272,15337)"} true;
    assume ($t1 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // assume Identical($t2, pack guid::GUID(pack guid::ID(select object::ObjectCore.guid_creation_num<0x1::object::ObjectCore>($t1), signer::$address_of($t0)))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:374:9+185
    assume {:print "$at(186,15410,15595)"} true;
    assume ($t2 == $1_guid_GUID($1_guid_ID($t1->$guid_creation_num, $1_signer_$address_of($t0))));

    // trace_local[object]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:404:5+1
    assume {:print "$at(185,17618,17619)"} true;
    assume {:print "$track_local(40,0,0):", $t0} $t0 == $t0;

    // assume Identical($t3, global<0x1::object::ObjectCore>(signer::$address_of($t0))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:355:9+65
    assume {:print "$at(186,14733,14798)"} true;
    assume ($t3 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // $t4 := object::create_guid($t0) on_abort goto L2 with $t5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:407:33+19
    assume {:print "$at(185,17772,17791)"} true;
    call $t4 := $1_object_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(185,17772,17791)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(40,0):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := event::new_event_handle<#0>($t4) on_abort goto L2 with $t5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:407:9+44
    call $t6 := $1_event_new_event_handle'$4_token_MutationEvent'($t4);
    if ($abort_flag) {
        assume {:print "$at(185,17748,17792)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(40,0):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t6) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:407:9+44
    assume {:print "$track_return(40,0,0):", $t6} $t6 == $t6;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:408:5+1
    assume {:print "$at(185,17797,17798)"} true;
L1:

    // return $t6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:408:5+1
    assume {:print "$at(185,17797,17798)"} true;
    $ret0 := $t6;
    return;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:408:5+1
L2:

    // abort($t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:408:5+1
    assume {:print "$at(185,17797,17798)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::create_guid [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:397:5+252
procedure {:inline 1} $1_object_create_guid(_$t0: $signer) returns ($ret0: $1_guid_GUID)
{
    // declare local variables
    var $t1: int;
    var $t2: $Mutation ($1_object_ObjectCore);
    var $t3: $Mutation (int);
    var $t4: $1_object_ObjectCore;
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation ($1_object_ObjectCore);
    var $t8: $Mutation (int);
    var $t9: $1_guid_GUID;
    var $t0: $signer;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t4, global<0x1::object::ObjectCore>(signer::$address_of($t0))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:355:9+65
    assume {:print "$at(186,14733,14798)"} true;
    assume ($t4 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // trace_local[object]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:397:5+1
    assume {:print "$at(185,17323,17324)"} true;
    assume {:print "$track_local(40,1,0):", $t0} $t0 == $t0;

    // $t5 := signer::address_of($t0) on_abort goto L2 with $t6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:398:20+26
    assume {:print "$at(185,17416,17442)"} true;
    call $t5 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(185,17416,17442)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(40,1):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_local[addr]($t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:398:20+26
    assume {:print "$track_local(40,1,1):", $t5} $t5 == $t5;

    // $t7 := borrow_global<0x1::object::ObjectCore>($t5) on_abort goto L2 with $t6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:399:27+35
    assume {:print "$at(185,17470,17505)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t5));
    }
    if ($abort_flag) {
        assume {:print "$at(185,17470,17505)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(40,1):", $t6} $t6 == $t6;
        goto L2;
    }

    // $t8 := borrow_field<0x1::object::ObjectCore>.guid_creation_num($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:400:28+34
    assume {:print "$at(185,17534,17568)"} true;
    $t8 := $ChildMutation($t7, 0, $Dereference($t7)->$guid_creation_num);

    // trace_local[$t5]($t8) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:400:9+54
    $temp_0'u64' := $Dereference($t8);
    assume {:print "$track_local(40,1,3):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t9 := guid::create($t5, $t8) on_abort goto L2 with $t6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:400:9+54
    call $t9,$t8 := $1_guid_create($t5, $t8);
    if ($abort_flag) {
        assume {:print "$at(185,17515,17569)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(40,1):", $t6} $t6 == $t6;
        goto L2;
    }

    // write_back[Reference($t7).guid_creation_num (u64)]($t8) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:400:9+54
    $t7 := $UpdateMutation($t7, $Update'$1_object_ObjectCore'_guid_creation_num($Dereference($t7), $Dereference($t8)));

    // write_back[0x1::object::ObjectCore@]($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:400:9+54
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t7),
        $Dereference($t7));

    // trace_return[0]($t9) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:400:9+54
    assume {:print "$track_return(40,1,0):", $t9} $t9 == $t9;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:401:5+1
    assume {:print "$at(185,17574,17575)"} true;
L1:

    // return $t9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:401:5+1
    assume {:print "$at(185,17574,17575)"} true;
    $ret0 := $t9;
    return;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:401:5+1
L2:

    // abort($t6) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:401:5+1
    assume {:print "$at(185,17574,17575)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun object::address_from_constructor_ref [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:380:5+95
procedure {:inline 1} $1_object_address_from_constructor_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:380:5+1
    assume {:print "$at(185,16753,16754)"} true;
    assume {:print "$track_local(40,3,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::ConstructorRef>.self($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:381:9+8
    assume {:print "$at(185,16834,16842)"} true;
    $t1 := $t0->$self;

    // trace_return[0]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:381:9+8
    assume {:print "$track_return(40,3,0):", $t1} $t1 == $t1;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:382:5+1
    assume {:print "$at(185,16847,16848)"} true;
L1:

    // return $t1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:382:5+1
    assume {:print "$at(185,16847,16848)"} true;
    $ret0 := $t1;
    return;

}

// fun object::address_to_object<0x4::collection::Collection> [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:200:5+278
procedure {:inline 1} $1_object_address_to_object'$4_collection_Collection'(_$t0: int) returns ($ret0: $1_object_Object'$4_collection_Collection')
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: bool;
    var $t4: int;
    var $t5: $1_object_Object'$4_collection_Collection';
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t0: int;
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:200:5+1
    assume {:print "$at(185,8470,8471)"} true;
    assume {:print "$track_local(40,6,0):", $t0} $t0 == $t0;

    // $t1 := exists<0x1::object::ObjectCore>($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:17+26
    assume {:print "$at(185,8553,8579)"} true;
    $t1 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:9+6
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    assume {:print "$at(185,8640,8660)"} true;
L1:

    // $t2 := opaque begin: object::exists_at<#0>($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    assume {:print "$at(185,8640,8660)"} true;

    // $t3 := havoc[val]() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    havoc $t3;

    // if ($t3) goto L7 else goto L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    if ($t3) { goto L7; } else { goto L6; }

    // label L7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
L7:

    // trace_abort($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    assume {:print "$at(185,8640,8660)"} true;
    assume {:print "$track_abort(40,6):", $t4} $t4 == $t4;

    // goto L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    goto L5;

    // label L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
L6:

    // assume WellFormed($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    assume {:print "$at(185,8640,8660)"} true;
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, object::spec_exists_at<#0>($t0)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    assume $IsEqual'bool'($t2, $1_object_spec_exists_at'$4_collection_Collection'($t0));

    // $t2 := opaque end: object::exists_at<#0>($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20

    // if ($t2) goto L3 else goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:9+6
    if ($t2) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:203:9+27
    assume {:print "$at(185,8715,8742)"} true;
L3:

    // $t5 := pack 0x1::object::Object<#0>($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:203:9+27
    assume {:print "$at(185,8715,8742)"} true;
    $t5 := $1_object_Object'$4_collection_Collection'($t0);

    // trace_return[0]($t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:200:70+213
    assume {:print "$at(185,8535,8748)"} true;
    assume {:print "$track_return(40,6,0):", $t5} $t5 == $t5;

    // goto L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:200:70+213
    goto L4;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:56+24
    assume {:print "$at(185,8679,8703)"} true;
L2:

    // $t6 := 7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:56+24
    assume {:print "$at(185,8679,8703)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L5 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:39+42
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(185,8662,8704)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(40,6):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:9+6
    assume {:print "$at(185,8632,8638)"} true;
    assume {:print "$track_abort(40,6):", $t7} $t7 == $t7;

    // $t4 := move($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:9+6
    $t4 := $t7;

    // goto L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:9+6
    goto L5;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:62+22
    assume {:print "$at(185,8598,8620)"} true;
L0:

    // $t8 := 2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:62+22
    assume {:print "$at(185,8598,8620)"} true;
    $t8 := 2;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L5 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:45+40
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(185,8581,8621)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(40,6):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t9) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:9+6
    assume {:print "$at(185,8545,8551)"} true;
    assume {:print "$track_abort(40,6):", $t9} $t9 == $t9;

    // $t4 := move($t9) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:9+6
    $t4 := $t9;

    // goto L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:9+6
    goto L5;

    // label L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:204:5+1
    assume {:print "$at(185,8747,8748)"} true;
L4:

    // return $t5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:204:5+1
    assume {:print "$at(185,8747,8748)"} true;
    $ret0 := $t5;
    return;

    // label L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:204:5+1
L5:

    // abort($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:204:5+1
    assume {:print "$at(185,8747,8748)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::owner<0x1::object::ObjectCore> [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:680:5+262
procedure {:inline 1} $1_object_owner'$1_object_ObjectCore'(_$t0: $1_object_Object'$1_object_ObjectCore') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: $1_object_ObjectCore;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t0: $1_object_Object'$1_object_ObjectCore';
    var $temp_0'$1_object_Object'$1_object_ObjectCore'': $1_object_Object'$1_object_ObjectCore';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:680:5+1
    assume {:print "$at(185,28596,28597)"} true;
    assume {:print "$track_local(40,8,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::Object<#0>>.inner($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:682:32+12
    assume {:print "$at(185,28719,28731)"} true;
    $t1 := $t0->$inner;

    // $t2 := exists<0x1::object::ObjectCore>($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:682:13+32
    $t2 := $ResourceExists($1_object_ObjectCore_$memory, $t1);

    // if ($t2) goto L1 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:681:9+6
    assume {:print "$at(185,28679,28685)"} true;
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:685:35+6
    assume {:print "$at(185,28833,28839)"} true;
L1:

    // $t3 := get_field<0x1::object::Object<#0>>.inner($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:685:35+12
    assume {:print "$at(185,28833,28845)"} true;
    $t3 := $t0->$inner;

    // $t4 := get_global<0x1::object::ObjectCore>($t3) on_abort goto L3 with $t5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:685:9+39
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($1_object_ObjectCore_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(185,28807,28846)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(40,8):", $t5} $t5 == $t5;
        goto L3;
    }

    // $t6 := get_field<0x1::object::ObjectCore>.owner($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:685:9+45
    $t6 := $t4->$owner;

    // trace_return[0]($t6) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:680:78+189
    assume {:print "$at(185,28669,28858)"} true;
    assume {:print "$track_return(40,8,0):", $t6} $t6 == $t6;

    // goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:680:78+189
    goto L2;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:683:30+22
    assume {:print "$at(185,28763,28785)"} true;
L0:

    // $t7 := 2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:683:30+22
    assume {:print "$at(185,28763,28785)"} true;
    $t7 := 2;
    assume $IsValid'u64'($t7);

    // $t8 := error::not_found($t7) on_abort goto L3 with $t5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:683:13+40
    call $t8 := $1_error_not_found($t7);
    if ($abort_flag) {
        assume {:print "$at(185,28746,28786)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(40,8):", $t5} $t5 == $t5;
        goto L3;
    }

    // trace_abort($t8) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:681:9+6
    assume {:print "$at(185,28679,28685)"} true;
    assume {:print "$track_abort(40,8):", $t8} $t8 == $t8;

    // $t5 := move($t8) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:681:9+6
    $t5 := $t8;

    // goto L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:681:9+6
    goto L3;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:686:5+1
    assume {:print "$at(185,28857,28858)"} true;
L2:

    // return $t6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:686:5+1
    assume {:print "$at(185,28857,28858)"} true;
    $ret0 := $t6;
    return;

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:686:5+1
L3:

    // abort($t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:686:5+1
    assume {:print "$at(185,28857,28858)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::create_named_object [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:260:5+284
procedure {:inline 1} $1_object_create_named_object(_$t0: $signer, _$t1: Vec (int)) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: bool;
    var $t11: $1_object_ConstructorRef;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:162:9+50
    assume {:print "$at(186,6936,6986)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, object::spec_create_object_address($t4, $t1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:163:9+65
    assume {:print "$at(186,6995,7060)"} true;
    assume ($t5 == $1_object_spec_create_object_address($t4, $t1));

    // trace_local[creator]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:260:5+1
    assume {:print "$at(185,11180,11181)"} true;
    assume {:print "$track_local(40,12,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:260:5+1
    assume {:print "$track_local(40,12,1):", $t1} $t1 == $t1;

    // $t6 := signer::address_of($t0) on_abort goto L2 with $t7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:261:31+27
    assume {:print "$at(185,11295,11322)"} true;
    call $t6 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(185,11295,11322)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(40,12):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_local[creator_address]($t6) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:261:31+27
    assume {:print "$track_local(40,12,2):", $t6} $t6 == $t6;

    // $t8 := opaque begin: object::create_object_address($t6, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
    assume {:print "$at(185,11347,11392)"} true;

    // $t9 := havoc[val]() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
    havoc $t9;

    // if ($t9) goto L4 else goto L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
    if ($t9) { goto L4; } else { goto L3; }

    // label L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
L4:

    // trace_abort($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
    assume {:print "$at(185,11347,11392)"} true;
    assume {:print "$track_abort(40,12):", $t7} $t7 == $t7;

    // goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
    goto L2;

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
L3:

    // assume WellFormed($t8) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
    assume {:print "$at(185,11347,11392)"} true;
    assume $IsValid'address'($t8);

    // assume Eq<address>($t8, object::spec_create_object_address($t6, $t1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
    assume $IsEqual'address'($t8, $1_object_spec_create_object_address($t6, $t1));

    // $t8 := opaque end: object::create_object_address($t6, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45

    // trace_local[obj_addr]($t8) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
    assume {:print "$track_local(40,12,3):", $t8} $t8 == $t8;

    // $t10 := false at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:263:59+5
    assume {:print "$at(185,11452,11457)"} true;
    $t10 := false;
    assume $IsValid'bool'($t10);

    // $t11 := object::create_object_internal($t6, $t8, $t10) on_abort goto L2 with $t7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:263:9+56
    call $t11 := $1_object_create_object_internal($t6, $t8, $t10);
    if ($abort_flag) {
        assume {:print "$at(185,11402,11458)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(40,12):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:263:9+56
    assume {:print "$track_return(40,12,0):", $t11} $t11 == $t11;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:264:5+1
    assume {:print "$at(185,11463,11464)"} true;
L1:

    // return $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:264:5+1
    assume {:print "$at(185,11463,11464)"} true;
    $ret0 := $t11;
    return;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:264:5+1
L2:

    // abort($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:264:5+1
    assume {:print "$at(185,11463,11464)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun object::create_object_internal [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:327:5+766
procedure {:inline 1} $1_object_create_object_internal(_$t0: int, _$t1: int, _$t2: bool) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t3: $signer;
    var $t4: int;
    var $t5: $1_guid_GUID;
    var $t6: bool;
    var $t7: $signer;
    var $t8: int;
    var $t9: $Mutation (int);
    var $t10: $1_guid_GUID;
    var $t11: int;
    var $t12: int;
    var $t13: bool;
    var $t14: $1_event_EventHandle'$1_object_TransferEvent';
    var $t15: $1_object_ObjectCore;
    var $t16: $1_object_ConstructorRef;
    var $t17: int;
    var $t18: int;
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[creator_address]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:327:5+1
    assume {:print "$at(185,14718,14719)"} true;
    assume {:print "$track_local(40,18,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:327:5+1
    assume {:print "$track_local(40,18,1):", $t1} $t1 == $t1;

    // trace_local[can_delete]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:327:5+1
    assume {:print "$track_local(40,18,2):", $t2} $t2 == $t2;

    // $t6 := exists<0x1::object::ObjectCore>($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:332:18+26
    assume {:print "$at(185,14872,14898)"} true;
    $t6 := $ResourceExists($1_object_ObjectCore_$memory, $t1);

    // if ($t6) goto L0 else goto L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:332:17+27
    if ($t6) { goto L0; } else { goto L1; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:334:29+21
    assume {:print "$at(185,14969,14990)"} true;
L1:

    // $t7 := opaque begin: create_signer::create_signer($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:334:29+21
    assume {:print "$at(185,14969,14990)"} true;

    // assume WellFormed($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:334:29+21
    assume $IsValid'signer'($t7) && $1_signer_is_txn_signer($t7) && $1_signer_is_txn_signer_addr($t7->$addr);

    // assume Eq<address>(signer::$address_of($t7), $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:334:29+21
    assume $IsEqual'address'($1_signer_$address_of($t7), $t1);

    // assume Eq<signer>($t7, create_signer::spec_create_signer($t1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:334:29+21
    assume $IsEqual'signer'($t7, $1_create_signer_spec_create_signer($t1));

    // $t7 := opaque end: create_signer::create_signer($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:334:29+21

    // trace_local[object_signer]($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:334:29+21
    assume {:print "$track_local(40,18,3):", $t7} $t7 == $t7;

    // $t8 := 1125899906842624 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:335:33+22
    assume {:print "$at(185,15024,15046)"} true;
    $t8 := 1125899906842624;
    assume $IsValid'u64'($t8);

    // $t4 := $t8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:335:33+22
    $t4 := $t8;

    // trace_local[guid_creation_num]($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:335:33+22
    assume {:print "$track_local(40,18,4):", $t4} $t4 == $t4;

    // $t9 := borrow_local($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:336:57+22
    assume {:print "$at(185,15104,15126)"} true;
    $t9 := $Mutation($Local(4), EmptyVec(), $t4);

    // $t10 := guid::create($t1, $t9) on_abort goto L3 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:336:36+44
    call $t10,$t9 := $1_guid_create($t1, $t9);
    if ($abort_flag) {
        assume {:print "$at(185,15083,15127)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,18):", $t11} $t11 == $t11;
        goto L3;
    }

    // write_back[LocalRoot($t4)@]($t9) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:336:36+44
    $t4 := $Dereference($t9);

    // trace_local[guid_creation_num]($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:336:36+44
    assume {:print "$track_local(40,18,4):", $t4} $t4 == $t4;

    // trace_local[transfer_events_guid]($t10) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:336:36+44
    assume {:print "$track_local(40,18,5):", $t10} $t10 == $t10;

    // $t12 := move($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:341:17+17
    assume {:print "$at(185,15216,15233)"} true;
    $t12 := $t4;

    // $t13 := true at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:343:41+4
    assume {:print "$at(185,15315,15319)"} true;
    $t13 := true;
    assume $IsValid'bool'($t13);

    // $t14 := event::new_event_handle<0x1::object::TransferEvent>($t10) on_abort goto L3 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:344:34+45
    assume {:print "$at(185,15354,15399)"} true;
    call $t14 := $1_event_new_event_handle'$1_object_TransferEvent'($t10);
    if ($abort_flag) {
        assume {:print "$at(185,15354,15399)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,18):", $t11} $t11 == $t11;
        goto L3;
    }

    // $t15 := pack 0x1::object::ObjectCore($t12, $t0, $t13, $t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:340:13+227
    assume {:print "$at(185,15187,15414)"} true;
    $t15 := $1_object_ObjectCore($t12, $t0, $t13, $t14);

    // move_to<0x1::object::ObjectCore>($t15, $t7) on_abort goto L3 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:338:9+287
    assume {:print "$at(185,15138,15425)"} true;
    if ($ResourceExists($1_object_ObjectCore_$memory, $t7->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $t7->$addr, $t15);
    }
    if ($abort_flag) {
        assume {:print "$at(185,15138,15425)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,18):", $t11} $t11 == $t11;
        goto L3;
    }

    // $t16 := pack 0x1::object::ConstructorRef($t1, $t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:347:9+43
    assume {:print "$at(185,15435,15478)"} true;
    $t16 := $1_object_ConstructorRef($t1, $t2);

    // trace_return[0]($t16) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:331:23+631
    assume {:print "$at(185,14853,15484)"} true;
    assume {:print "$track_return(40,18,0):", $t16} $t16 == $t16;

    // goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:331:23+631
    goto L2;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:332:68+14
    assume {:print "$at(185,14922,14936)"} true;
L0:

    // $t17 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:332:68+14
    assume {:print "$at(185,14922,14936)"} true;
    $t17 := 1;
    assume $IsValid'u64'($t17);

    // $t18 := error::already_exists($t17) on_abort goto L3 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:332:46+37
    call $t18 := $1_error_already_exists($t17);
    if ($abort_flag) {
        assume {:print "$at(185,14900,14937)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,18):", $t11} $t11 == $t11;
        goto L3;
    }

    // trace_abort($t18) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:332:9+6
    assume {:print "$at(185,14863,14869)"} true;
    assume {:print "$track_abort(40,18):", $t18} $t18 == $t18;

    // $t11 := move($t18) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:332:9+6
    $t11 := $t18;

    // goto L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:332:9+6
    goto L3;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:348:5+1
    assume {:print "$at(185,15483,15484)"} true;
L2:

    // return $t16 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:348:5+1
    assume {:print "$at(185,15483,15484)"} true;
    $ret0 := $t16;
    return;

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:348:5+1
L3:

    // abort($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:348:5+1
    assume {:print "$at(185,15483,15484)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun object::object_address<0x4::collection::Collection> [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:249:5+91
procedure {:inline 1} $1_object_object_address'$4_collection_Collection'(_$t0: $1_object_Object'$4_collection_Collection') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_object_Object'$4_collection_Collection';
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:249:5+1
    assume {:print "$at(185,10722,10723)"} true;
    assume {:print "$track_local(40,21,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::Object<#0>>.inner($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:250:9+12
    assume {:print "$at(185,10795,10807)"} true;
    $t1 := $t0->$inner;

    // trace_return[0]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:250:9+12
    assume {:print "$track_return(40,21,0):", $t1} $t1 == $t1;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:251:5+1
    assume {:print "$at(185,10812,10813)"} true;
L1:

    // return $t1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:251:5+1
    assume {:print "$at(185,10812,10813)"} true;
    $ret0 := $t1;
    return;

}

// fun object::disable_ungated_transfer [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:454:5+191
procedure {:inline 1} $1_object_disable_ungated_transfer(_$t0: $1_object_TransferRef) returns ()
{
    // declare local variables
    var $t1: $Mutation ($1_object_ObjectCore);
    var $t2: int;
    var $t3: $Mutation ($1_object_ObjectCore);
    var $t4: int;
    var $t5: bool;
    var $t6: $Mutation (bool);
    var $t0: $1_object_TransferRef;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:454:5+1
    assume {:print "$at(185,19153,19154)"} true;
    assume {:print "$track_local(40,26,0):", $t0} $t0 == $t0;

    // $t2 := get_field<0x1::object::TransferRef>.self($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:455:52+8
    assume {:print "$at(185,19281,19289)"} true;
    $t2 := $t0->$self;

    // $t3 := borrow_global<0x1::object::ObjectCore>($t2) on_abort goto L2 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:455:22+39
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $Mutation($Global($t2), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t2));
    }
    if ($abort_flag) {
        assume {:print "$at(185,19251,19290)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(40,26):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[object]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:455:22+39
    $temp_0'$1_object_ObjectCore' := $Dereference($t3);
    assume {:print "$track_local(40,26,1):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t5 := false at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:456:41+5
    assume {:print "$at(185,19332,19337)"} true;
    $t5 := false;
    assume $IsValid'bool'($t5);

    // $t6 := borrow_field<0x1::object::ObjectCore>.allow_ungated_transfer($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:456:9+29
    $t6 := $ChildMutation($t3, 2, $Dereference($t3)->$allow_ungated_transfer);

    // write_ref($t6, $t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:456:9+37
    $t6 := $UpdateMutation($t6, $t5);

    // write_back[Reference($t3).allow_ungated_transfer (bool)]($t6) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:456:9+37
    $t3 := $UpdateMutation($t3, $Update'$1_object_ObjectCore'_allow_ungated_transfer($Dereference($t3), $Dereference($t6)));

    // write_back[0x1::object::ObjectCore@]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:456:9+37
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t3),
        $Dereference($t3));

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:457:5+1
    assume {:print "$at(185,19343,19344)"} true;
L1:

    // return () at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:457:5+1
    assume {:print "$at(185,19343,19344)"} true;
    return;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:457:5+1
L2:

    // abort($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:457:5+1
    assume {:print "$at(185,19343,19344)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::generate_linear_transfer_ref [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:476:5+362
procedure {:inline 1} $1_object_generate_linear_transfer_ref(_$t0: $1_object_TransferRef) returns ($ret0: $1_object_LinearTransferRef)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: $1_object_Object'$1_object_ObjectCore';
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: $1_object_LinearTransferRef;
    var $t11: int;
    var $t12: int;
    var $t0: $1_object_TransferRef;
    var $temp_0'$1_object_LinearTransferRef': $1_object_LinearTransferRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t2, select object::ObjectCore.owner<0x1::object::ObjectCore>(global<0x1::object::ObjectCore>(select object::TransferRef.self<0x1::object::TransferRef>($t0)))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:420:9+47
    assume {:print "$at(186,16994,17041)"} true;
    assume ($t2 == $ResourceValue($1_object_ObjectCore_$memory, $t0->$self)->$owner);

    // trace_local[ref]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:476:5+1
    assume {:print "$at(185,20180,20181)"} true;
    assume {:print "$track_local(40,31,0):", $t0} $t0 == $t0;

    // $t3 := get_field<0x1::object::TransferRef>.self($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:477:41+8
    assume {:print "$at(185,20320,20328)"} true;
    $t3 := $t0->$self;

    // $t4 := exists<0x1::object::Untransferable>($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:477:18+32
    $t4 := $ResourceExists($1_object_Untransferable_$memory, $t3);

    // if ($t4) goto L0 else goto L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:477:17+33
    if ($t4) { goto L0; } else { goto L1; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:478:55+8
    assume {:print "$at(185,20439,20447)"} true;
L1:

    // $t5 := get_field<0x1::object::TransferRef>.self($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:478:55+8
    assume {:print "$at(185,20439,20447)"} true;
    $t5 := $t0->$self;

    // $t6 := pack 0x1::object::Object<0x1::object::ObjectCore>($t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:478:27+38
    $t6 := $1_object_Object'$1_object_ObjectCore'($t5);

    // $t7 := object::owner<0x1::object::ObjectCore>($t6) on_abort goto L3 with $t8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:478:21+45
    call $t7 := $1_object_owner'$1_object_ObjectCore'($t6);
    if ($abort_flag) {
        assume {:print "$at(185,20405,20450)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(40,31):", $t8} $t8 == $t8;
        goto L3;
    }

    // trace_local[$t4]($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:478:21+45
    assume {:print "$track_local(40,31,1):", $t7} $t7 == $t7;

    // $t9 := get_field<0x1::object::TransferRef>.self($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:480:19+8
    assume {:print "$at(185,20498,20506)"} true;
    $t9 := $t0->$self;

    // $t10 := pack 0x1::object::LinearTransferRef($t9, $t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:479:9+76
    assume {:print "$at(185,20460,20536)"} true;
    $t10 := $1_object_LinearTransferRef($t9, $t7);

    // trace_return[0]($t10) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:476:103+264
    assume {:print "$at(185,20278,20542)"} true;
    assume {:print "$track_return(40,31,0):", $t10} $t10 == $t10;

    // goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:476:103+264
    goto L2;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:477:9+6
    assume {:print "$at(185,20288,20294)"} true;
L0:

    // $t11 := 9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:477:77+25
    assume {:print "$at(185,20356,20381)"} true;
    $t11 := 9;
    assume $IsValid'u64'($t11);

    // $t12 := error::permission_denied($t11) on_abort goto L3 with $t8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:477:52+51
    call $t12 := $1_error_permission_denied($t11);
    if ($abort_flag) {
        assume {:print "$at(185,20331,20382)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(40,31):", $t8} $t8 == $t8;
        goto L3;
    }

    // trace_abort($t12) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:477:9+6
    assume {:print "$at(185,20288,20294)"} true;
    assume {:print "$track_abort(40,31):", $t12} $t12 == $t12;

    // $t8 := move($t12) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:477:9+6
    $t8 := $t12;

    // goto L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:477:9+6
    goto L3;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:483:5+1
    assume {:print "$at(185,20541,20542)"} true;
L2:

    // return $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:483:5+1
    assume {:print "$at(185,20541,20542)"} true;
    $ret0 := $t10;
    return;

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:483:5+1
L3:

    // abort($t8) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:483:5+1
    assume {:print "$at(185,20541,20542)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun object::generate_signer [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:375:5+96
procedure {:inline 1} $1_object_generate_signer(_$t0: $1_object_ConstructorRef) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: int;
    var $t2: $signer;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:375:5+1
    assume {:print "$at(185,16591,16592)"} true;
    assume {:print "$track_local(40,32,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::ConstructorRef>.self($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:376:23+8
    assume {:print "$at(185,16672,16680)"} true;
    $t1 := $t0->$self;

    // $t2 := opaque begin: create_signer::create_signer($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:376:9+23

    // assume WellFormed($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:376:9+23
    assume $IsValid'signer'($t2) && $1_signer_is_txn_signer($t2) && $1_signer_is_txn_signer_addr($t2->$addr);

    // assume Eq<address>(signer::$address_of($t2), $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:376:9+23
    assume $IsEqual'address'($1_signer_$address_of($t2), $t1);

    // assume Eq<signer>($t2, create_signer::spec_create_signer($t1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:376:9+23
    assume $IsEqual'signer'($t2, $1_create_signer_spec_create_signer($t1));

    // $t2 := opaque end: create_signer::create_signer($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:376:9+23

    // trace_return[0]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:376:9+23
    assume {:print "$track_return(40,32,0):", $t2} $t2 == $t2;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:377:5+1
    assume {:print "$at(185,16686,16687)"} true;
L1:

    // return $t2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:377:5+1
    assume {:print "$at(185,16686,16687)"} true;
    $ret0 := $t2;
    return;

}

// fun object::generate_transfer_ref [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:364:5+219
procedure {:inline 1} $1_object_generate_transfer_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_TransferRef)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: $1_object_TransferRef;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:364:5+1
    assume {:print "$at(185,16090,16091)"} true;
    assume {:print "$track_local(40,34,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::ConstructorRef>.self($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:41+8
    assume {:print "$at(185,16200,16208)"} true;
    $t1 := $t0->$self;

    // $t2 := exists<0x1::object::Untransferable>($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:18+32
    $t2 := $ResourceExists($1_object_Untransferable_$memory, $t1);

    // if ($t2) goto L0 else goto L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:17+33
    if ($t2) { goto L0; } else { goto L1; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:366:29+8
    assume {:print "$at(185,16293,16301)"} true;
L1:

    // $t3 := get_field<0x1::object::ConstructorRef>.self($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:366:29+8
    assume {:print "$at(185,16293,16301)"} true;
    $t3 := $t0->$self;

    // $t4 := pack 0x1::object::TransferRef($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:366:9+30
    $t4 := $1_object_TransferRef($t3);

    // trace_return[0]($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:364:73+151
    assume {:print "$at(185,16158,16309)"} true;
    assume {:print "$track_return(40,34,0):", $t4} $t4 == $t4;

    // goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:364:73+151
    goto L2;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:9+6
    assume {:print "$at(185,16168,16174)"} true;
L0:

    // $t5 := 9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:77+25
    assume {:print "$at(185,16236,16261)"} true;
    $t5 := 9;
    assume $IsValid'u64'($t5);

    // $t6 := error::permission_denied($t5) on_abort goto L3 with $t7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:52+51
    call $t6 := $1_error_permission_denied($t5);
    if ($abort_flag) {
        assume {:print "$at(185,16211,16262)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(40,34):", $t7} $t7 == $t7;
        goto L3;
    }

    // trace_abort($t6) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:9+6
    assume {:print "$at(185,16168,16174)"} true;
    assume {:print "$track_abort(40,34):", $t6} $t6 == $t6;

    // $t7 := move($t6) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:9+6
    $t7 := $t6;

    // goto L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:9+6
    goto L3;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:367:5+1
    assume {:print "$at(185,16308,16309)"} true;
L2:

    // return $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:367:5+1
    assume {:print "$at(185,16308,16309)"} true;
    $ret0 := $t4;
    return;

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:367:5+1
L3:

    // abort($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:367:5+1
    assume {:print "$at(185,16308,16309)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun object::object_from_constructor_ref<0x4::collection::Collection> [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:385:5+126
procedure {:inline 1} $1_object_object_from_constructor_ref'$4_collection_Collection'(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_Object'$4_collection_Collection')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$4_collection_Collection';
    var $t3: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:385:5+1
    assume {:print "$at(185,16912,16913)"} true;
    assume {:print "$track_local(40,42,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::ConstructorRef>.self($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:386:30+8
    assume {:print "$at(185,17023,17031)"} true;
    $t1 := $t0->$self;

    // $t2 := object::address_to_object<#0>($t1) on_abort goto L2 with $t3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:386:9+30
    call $t2 := $1_object_address_to_object'$4_collection_Collection'($t1);
    if ($abort_flag) {
        assume {:print "$at(185,17002,17032)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(40,42):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:386:9+30
    assume {:print "$track_return(40,42,0):", $t2} $t2 == $t2;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:387:5+1
    assume {:print "$at(185,17037,17038)"} true;
L1:

    // return $t2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:387:5+1
    assume {:print "$at(185,17037,17038)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:387:5+1
L2:

    // abort($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:387:5+1
    assume {:print "$at(185,17037,17038)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::transfer_with_ref [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:486:5+1203
procedure {:inline 1} $1_object_transfer_with_ref(_$t0: $1_object_LinearTransferRef, _$t1: int) returns ()
{
    // declare local variables
    var $t2: $Mutation ($1_object_ObjectCore);
    var $t3: $Mutation (int);
    var $t4: $1_object_ObjectCore;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: $1_object_TombStone;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: $Mutation ($1_object_ObjectCore);
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: bool;
    var $t19: int;
    var $t20: int;
    var $t21: $1_object_Transfer;
    var $t22: $Mutation (int);
    var $t23: $Mutation ($1_event_EventHandle'$1_object_TransferEvent');
    var $t24: int;
    var $t25: int;
    var $t26: $1_object_TransferEvent;
    var $t27: int;
    var $t28: int;
    var $t29: int;
    var $t30: int;
    var $t0: $1_object_LinearTransferRef;
    var $t1: int;
    var $temp_0'$1_object_LinearTransferRef': $1_object_LinearTransferRef;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, global<0x1::object::ObjectCore>(select object::LinearTransferRef.self<0x1::object::LinearTransferRef>($t0))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:429:9+42
    assume {:print "$at(186,17279,17321)"} true;
    assume ($t4 == $ResourceValue($1_object_ObjectCore_$memory, $t0->$self));

    // trace_local[ref]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:486:5+1
    assume {:print "$at(185,20619,20620)"} true;
    assume {:print "$track_local(40,51,0):", $t0} $t0 == $t0;

    // trace_local[to]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:486:5+1
    assume {:print "$track_local(40,51,1):", $t1} $t1 == $t1;

    // $t5 := get_field<0x1::object::LinearTransferRef>.self($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:487:41+8
    assume {:print "$at(185,20758,20766)"} true;
    $t5 := $t0->$self;

    // $t6 := exists<0x1::object::Untransferable>($t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:487:18+32
    $t6 := $ResourceExists($1_object_Untransferable_$memory, $t5);

    // if ($t6) goto L0 else goto L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:487:17+33
    if ($t6) { goto L0; } else { goto L1; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:490:31+3
    assume {:print "$at(185,20974,20977)"} true;
L1:

    // $t7 := get_field<0x1::object::LinearTransferRef>.self($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:490:31+8
    assume {:print "$at(185,20974,20982)"} true;
    $t7 := $t0->$self;

    // $t8 := exists<0x1::object::TombStone>($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:490:13+27
    $t8 := $ResourceExists($1_object_TombStone_$memory, $t7);

    // if ($t8) goto L2 else goto L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:490:9+126
    if ($t8) { goto L2; } else { goto L4; }

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:491:72+3
    assume {:print "$at(185,21058,21061)"} true;
L2:

    // $t9 := get_field<0x1::object::LinearTransferRef>.self($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:491:72+8
    assume {:print "$at(185,21058,21066)"} true;
    $t9 := $t0->$self;

    // $t10 := move_from<0x1::object::TombStone>($t9) on_abort goto L11 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:491:51+30
    if (!$ResourceExists($1_object_TombStone_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $ResourceValue($1_object_TombStone_$memory, $t9);
        $1_object_TombStone_$memory := $ResourceRemove($1_object_TombStone_$memory, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(185,21037,21067)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,51):", $t11} $t11 == $t11;
        goto L11;
    }

    // $t12 := unpack 0x1::object::TombStone($t10) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:491:17+31
    $t12 := $t10->$original_owner;

    // drop($t12) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:491:17+31

    // label L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:494:52+3
    assume {:print "$at(185,21132,21135)"} true;
L4:

    // $t13 := get_field<0x1::object::LinearTransferRef>.self($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:494:52+8
    assume {:print "$at(185,21132,21140)"} true;
    $t13 := $t0->$self;

    // $t14 := borrow_global<0x1::object::ObjectCore>($t13) on_abort goto L11 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:494:22+39
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $Mutation($Global($t13), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t13));
    }
    if ($abort_flag) {
        assume {:print "$at(185,21102,21141)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,51):", $t11} $t11 == $t11;
        goto L11;
    }

    // trace_local[object]($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:494:22+39
    $temp_0'$1_object_ObjectCore' := $Dereference($t14);
    assume {:print "$track_local(40,51,2):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t15 := get_field<0x1::object::ObjectCore>.owner($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:496:13+12
    assume {:print "$at(185,21172,21184)"} true;
    $t15 := $Dereference($t14)->$owner;

    // $t16 := get_field<0x1::object::LinearTransferRef>.owner($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:496:29+9
    $t16 := $t0->$owner;

    // $t17 := ==($t15, $t16) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:496:13+25
    $t17 := $IsEqual'address'($t15, $t16);

    // if ($t17) goto L6 else goto L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:495:9+6
    assume {:print "$at(185,21151,21157)"} true;
    if ($t17) { goto L6; } else { goto L5; }

    // label L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:499:13+47
    assume {:print "$at(185,21279,21326)"} true;
L6:

    // $t18 := features::module_event_migration_enabled() on_abort goto L11 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:499:13+47
    assume {:print "$at(185,21279,21326)"} true;
    call $t18 := $1_features_module_event_migration_enabled();
    if ($abort_flag) {
        assume {:print "$at(185,21279,21326)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,51):", $t11} $t11 == $t11;
        goto L11;
    }

    // if ($t18) goto L8 else goto L7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:499:9+513
    if ($t18) { goto L8; } else { goto L7; }

    // label L8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:502:29+3
    assume {:print "$at(185,21410,21413)"} true;
L8:

    // $t19 := get_field<0x1::object::LinearTransferRef>.self($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:502:29+8
    assume {:print "$at(185,21410,21418)"} true;
    $t19 := $t0->$self;

    // $t20 := get_field<0x1::object::ObjectCore>.owner($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:503:27+12
    assume {:print "$at(185,21446,21458)"} true;
    $t20 := $Dereference($t14)->$owner;

    // $t21 := pack 0x1::object::Transfer($t19, $t20, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:501:17+130
    assume {:print "$at(185,21371,21501)"} true;
    $t21 := $1_object_Transfer($t19, $t20, $t1);

    // opaque begin: event::emit<0x1::object::Transfer>($t21) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:500:13+174
    assume {:print "$at(185,21342,21516)"} true;

    // opaque end: event::emit<0x1::object::Transfer>($t21) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:500:13+174

    // label L9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:517:9+12
    assume {:print "$at(185,21798,21810)"} true;
L9:

    // $t22 := borrow_field<0x1::object::ObjectCore>.owner($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:517:9+12
    assume {:print "$at(185,21798,21810)"} true;
    $t22 := $ChildMutation($t14, 1, $Dereference($t14)->$owner);

    // trace_local[$t44]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:517:9+17
    $temp_0'address' := $Dereference($t22);
    assume {:print "$track_local(40,51,3):", $temp_0'address'} $temp_0'address' == $temp_0'address';

    // write_ref($t22, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:517:9+17
    $t22 := $UpdateMutation($t22, $t1);

    // write_back[Reference($t14).owner (address)]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:517:9+17
    $t14 := $UpdateMutation($t14, $Update'$1_object_ObjectCore'_owner($Dereference($t14), $Dereference($t22)));

    // write_back[0x1::object::ObjectCore@]($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:517:9+17
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t14),
        $Dereference($t14));

    // goto L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:486:102+1106
    assume {:print "$at(185,20716,21822)"} true;
    goto L10;

    // label L7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:509:17+27
    assume {:print "$at(185,21582,21609)"} true;
L7:

    // $t23 := borrow_field<0x1::object::ObjectCore>.transfer_events($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:509:17+27
    assume {:print "$at(185,21582,21609)"} true;
    $t23 := $ChildMutation($t14, 3, $Dereference($t14)->$transfer_events);

    // $t24 := get_field<0x1::object::LinearTransferRef>.self($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:511:29+8
    assume {:print "$at(185,21671,21679)"} true;
    $t24 := $t0->$self;

    // $t25 := get_field<0x1::object::ObjectCore>.owner($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:512:27+12
    assume {:print "$at(185,21707,21719)"} true;
    $t25 := $Dereference($t14)->$owner;

    // $t26 := pack 0x1::object::TransferEvent($t24, $t25, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:510:17+135
    assume {:print "$at(185,21627,21762)"} true;
    $t26 := $1_object_TransferEvent($t24, $t25, $t1);

    // opaque begin: event::emit_event<0x1::object::TransferEvent>($t23, $t26) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:508:13+230
    assume {:print "$at(185,21547,21777)"} true;

    // opaque end: event::emit_event<0x1::object::TransferEvent>($t23, $t26) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:508:13+230

    // write_back[Reference($t14).transfer_events (0x1::event::EventHandle<0x1::object::TransferEvent>)]($t23) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:508:13+230
    $t14 := $UpdateMutation($t14, $Update'$1_object_ObjectCore'_transfer_events($Dereference($t14), $Dereference($t23)));

    // goto L9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:508:13+230
    goto L9;

    // label L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:495:9+6
    assume {:print "$at(185,21151,21157)"} true;
L5:

    // drop($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:495:9+6
    assume {:print "$at(185,21151,21157)"} true;

    // $t27 := 4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:497:38+17
    assume {:print "$at(185,21236,21253)"} true;
    $t27 := 4;
    assume $IsValid'u64'($t27);

    // $t28 := error::permission_denied($t27) on_abort goto L11 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:497:13+43
    call $t28 := $1_error_permission_denied($t27);
    if ($abort_flag) {
        assume {:print "$at(185,21211,21254)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,51):", $t11} $t11 == $t11;
        goto L11;
    }

    // trace_abort($t28) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:495:9+6
    assume {:print "$at(185,21151,21157)"} true;
    assume {:print "$track_abort(40,51):", $t28} $t28 == $t28;

    // $t11 := move($t28) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:495:9+6
    $t11 := $t28;

    // goto L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:495:9+6
    goto L11;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:487:77+25
    assume {:print "$at(185,20794,20819)"} true;
L0:

    // $t29 := 9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:487:77+25
    assume {:print "$at(185,20794,20819)"} true;
    $t29 := 9;
    assume $IsValid'u64'($t29);

    // $t30 := error::permission_denied($t29) on_abort goto L11 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:487:52+51
    call $t30 := $1_error_permission_denied($t29);
    if ($abort_flag) {
        assume {:print "$at(185,20769,20820)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,51):", $t11} $t11 == $t11;
        goto L11;
    }

    // trace_abort($t30) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:487:9+6
    assume {:print "$at(185,20726,20732)"} true;
    assume {:print "$track_abort(40,51):", $t30} $t30 == $t30;

    // $t11 := move($t30) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:487:9+6
    $t11 := $t30;

    // goto L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:487:9+6
    goto L11;

    // label L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:518:5+1
    assume {:print "$at(185,21821,21822)"} true;
L10:

    // return () at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:518:5+1
    assume {:print "$at(185,21821,21822)"} true;
    return;

    // label L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:518:5+1
L11:

    // abort($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:518:5+1
    assume {:print "$at(185,21821,21822)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator_v2/aggregator_v2.spec.move:102:10+90
function  $1_aggregator_v2_spec_get_string_value'u64'(aggregator: $1_aggregator_v2_AggregatorSnapshot'u64'): $1_string_String;
axiom (forall aggregator: $1_aggregator_v2_AggregatorSnapshot'u64' ::
(var $$res := $1_aggregator_v2_spec_get_string_value'u64'(aggregator);
$IsValid'$1_string_String'($$res)));

// struct aggregator_v2::AggregatorSnapshot<u64> at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator_v2/aggregator_v2.move:60:5+88
datatype $1_aggregator_v2_AggregatorSnapshot'u64' {
    $1_aggregator_v2_AggregatorSnapshot'u64'($value: int)
}
function {:inline} $Update'$1_aggregator_v2_AggregatorSnapshot'u64''_value(s: $1_aggregator_v2_AggregatorSnapshot'u64', x: int): $1_aggregator_v2_AggregatorSnapshot'u64' {
    $1_aggregator_v2_AggregatorSnapshot'u64'(x)
}
function $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''(s: $1_aggregator_v2_AggregatorSnapshot'u64'): bool {
    $IsValid'u64'(s->$value)
}
function {:inline} $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''(s1: $1_aggregator_v2_AggregatorSnapshot'u64', s2: $1_aggregator_v2_AggregatorSnapshot'u64'): bool {
    s1 == s2
}

// struct aggregator_v2::DerivedStringSnapshot at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator_v2/aggregator_v2.move:64:5+104
datatype $1_aggregator_v2_DerivedStringSnapshot {
    $1_aggregator_v2_DerivedStringSnapshot($value: $1_string_String, $padding: Vec (int))
}
function {:inline} $Update'$1_aggregator_v2_DerivedStringSnapshot'_value(s: $1_aggregator_v2_DerivedStringSnapshot, x: $1_string_String): $1_aggregator_v2_DerivedStringSnapshot {
    $1_aggregator_v2_DerivedStringSnapshot(x, s->$padding)
}
function {:inline} $Update'$1_aggregator_v2_DerivedStringSnapshot'_padding(s: $1_aggregator_v2_DerivedStringSnapshot, x: Vec (int)): $1_aggregator_v2_DerivedStringSnapshot {
    $1_aggregator_v2_DerivedStringSnapshot(s->$value, x)
}
function $IsValid'$1_aggregator_v2_DerivedStringSnapshot'(s: $1_aggregator_v2_DerivedStringSnapshot): bool {
    $IsValid'$1_string_String'(s->$value)
      && $IsValid'vec'u8''(s->$padding)
}
function {:inline} $IsEqual'$1_aggregator_v2_DerivedStringSnapshot'(s1: $1_aggregator_v2_DerivedStringSnapshot, s2: $1_aggregator_v2_DerivedStringSnapshot): bool {
    $IsEqual'$1_string_String'(s1->$value, s2->$value)
    && $IsEqual'vec'u8''(s1->$padding, s2->$padding)}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:7:9+50
function  $1_aptos_hash_spec_keccak256(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_keccak256(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:12:9+58
function  $1_aptos_hash_spec_sha2_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha2_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:17:9+58
function  $1_aptos_hash_spec_sha3_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha3_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:22:9+59
function  $1_aptos_hash_spec_ripemd160_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_ripemd160_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:27:9+61
function  $1_aptos_hash_spec_blake2b_256_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_blake2b_256_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/reconfiguration.move:161:5+155
function {:inline} $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration): int {
    $ResourceValue($1_reconfiguration_Configuration_$memory, 1)->$last_reconfiguration_time
}

// struct reconfiguration::Configuration at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/reconfiguration.move:43:5+306
datatype $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration($epoch: int, $last_reconfiguration_time: int, $events: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent')
}
function {:inline} $Update'$1_reconfiguration_Configuration'_epoch(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(x, s->$last_reconfiguration_time, s->$events)
}
function {:inline} $Update'$1_reconfiguration_Configuration'_last_reconfiguration_time(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(s->$epoch, x, s->$events)
}
function {:inline} $Update'$1_reconfiguration_Configuration'_events(s: $1_reconfiguration_Configuration, x: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(s->$epoch, s->$last_reconfiguration_time, x)
}
function $IsValid'$1_reconfiguration_Configuration'(s: $1_reconfiguration_Configuration): bool {
    $IsValid'u64'(s->$epoch)
      && $IsValid'u64'(s->$last_reconfiguration_time)
      && $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s->$events)
}
function {:inline} $IsEqual'$1_reconfiguration_Configuration'(s1: $1_reconfiguration_Configuration, s2: $1_reconfiguration_Configuration): bool {
    s1 == s2
}
var $1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration;

// struct reconfiguration::NewEpochEvent at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/reconfiguration.move:30:5+64
datatype $1_reconfiguration_NewEpochEvent {
    $1_reconfiguration_NewEpochEvent($epoch: int)
}
function {:inline} $Update'$1_reconfiguration_NewEpochEvent'_epoch(s: $1_reconfiguration_NewEpochEvent, x: int): $1_reconfiguration_NewEpochEvent {
    $1_reconfiguration_NewEpochEvent(x)
}
function $IsValid'$1_reconfiguration_NewEpochEvent'(s: $1_reconfiguration_NewEpochEvent): bool {
    $IsValid'u64'(s->$epoch)
}
function {:inline} $IsEqual'$1_reconfiguration_NewEpochEvent'(s1: $1_reconfiguration_NewEpochEvent, s2: $1_reconfiguration_NewEpochEvent): bool {
    s1 == s2
}

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:16:10+55
function  $1_randomness_spec_fetch_and_increment_txn_counter(): Vec (int);
axiom (var $$res := $1_randomness_spec_fetch_and_increment_txn_counter();
$IsValid'vec'u8''($$res));

// spec fun at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:24:10+31
function  $1_randomness_spec_is_unbiasable(): bool;
axiom (var $$res := $1_randomness_spec_is_unbiasable();
$IsValid'bool'($$res));

// struct randomness::PerBlockRandomness at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:33:5+121
datatype $1_randomness_PerBlockRandomness {
    $1_randomness_PerBlockRandomness($epoch: int, $round: int, $seed: $1_option_Option'vec'u8'')
}
function {:inline} $Update'$1_randomness_PerBlockRandomness'_epoch(s: $1_randomness_PerBlockRandomness, x: int): $1_randomness_PerBlockRandomness {
    $1_randomness_PerBlockRandomness(x, s->$round, s->$seed)
}
function {:inline} $Update'$1_randomness_PerBlockRandomness'_round(s: $1_randomness_PerBlockRandomness, x: int): $1_randomness_PerBlockRandomness {
    $1_randomness_PerBlockRandomness(s->$epoch, x, s->$seed)
}
function {:inline} $Update'$1_randomness_PerBlockRandomness'_seed(s: $1_randomness_PerBlockRandomness, x: $1_option_Option'vec'u8''): $1_randomness_PerBlockRandomness {
    $1_randomness_PerBlockRandomness(s->$epoch, s->$round, x)
}
function $IsValid'$1_randomness_PerBlockRandomness'(s: $1_randomness_PerBlockRandomness): bool {
    $IsValid'u64'(s->$epoch)
      && $IsValid'u64'(s->$round)
      && $IsValid'$1_option_Option'vec'u8'''(s->$seed)
}
function {:inline} $IsEqual'$1_randomness_PerBlockRandomness'(s1: $1_randomness_PerBlockRandomness, s2: $1_randomness_PerBlockRandomness): bool {
    $IsEqual'u64'(s1->$epoch, s2->$epoch)
    && $IsEqual'u64'(s1->$round, s2->$round)
    && $IsEqual'$1_option_Option'vec'u8'''(s1->$seed, s2->$seed)}
var $1_randomness_PerBlockRandomness_$memory: $Memory $1_randomness_PerBlockRandomness;

// struct randomness::RandomnessGeneratedEvent at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:41:5+55
datatype $1_randomness_RandomnessGeneratedEvent {
    $1_randomness_RandomnessGeneratedEvent($dummy_field: bool)
}
function {:inline} $Update'$1_randomness_RandomnessGeneratedEvent'_dummy_field(s: $1_randomness_RandomnessGeneratedEvent, x: bool): $1_randomness_RandomnessGeneratedEvent {
    $1_randomness_RandomnessGeneratedEvent(x)
}
function $IsValid'$1_randomness_RandomnessGeneratedEvent'(s: $1_randomness_RandomnessGeneratedEvent): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_randomness_RandomnessGeneratedEvent'(s1: $1_randomness_RandomnessGeneratedEvent, s2: $1_randomness_RandomnessGeneratedEvent): bool {
    s1 == s2
}

// fun randomness::next_32_bytes [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:76:5+507
procedure {:inline 1} $1_randomness_next_32_bytes() returns ($ret0: Vec (int))
{
    // declare local variables
    var $t0: Vec (int);
    var $t1: Vec (int);
    var $t2: Vec (int);
    var $t3: $1_randomness_PerBlockRandomness;
    var $t4: Vec (int);
    var $t5: Vec (int);
    var $t6: Vec (int);
    var $t7: $1_randomness_PerBlockRandomness;
    var $t8: bool;
    var $t9: Vec (int);
    var $t10: int;
    var $t11: $1_randomness_PerBlockRandomness;
    var $t12: int;
    var $t13: $1_option_Option'vec'u8'';
    var $t14: Vec (int);
    var $t15: bool;
    var $t16: $Mutation (Vec (int));
    var $t17: $Mutation (Vec (int));
    var $t18: Vec (int);
    var $t19: $Mutation (Vec (int));
    var $t20: Vec (int);
    var $t21: Vec (int);
    var $t22: Vec (int);
    var $t23: int;
    var $temp_0'vec'u8'': Vec (int);

    // bytecode translation starts here
    // assume Identical($t2, [65, 80, 84, 79, 83, 95, 82, 65, 78, 68, 79, 77, 78, 69, 83, 83]) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:43:9+32
    assume {:print "$at(193,1607,1639)"} true;
    assume ($t2 == ConcatVec(ConcatVec(ConcatVec(MakeVec4(65, 80, 84, 79), MakeVec4(83, 95, 82, 65)), MakeVec4(78, 68, 79, 77)), MakeVec4(78, 69, 83, 83)));

    // assume Identical($t3, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:44:9+62
    assume {:print "$at(193,1648,1710)"} true;
    assume ($t3 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // assume Identical($t4, option::spec_borrow<vector<u8>>(select randomness::PerBlockRandomness.seed<0x1::randomness::PerBlockRandomness>($t3))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:45:9+48
    assume {:print "$at(193,1719,1767)"} true;
    assume ($t4 == $1_option_spec_borrow'vec'u8''($t3->$seed));

    // assume Identical($t5, transaction_context::spec_get_txn_hash()) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:46:9+56
    assume {:print "$at(193,1776,1832)"} true;
    assume ($t5 == $1_transaction_context_spec_get_txn_hash());

    // assume Identical($t6, randomness::spec_fetch_and_increment_txn_counter()) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:47:9+57
    assume {:print "$at(193,1841,1898)"} true;
    assume ($t6 == $1_randomness_spec_fetch_and_increment_txn_counter());

    // assume Identical($t7, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:53:9+62
    assume {:print "$at(193,2086,2148)"} true;
    assume ($t7 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // $t8 := opaque begin: randomness::is_unbiasable() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:77:17+15
    assume {:print "$at(192,3130,3145)"} true;

    // assume WellFormed($t8) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:77:17+15
    assume $IsValid'bool'($t8);

    // assume Eq<bool>($t8, randomness::spec_is_unbiasable()) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:77:17+15
    assume $IsEqual'bool'($t8, $1_randomness_spec_is_unbiasable());

    // $t8 := opaque end: randomness::is_unbiasable() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:77:17+15

    // if ($t8) goto L1 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:77:9+6
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:79:21+3
    assume {:print "$at(192,3192,3195)"} true;
L1:

    // $t9 := [65, 80, 84, 79, 83, 95, 82, 65, 78, 68, 79, 77, 78, 69, 83, 83] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:79:21+3
    assume {:print "$at(192,3192,3195)"} true;
    $t9 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(65, 80, 84, 79), MakeVec4(83, 95, 82, 65)), MakeVec4(78, 68, 79, 77)), MakeVec4(78, 69, 83, 83));
    assume $IsValid'vec'u8''($t9);

    // $t0 := $t9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:79:21+3
    $t0 := $t9;

    // trace_local[input]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:79:21+3
    assume {:print "$track_local(89,5,0):", $t0} $t0 == $t0;

    // $t10 := 0x1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:80:60+16
    assume {:print "$at(192,3256,3272)"} true;
    $t10 := 1;
    assume $IsValid'address'($t10);

    // $t11 := get_global<0x1::randomness::PerBlockRandomness>($t10) on_abort goto L3 with $t12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:80:26+51
    if (!$ResourceExists($1_randomness_PerBlockRandomness_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $ResourceValue($1_randomness_PerBlockRandomness_$memory, $t10);
    }
    if ($abort_flag) {
        assume {:print "$at(192,3222,3273)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(89,5):", $t12} $t12 == $t12;
        goto L3;
    }

    // $t13 := get_field<0x1::randomness::PerBlockRandomness>.seed($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:81:36+16
    assume {:print "$at(192,3310,3326)"} true;
    $t13 := $t11->$seed;

    // $t14 := opaque begin: option::borrow<vector<u8>>($t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:81:21+32

    // assume Identical($t15, option::spec_is_none<vector<u8>>($t13)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:81:21+32
    assume ($t15 == $1_option_spec_is_none'vec'u8''($t13));

    // if ($t15) goto L5 else goto L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:81:21+32
    if ($t15) { goto L5; } else { goto L4; }

    // label L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:81:21+32
L5:

    // assume And(option::spec_is_none<vector<u8>>($t13), Eq(262145, $t12)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:81:21+32
    assume {:print "$at(192,3295,3327)"} true;
    assume ($1_option_spec_is_none'vec'u8''($t13) && $IsEqual'num'(262145, $t12));

    // trace_abort($t12) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:81:21+32
    assume {:print "$at(192,3295,3327)"} true;
    assume {:print "$track_abort(89,5):", $t12} $t12 == $t12;

    // goto L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:81:21+32
    goto L3;

    // label L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:81:21+32
L4:

    // assume WellFormed($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:81:21+32
    assume {:print "$at(192,3295,3327)"} true;
    assume $IsValid'vec'u8''($t14);

    // assume Eq<vector<u8>>($t14, option::spec_borrow<vector<u8>>($t13)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:81:21+32
    assume $IsEqual'vec'u8''($t14, $1_option_spec_borrow'vec'u8''($t13));

    // $t14 := opaque end: option::borrow<vector<u8>>($t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:81:21+32

    // trace_local[seed]($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:81:20+33
    assume {:print "$track_local(89,5,1):", $t14} $t14 == $t14;

    // $t16 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:83:24+10
    assume {:print "$at(192,3353,3363)"} true;
    $t16 := $Mutation($Local(0), EmptyVec(), $t0);

    // vector::append<u8>($t16, $t14) on_abort goto L3 with $t12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:83:9+32
    call $t16 := $1_vector_append'u8'($t16, $t14);
    if ($abort_flag) {
        assume {:print "$at(192,3338,3370)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(89,5):", $t12} $t12 == $t12;
        goto L3;
    }

    // write_back[LocalRoot($t0)@]($t16) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:83:9+32
    $t0 := $Dereference($t16);

    // trace_local[input]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:83:9+32
    assume {:print "$track_local(89,5,0):", $t0} $t0 == $t0;

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:84:24+10
    assume {:print "$at(192,3395,3405)"} true;
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := opaque begin: transaction_context::get_transaction_hash() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:84:36+43

    // assume WellFormed($t18) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:84:36+43
    assume $IsValid'vec'u8''($t18);

    // assume Eq<vector<u8>>($t18, transaction_context::spec_get_txn_hash()) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:84:36+43
    assume $IsEqual'vec'u8''($t18, $1_transaction_context_spec_get_txn_hash());

    // assume Eq<num>(Len<u8>($t18), 32) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:84:36+43
    assume $IsEqual'num'(LenVec($t18), 32);

    // $t18 := opaque end: transaction_context::get_transaction_hash() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:84:36+43

    // vector::append<u8>($t17, $t18) on_abort goto L3 with $t12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:84:9+71
    call $t17 := $1_vector_append'u8'($t17, $t18);
    if ($abort_flag) {
        assume {:print "$at(192,3380,3451)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(89,5):", $t12} $t12 == $t12;
        goto L3;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:84:9+71
    $t0 := $Dereference($t17);

    // trace_local[input]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:84:9+71
    assume {:print "$track_local(89,5,0):", $t0} $t0 == $t0;

    // $t19 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:85:24+10
    assume {:print "$at(192,3476,3486)"} true;
    $t19 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t20 := opaque begin: randomness::fetch_and_increment_txn_counter() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:85:36+33

    // assume WellFormed($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:85:36+33
    assume $IsValid'vec'u8''($t20);

    // assume Eq<vector<u8>>($t20, randomness::spec_fetch_and_increment_txn_counter()) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:85:36+33
    assume $IsEqual'vec'u8''($t20, $1_randomness_spec_fetch_and_increment_txn_counter());

    // $t20 := opaque end: randomness::fetch_and_increment_txn_counter() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:85:36+33

    // vector::append<u8>($t19, $t20) on_abort goto L3 with $t12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:85:9+61
    call $t19 := $1_vector_append'u8'($t19, $t20);
    if ($abort_flag) {
        assume {:print "$at(192,3461,3522)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(89,5):", $t12} $t12 == $t12;
        goto L3;
    }

    // write_back[LocalRoot($t0)@]($t19) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:85:9+61
    $t0 := $Dereference($t19);

    // trace_local[input]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:85:9+61
    assume {:print "$track_local(89,5,0):", $t0} $t0 == $t0;

    // $t21 := move($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:86:9+21
    assume {:print "$at(192,3532,3553)"} true;
    $t21 := $t0;

    // $t22 := hash::sha3_256($t21) on_abort goto L3 with $t12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:86:9+21
    call $t22 := $1_hash_sha3_256($t21);
    if ($abort_flag) {
        assume {:print "$at(192,3532,3553)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(89,5):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_return[0]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:76:65+447
    assume {:print "$at(192,3112,3559)"} true;
    assume {:print "$track_return(89,5,0):", $t22} $t22 == $t22;

    // goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:76:65+447
    goto L2;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:77:34+21
    assume {:print "$at(192,3147,3168)"} true;
L0:

    // $t23 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:77:34+21
    assume {:print "$at(192,3147,3168)"} true;
    $t23 := 1;
    assume $IsValid'u64'($t23);

    // trace_abort($t23) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:77:9+6
    assume {:print "$at(192,3122,3128)"} true;
    assume {:print "$track_abort(89,5):", $t23} $t23 == $t23;

    // $t12 := move($t23) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:77:9+6
    $t12 := $t23;

    // goto L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:77:9+6
    goto L3;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:87:5+1
    assume {:print "$at(192,3558,3559)"} true;
L2:

    // return $t22 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:87:5+1
    assume {:print "$at(192,3558,3559)"} true;
    $ret0 := $t22;
    return;

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:87:5+1
L3:

    // abort($t12) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:87:5+1
    assume {:print "$at(192,3558,3559)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun randomness::u256_integer_internal [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:186:5+289
procedure {:inline 1} $1_randomness_u256_integer_internal() returns ($ret0: int)
{
    // declare local variables
    var $t0: Vec (int);
    var $t1: int;
    var $t2: int;
    var $t3: $1_randomness_PerBlockRandomness;
    var $t4: Vec (int);
    var $t5: $1_randomness_PerBlockRandomness;
    var $t6: Vec (int);
    var $t7: Vec (int);
    var $t8: Vec (int);
    var $t9: $1_randomness_PerBlockRandomness;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t17: $Mutation (Vec (int));
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $temp_0'u256': int;
    var $temp_0'u64': int;
    var $temp_0'vec'u8'': Vec (int);

    // bytecode translation starts here
    // assume Identical($t3, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:53:9+62
    assume {:print "$at(193,2086,2148)"} true;
    assume ($t3 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // assume Identical($t4, [65, 80, 84, 79, 83, 95, 82, 65, 78, 68, 79, 77, 78, 69, 83, 83]) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:43:9+32
    assume {:print "$at(193,1607,1639)"} true;
    assume ($t4 == ConcatVec(ConcatVec(ConcatVec(MakeVec4(65, 80, 84, 79), MakeVec4(83, 95, 82, 65)), MakeVec4(78, 68, 79, 77)), MakeVec4(78, 69, 83, 83)));

    // assume Identical($t5, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:44:9+62
    assume {:print "$at(193,1648,1710)"} true;
    assume ($t5 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // assume Identical($t6, option::spec_borrow<vector<u8>>(select randomness::PerBlockRandomness.seed<0x1::randomness::PerBlockRandomness>($t5))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:45:9+48
    assume {:print "$at(193,1719,1767)"} true;
    assume ($t6 == $1_option_spec_borrow'vec'u8''($t5->$seed));

    // assume Identical($t7, transaction_context::spec_get_txn_hash()) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:46:9+56
    assume {:print "$at(193,1776,1832)"} true;
    assume ($t7 == $1_transaction_context_spec_get_txn_hash());

    // assume Identical($t8, randomness::spec_fetch_and_increment_txn_counter()) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:47:9+57
    assume {:print "$at(193,1841,1898)"} true;
    assume ($t8 == $1_randomness_spec_fetch_and_increment_txn_counter());

    // assume Identical($t9, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:53:9+62
    assume {:print "$at(193,2086,2148)"} true;
    assume ($t9 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // $t0 := randomness::next_32_bytes() on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:187:19+15
    assume {:print "$at(192,6170,6185)"} true;
    call $t0 := $1_randomness_next_32_bytes();
    if ($abort_flag) {
        assume {:print "$at(192,6170,6185)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:187:19+15
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t11 := 0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:188:17+1
    assume {:print "$at(192,6203,6204)"} true;
    $t11 := 0;
    assume $IsValid'u64'($t11);

    // trace_local[i]($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:188:17+1
    assume {:print "$track_local(89,15,1):", $t11} $t11 == $t11;

    // $t12 := 0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:189:25+1
    assume {:print "$at(192,6230,6231)"} true;
    $t12 := 0;
    assume $IsValid'u256'($t12);

    // $t2 := $t12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:189:25+1
    $t2 := $t12;

    // trace_local[ret]($t12) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:189:25+1
    assume {:print "$track_local(89,15,2):", $t12} $t12 == $t12;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L2:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t11, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t11, $t13);

    // if ($t14) goto L1 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L1:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t12, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t12, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t11, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t11, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // goto L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    assume {:print "$at(192,6241,6358)"} true;
    goto L5;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:186:67+227
    assume {:print "$at(192,6150,6377)"} true;
L0:

    // trace_return[0]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:186:67+227
    assume {:print "$at(192,6150,6377)"} true;
    assume {:print "$track_return(89,15,0):", $t2} $t2 == $t2;

    // goto L68 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:186:67+227
    goto L68;

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:186:5+289
    // End of bounded loop unrolling for loop: L2
L3:

    // stop() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:186:5+289
    assume {:print "$at(192,6088,6377)"} true;
    assume false;
    return;

    // label L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L5:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L4 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L4; } else { goto L0; }

    // label L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L4:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L7:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L6 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L6; } else { goto L0; }

    // label L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L6:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L9:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L8 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L8; } else { goto L0; }

    // label L8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L8:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L11:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L10 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L10; } else { goto L0; }

    // label L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L10:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L13:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L12 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L12; } else { goto L0; }

    // label L12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L12:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L15 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L15:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L14 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L14; } else { goto L0; }

    // label L14 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L14:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L17 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L17:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L16 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L16; } else { goto L0; }

    // label L16 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L16:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L19 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L19:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L18 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L18; } else { goto L0; }

    // label L18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L18:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L21 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L21:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L20 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L20; } else { goto L0; }

    // label L20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L20:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L23 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L23:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L22 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L22; } else { goto L0; }

    // label L22 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L22:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L25 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L25:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L24 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L24; } else { goto L0; }

    // label L24 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L24:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L27 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L27:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L26 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L26; } else { goto L0; }

    // label L26 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L26:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L29 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L29:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L28 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L28; } else { goto L0; }

    // label L28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L28:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L31 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L31:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L30 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L30; } else { goto L0; }

    // label L30 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L30:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L33 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L33:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L32 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L32; } else { goto L0; }

    // label L32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L32:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L35 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L35:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L34 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L34; } else { goto L0; }

    // label L34 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L34:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L37 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L37:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L36 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L36; } else { goto L0; }

    // label L36 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L36:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L39 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L39:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L38 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L38; } else { goto L0; }

    // label L38 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L38:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L41 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L41:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L40 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L40; } else { goto L0; }

    // label L40 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L40:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L43 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L43:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L42 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L42; } else { goto L0; }

    // label L42 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L42:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L45 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L45:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L44 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L44; } else { goto L0; }

    // label L44 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L44:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L47 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L47:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L46 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L46; } else { goto L0; }

    // label L46 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L46:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L49 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L49:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L48 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L48; } else { goto L0; }

    // label L48 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L48:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L51 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L51:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L50 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L50; } else { goto L0; }

    // label L50 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L50:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L53 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L53:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L52 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L52; } else { goto L0; }

    // label L52 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L52:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L55 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L55:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L54 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L54; } else { goto L0; }

    // label L54 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L54:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L57 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L57:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L56 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L56; } else { goto L0; }

    // label L56 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L56:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L59 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L59:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L58 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L58; } else { goto L0; }

    // label L58 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L58:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L61 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L61:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L60 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L60; } else { goto L0; }

    // label L60 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L60:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L63 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L63:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L62 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L62; } else { goto L0; }

    // label L62 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L62:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L65 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L65:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L64 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L64; } else { goto L0; }

    // label L64 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L64:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t2 := $t20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    $t2 := $t20;

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // label L67 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+1
    assume {:print "$at(192,6248,6249)"} true;
L67:

    // $t13 := 32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:20+2
    assume {:print "$at(192,6252,6254)"} true;
    $t13 := 32;
    assume $IsValid'u64'($t13);

    // $t14 := <($t22, $t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:16+6
    call $t14 := $Lt($t22, $t13);

    // if ($t14) goto L66 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    if ($t14) { goto L66; } else { goto L0; }

    // label L66 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+3
    assume {:print "$at(192,6276,6279)"} true;
L66:

    // $t15 := 256 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:25+3
    assume {:print "$at(192,6282,6285)"} true;
    $t15 := 256;
    assume $IsValid'u256'($t15);

    // $t16 := *($t20, $t15) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+9
    call $t16 := $MulU256($t20, $t15);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t17 := borrow_local($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:49+8
    $t17 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t18 := vector::pop_back<u8>($t17) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    call $t18,$t17 := $1_vector_pop_back'u8'($t17);
    if ($abort_flag) {
        assume {:print "$at(192,6289,6315)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // write_back[LocalRoot($t0)@]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    $t0 := $Dereference($t17);

    // trace_local[raw]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:32+26
    assume {:print "$track_local(89,15,0):", $t0} $t0 == $t0;

    // $t19 := (u256)($t18) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:31+36
    call $t19 := $CastU256($t18);
    if ($abort_flag) {
        assume {:print "$at(192,6288,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // $t20 := +($t16, $t19) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:19+48
    call $t20 := $AddU256($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(192,6276,6324)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[ret]($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:191:13+54
    assume {:print "$track_local(89,15,2):", $t20} $t20 == $t20;

    // $t21 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:21+1
    assume {:print "$at(192,6346,6347)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t22, $t21) on_abort goto L69 with $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:17+5
    call $t22 := $AddU64($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(192,6342,6347)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(89,15):", $t10} $t10 == $t10;
        goto L69;
    }

    // trace_local[i]($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:192:13+9
    assume {:print "$track_local(89,15,1):", $t22} $t22 == $t22;

    // goto L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:190:9+117
    assume {:print "$at(192,6241,6358)"} true;
    goto L3;

    // label L68 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:195:5+1
    assume {:print "$at(192,6376,6377)"} true;
L68:

    // return $t2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:195:5+1
    assume {:print "$at(192,6376,6377)"} true;
    $ret0 := $t2;
    return;

    // label L69 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:195:5+1
L69:

    // abort($t10) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:195:5+1
    assume {:print "$at(192,6376,6377)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun randomness::u64_range [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:240:5+189
procedure {:inline 1} $1_randomness_u64_range(_$t0: int, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: $1_randomness_PerBlockRandomness;
    var $t3: bool;
    var $t4: $1_randomness_RandomnessGeneratedEvent;
    var $t5: int;
    var $t6: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t2, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:53:9+62
    assume {:print "$at(193,2086,2148)"} true;
    assume ($t2 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // trace_local[min_incl]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:240:5+1
    assume {:print "$at(192,8345,8346)"} true;
    assume {:print "$track_local(89,20,0):", $t0} $t0 == $t0;

    // trace_local[max_excl]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:240:5+1
    assume {:print "$track_local(89,20,1):", $t1} $t1 == $t1;

    // $t3 := false at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:241:21+27
    assume {:print "$at(192,8451,8478)"} true;
    $t3 := false;
    assume $IsValid'bool'($t3);

    // $t4 := pack 0x1::randomness::RandomnessGeneratedEvent($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:241:21+27
    $t4 := $1_randomness_RandomnessGeneratedEvent($t3);

    // opaque begin: event::emit<0x1::randomness::RandomnessGeneratedEvent>($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:241:9+40

    // opaque end: event::emit<0x1::randomness::RandomnessGeneratedEvent>($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:241:9+40

    // $t5 := randomness::u64_range_internal($t0, $t1) on_abort goto L2 with $t6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:243:9+38
    assume {:print "$at(192,8490,8528)"} true;
    call $t5 := $1_randomness_u64_range_internal($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(192,8490,8528)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(89,20):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_return[0]($t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:240:89+105
    assume {:print "$at(192,8429,8534)"} true;
    assume {:print "$track_return(89,20,0):", $t5} $t5 == $t5;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:244:5+1
    assume {:print "$at(192,8533,8534)"} true;
L1:

    // return $t5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:244:5+1
    assume {:print "$at(192,8533,8534)"} true;
    $ret0 := $t5;
    return;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:244:5+1
L2:

    // abort($t6) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:244:5+1
    assume {:print "$at(192,8533,8534)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun randomness::u64_range_internal [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:246:5+245
procedure {:inline 1} $1_randomness_u64_range_internal(_$t0: int, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $1_randomness_PerBlockRandomness;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'u256': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[min_incl]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:246:5+1
    assume {:print "$at(192,8540,8541)"} true;
    assume {:print "$track_local(89,21,0):", $t0} $t0 == $t0;

    // trace_local[max_excl]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:246:5+1
    assume {:print "$track_local(89,21,1):", $t1} $t1 == $t1;

    // $t3 := -($t1, $t0) on_abort goto L2 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:247:22+21
    assume {:print "$at(192,8656,8677)"} true;
    call $t3 := $Sub($t1, $t0);
    if ($abort_flag) {
        assume {:print "$at(192,8656,8677)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(89,21):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := (u256)($t3) on_abort goto L2 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:247:21+31
    call $t5 := $CastU256($t3);
    if ($abort_flag) {
        assume {:print "$at(192,8655,8686)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(89,21):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[range]($t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:247:21+31
    assume {:print "$track_local(89,21,2):", $t5} $t5 == $t5;

    // assume Identical($t6, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:53:9+62
    assume {:print "$at(193,2086,2148)"} true;
    assume ($t6 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // $t7 := randomness::u256_integer_internal() on_abort goto L2 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:248:24+23
    assume {:print "$at(192,8711,8734)"} true;
    call $t7 := $1_randomness_u256_integer_internal();
    if ($abort_flag) {
        assume {:print "$at(192,8711,8734)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(89,21):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t8 := %($t7, $t5) on_abort goto L2 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:248:23+33
    call $t8 := $Mod($t7, $t5);
    if ($abort_flag) {
        assume {:print "$at(192,8710,8743)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(89,21):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t9 := (u64)($t8) on_abort goto L2 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:248:22+42
    call $t9 := $CastU64($t8);
    if ($abort_flag) {
        assume {:print "$at(192,8709,8751)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(89,21):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[max_excl]($t9) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:248:22+42
    assume {:print "$track_local(89,21,1):", $t9} $t9 == $t9;

    // $t10 := +($t0, $t9) on_abort goto L2 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:250:9+17
    assume {:print "$at(192,8762,8779)"} true;
    call $t10 := $AddU64($t0, $t9);
    if ($abort_flag) {
        assume {:print "$at(192,8762,8779)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(89,21):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t10) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:250:9+17
    assume {:print "$track_return(89,21,0):", $t10} $t10 == $t10;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:251:5+1
    assume {:print "$at(192,8784,8785)"} true;
L1:

    // return $t10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:251:5+1
    assume {:print "$at(192,8784,8785)"} true;
    $ret0 := $t10;
    return;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:251:5+1
L2:

    // abort($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.move:251:5+1
    assume {:print "$at(192,8784,8785)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// struct royalty::Royalty at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/royalty.move:23:5+245
datatype $4_royalty_Royalty {
    $4_royalty_Royalty($numerator: int, $denominator: int, $payee_address: int)
}
function {:inline} $Update'$4_royalty_Royalty'_numerator(s: $4_royalty_Royalty, x: int): $4_royalty_Royalty {
    $4_royalty_Royalty(x, s->$denominator, s->$payee_address)
}
function {:inline} $Update'$4_royalty_Royalty'_denominator(s: $4_royalty_Royalty, x: int): $4_royalty_Royalty {
    $4_royalty_Royalty(s->$numerator, x, s->$payee_address)
}
function {:inline} $Update'$4_royalty_Royalty'_payee_address(s: $4_royalty_Royalty, x: int): $4_royalty_Royalty {
    $4_royalty_Royalty(s->$numerator, s->$denominator, x)
}
function $IsValid'$4_royalty_Royalty'(s: $4_royalty_Royalty): bool {
    $IsValid'u64'(s->$numerator)
      && $IsValid'u64'(s->$denominator)
      && $IsValid'address'(s->$payee_address)
}
function {:inline} $IsEqual'$4_royalty_Royalty'(s1: $4_royalty_Royalty, s2: $4_royalty_Royalty): bool {
    s1 == s2
}
var $4_royalty_Royalty_$memory: $Memory $4_royalty_Royalty;

// fun royalty::init [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/royalty.move:37:5+149
procedure {:inline 1} $4_royalty_init(_$t0: $1_object_ConstructorRef, _$t1: $4_royalty_Royalty) returns ()
{
    // declare local variables
    var $t2: $signer;
    var $t3: $signer;
    var $t4: int;
    var $t0: $1_object_ConstructorRef;
    var $t1: $4_royalty_Royalty;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$4_royalty_Royalty': $4_royalty_Royalty;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/royalty.move:37:5+1
    assume {:print "$at(233,1380,1381)"} true;
    assume {:print "$track_local(101,1,0):", $t0} $t0 == $t0;

    // trace_local[royalty]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/royalty.move:37:5+1
    assume {:print "$track_local(101,1,1):", $t1} $t1 == $t1;

    // $t3 := object::generate_signer($t0) on_abort goto L2 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/royalty.move:38:22+28
    assume {:print "$at(233,1459,1487)"} true;
    call $t3 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(233,1459,1487)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(101,1):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[signer]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/royalty.move:38:22+28
    assume {:print "$track_local(101,1,2):", $t3} $t3 == $t3;

    // move_to<0x4::royalty::Royalty>($t1, $t3) on_abort goto L2 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/royalty.move:39:9+25
    assume {:print "$at(233,1497,1522)"} true;
    if ($ResourceExists($4_royalty_Royalty_$memory, $t3->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_royalty_Royalty_$memory := $ResourceUpdate($4_royalty_Royalty_$memory, $t3->$addr, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(233,1497,1522)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(101,1):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/royalty.move:40:5+1
    assume {:print "$at(233,1528,1529)"} true;
L1:

    // return () at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/royalty.move:40:5+1
    assume {:print "$at(233,1528,1529)"} true;
    return;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/royalty.move:40:5+1
L2:

    // abort($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/royalty.move:40:5+1
    assume {:print "$at(233,1528,1529)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// struct collection::ConcurrentSupply at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:127:5+159
datatype $4_collection_ConcurrentSupply {
    $4_collection_ConcurrentSupply($current_supply: $1_aggregator_v2_Aggregator'u64', $total_minted: $1_aggregator_v2_Aggregator'u64')
}
function {:inline} $Update'$4_collection_ConcurrentSupply'_current_supply(s: $4_collection_ConcurrentSupply, x: $1_aggregator_v2_Aggregator'u64'): $4_collection_ConcurrentSupply {
    $4_collection_ConcurrentSupply(x, s->$total_minted)
}
function {:inline} $Update'$4_collection_ConcurrentSupply'_total_minted(s: $4_collection_ConcurrentSupply, x: $1_aggregator_v2_Aggregator'u64'): $4_collection_ConcurrentSupply {
    $4_collection_ConcurrentSupply(s->$current_supply, x)
}
function $IsValid'$4_collection_ConcurrentSupply'(s: $4_collection_ConcurrentSupply): bool {
    $IsValid'$1_aggregator_v2_Aggregator'u64''(s->$current_supply)
      && $IsValid'$1_aggregator_v2_Aggregator'u64''(s->$total_minted)
}
function {:inline} $IsEqual'$4_collection_ConcurrentSupply'(s1: $4_collection_ConcurrentSupply, s2: $4_collection_ConcurrentSupply): bool {
    s1 == s2
}
var $4_collection_ConcurrentSupply_$memory: $Memory $4_collection_ConcurrentSupply;

// struct collection::BurnEvent at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:133:5+84
datatype $4_collection_BurnEvent {
    $4_collection_BurnEvent($index: int, $token: int)
}
function {:inline} $Update'$4_collection_BurnEvent'_index(s: $4_collection_BurnEvent, x: int): $4_collection_BurnEvent {
    $4_collection_BurnEvent(x, s->$token)
}
function {:inline} $Update'$4_collection_BurnEvent'_token(s: $4_collection_BurnEvent, x: int): $4_collection_BurnEvent {
    $4_collection_BurnEvent(s->$index, x)
}
function $IsValid'$4_collection_BurnEvent'(s: $4_collection_BurnEvent): bool {
    $IsValid'u64'(s->$index)
      && $IsValid'address'(s->$token)
}
function {:inline} $IsEqual'$4_collection_BurnEvent'(s1: $4_collection_BurnEvent, s2: $4_collection_BurnEvent): bool {
    s1 == s2
}

// struct collection::Collection at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:64:5+576
datatype $4_collection_Collection {
    $4_collection_Collection($creator: int, $description: $1_string_String, $name: $1_string_String, $uri: $1_string_String, $mutation_events: $1_event_EventHandle'$4_collection_MutationEvent')
}
function {:inline} $Update'$4_collection_Collection'_creator(s: $4_collection_Collection, x: int): $4_collection_Collection {
    $4_collection_Collection(x, s->$description, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_collection_Collection'_description(s: $4_collection_Collection, x: $1_string_String): $4_collection_Collection {
    $4_collection_Collection(s->$creator, x, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_collection_Collection'_name(s: $4_collection_Collection, x: $1_string_String): $4_collection_Collection {
    $4_collection_Collection(s->$creator, s->$description, x, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_collection_Collection'_uri(s: $4_collection_Collection, x: $1_string_String): $4_collection_Collection {
    $4_collection_Collection(s->$creator, s->$description, s->$name, x, s->$mutation_events)
}
function {:inline} $Update'$4_collection_Collection'_mutation_events(s: $4_collection_Collection, x: $1_event_EventHandle'$4_collection_MutationEvent'): $4_collection_Collection {
    $4_collection_Collection(s->$creator, s->$description, s->$name, s->$uri, x)
}
function $IsValid'$4_collection_Collection'(s: $4_collection_Collection): bool {
    $IsValid'address'(s->$creator)
      && $IsValid'$1_string_String'(s->$description)
      && $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$uri)
      && $IsValid'$1_event_EventHandle'$4_collection_MutationEvent''(s->$mutation_events)
}
function {:inline} $IsEqual'$4_collection_Collection'(s1: $4_collection_Collection, s2: $4_collection_Collection): bool {
    $IsEqual'address'(s1->$creator, s2->$creator)
    && $IsEqual'$1_string_String'(s1->$description, s2->$description)
    && $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$uri, s2->$uri)
    && $IsEqual'$1_event_EventHandle'$4_collection_MutationEvent''(s1->$mutation_events, s2->$mutation_events)}
var $4_collection_Collection_$memory: $Memory $4_collection_Collection;

// struct collection::FixedSupply at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:102:5+344
datatype $4_collection_FixedSupply {
    $4_collection_FixedSupply($current_supply: int, $max_supply: int, $total_minted: int, $burn_events: $1_event_EventHandle'$4_collection_BurnEvent', $mint_events: $1_event_EventHandle'$4_collection_MintEvent')
}
function {:inline} $Update'$4_collection_FixedSupply'_current_supply(s: $4_collection_FixedSupply, x: int): $4_collection_FixedSupply {
    $4_collection_FixedSupply(x, s->$max_supply, s->$total_minted, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_FixedSupply'_max_supply(s: $4_collection_FixedSupply, x: int): $4_collection_FixedSupply {
    $4_collection_FixedSupply(s->$current_supply, x, s->$total_minted, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_FixedSupply'_total_minted(s: $4_collection_FixedSupply, x: int): $4_collection_FixedSupply {
    $4_collection_FixedSupply(s->$current_supply, s->$max_supply, x, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_FixedSupply'_burn_events(s: $4_collection_FixedSupply, x: $1_event_EventHandle'$4_collection_BurnEvent'): $4_collection_FixedSupply {
    $4_collection_FixedSupply(s->$current_supply, s->$max_supply, s->$total_minted, x, s->$mint_events)
}
function {:inline} $Update'$4_collection_FixedSupply'_mint_events(s: $4_collection_FixedSupply, x: $1_event_EventHandle'$4_collection_MintEvent'): $4_collection_FixedSupply {
    $4_collection_FixedSupply(s->$current_supply, s->$max_supply, s->$total_minted, s->$burn_events, x)
}
function $IsValid'$4_collection_FixedSupply'(s: $4_collection_FixedSupply): bool {
    $IsValid'u64'(s->$current_supply)
      && $IsValid'u64'(s->$max_supply)
      && $IsValid'u64'(s->$total_minted)
      && $IsValid'$1_event_EventHandle'$4_collection_BurnEvent''(s->$burn_events)
      && $IsValid'$1_event_EventHandle'$4_collection_MintEvent''(s->$mint_events)
}
function {:inline} $IsEqual'$4_collection_FixedSupply'(s1: $4_collection_FixedSupply, s2: $4_collection_FixedSupply): bool {
    s1 == s2
}
var $4_collection_FixedSupply_$memory: $Memory $4_collection_FixedSupply;

// struct collection::Mint at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:152:5+128
datatype $4_collection_Mint {
    $4_collection_Mint($collection: int, $index: $1_aggregator_v2_AggregatorSnapshot'u64', $token: int)
}
function {:inline} $Update'$4_collection_Mint'_collection(s: $4_collection_Mint, x: int): $4_collection_Mint {
    $4_collection_Mint(x, s->$index, s->$token)
}
function {:inline} $Update'$4_collection_Mint'_index(s: $4_collection_Mint, x: $1_aggregator_v2_AggregatorSnapshot'u64'): $4_collection_Mint {
    $4_collection_Mint(s->$collection, x, s->$token)
}
function {:inline} $Update'$4_collection_Mint'_token(s: $4_collection_Mint, x: int): $4_collection_Mint {
    $4_collection_Mint(s->$collection, s->$index, x)
}
function $IsValid'$4_collection_Mint'(s: $4_collection_Mint): bool {
    $IsValid'address'(s->$collection)
      && $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''(s->$index)
      && $IsValid'address'(s->$token)
}
function {:inline} $IsEqual'$4_collection_Mint'(s1: $4_collection_Mint, s2: $4_collection_Mint): bool {
    s1 == s2
}

// struct collection::MintEvent at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:138:5+84
datatype $4_collection_MintEvent {
    $4_collection_MintEvent($index: int, $token: int)
}
function {:inline} $Update'$4_collection_MintEvent'_index(s: $4_collection_MintEvent, x: int): $4_collection_MintEvent {
    $4_collection_MintEvent(x, s->$token)
}
function {:inline} $Update'$4_collection_MintEvent'_token(s: $4_collection_MintEvent, x: int): $4_collection_MintEvent {
    $4_collection_MintEvent(s->$index, x)
}
function $IsValid'$4_collection_MintEvent'(s: $4_collection_MintEvent): bool {
    $IsValid'u64'(s->$index)
      && $IsValid'address'(s->$token)
}
function {:inline} $IsEqual'$4_collection_MintEvent'(s1: $4_collection_MintEvent, s2: $4_collection_MintEvent): bool {
    s1 == s2
}

// struct collection::MutationEvent at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:85:5+80
datatype $4_collection_MutationEvent {
    $4_collection_MutationEvent($mutated_field_name: $1_string_String)
}
function {:inline} $Update'$4_collection_MutationEvent'_mutated_field_name(s: $4_collection_MutationEvent, x: $1_string_String): $4_collection_MutationEvent {
    $4_collection_MutationEvent(x)
}
function $IsValid'$4_collection_MutationEvent'(s: $4_collection_MutationEvent): bool {
    $IsValid'$1_string_String'(s->$mutated_field_name)
}
function {:inline} $IsEqual'$4_collection_MutationEvent'(s1: $4_collection_MutationEvent, s2: $4_collection_MutationEvent): bool {
    $IsEqual'$1_string_String'(s1->$mutated_field_name, s2->$mutated_field_name)}

// struct collection::UnlimitedSupply at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:115:5+283
datatype $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply($current_supply: int, $total_minted: int, $burn_events: $1_event_EventHandle'$4_collection_BurnEvent', $mint_events: $1_event_EventHandle'$4_collection_MintEvent')
}
function {:inline} $Update'$4_collection_UnlimitedSupply'_current_supply(s: $4_collection_UnlimitedSupply, x: int): $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply(x, s->$total_minted, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_UnlimitedSupply'_total_minted(s: $4_collection_UnlimitedSupply, x: int): $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply(s->$current_supply, x, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_UnlimitedSupply'_burn_events(s: $4_collection_UnlimitedSupply, x: $1_event_EventHandle'$4_collection_BurnEvent'): $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply(s->$current_supply, s->$total_minted, x, s->$mint_events)
}
function {:inline} $Update'$4_collection_UnlimitedSupply'_mint_events(s: $4_collection_UnlimitedSupply, x: $1_event_EventHandle'$4_collection_MintEvent'): $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply(s->$current_supply, s->$total_minted, s->$burn_events, x)
}
function $IsValid'$4_collection_UnlimitedSupply'(s: $4_collection_UnlimitedSupply): bool {
    $IsValid'u64'(s->$current_supply)
      && $IsValid'u64'(s->$total_minted)
      && $IsValid'$1_event_EventHandle'$4_collection_BurnEvent''(s->$burn_events)
      && $IsValid'$1_event_EventHandle'$4_collection_MintEvent''(s->$mint_events)
}
function {:inline} $IsEqual'$4_collection_UnlimitedSupply'(s1: $4_collection_UnlimitedSupply, s2: $4_collection_UnlimitedSupply): bool {
    s1 == s2
}
var $4_collection_UnlimitedSupply_$memory: $Memory $4_collection_UnlimitedSupply;

// fun collection::creator<0x4::collection::Collection> [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:627:5+122
procedure {:inline 1} $4_collection_creator'$4_collection_Collection'(_$t0: $1_object_Object'$4_collection_Collection') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: $4_collection_Collection;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t0: $1_object_Object'$4_collection_Collection';
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[collection]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:627:5+1
    assume {:print "$at(231,24207,24208)"} true;
    assume {:print "$track_local(102,1,0):", $t0} $t0 == $t0;

    // $t2 := object::object_address<#0>($t0) on_abort goto L3 with $t3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:596:34+34
    assume {:print "$at(231,22975,23009)"} true;
    call $t2 := $1_object_object_address'$4_collection_Collection'($t0);
    if ($abort_flag) {
        assume {:print "$at(231,22975,23009)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(102,1):", $t3} $t3 == $t3;
        goto L3;
    }

    // trace_local[collection_address]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:596:34+34
    assume {:print "$track_local(102,1,1):", $t2} $t2 == $t2;

    // $t4 := exists<0x4::collection::Collection>($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:590:13+24
    assume {:print "$at(231,22771,22795)"} true;
    $t4 := $ResourceExists($4_collection_Collection_$memory, $t2);

    // if ($t4) goto L1 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:589:9+6
    assume {:print "$at(231,22750,22756)"} true;
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:598:9+31
    assume {:print "$at(231,23072,23103)"} true;
L1:

    // $t5 := get_global<0x4::collection::Collection>($t2) on_abort goto L3 with $t3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:598:9+31
    assume {:print "$at(231,23072,23103)"} true;
    if (!$ResourceExists($4_collection_Collection_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($4_collection_Collection_$memory, $t2);
    }
    if ($abort_flag) {
        assume {:print "$at(231,23072,23103)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(102,1):", $t3} $t3 == $t3;
        goto L3;
    }

    // $t6 := get_field<0x4::collection::Collection>.creator($t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:628:9+27
    assume {:print "$at(231,24296,24323)"} true;
    $t6 := $t5->$creator;

    // trace_return[0]($t6) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:628:9+27
    assume {:print "$track_return(102,1,0):", $t6} $t6 == $t6;

    // goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:628:9+27
    goto L2;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:591:30+26
    assume {:print "$at(231,22826,22852)"} true;
L0:

    // $t7 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:591:30+26
    assume {:print "$at(231,22826,22852)"} true;
    $t7 := 1;
    assume $IsValid'u64'($t7);

    // $t8 := error::not_found($t7) on_abort goto L3 with $t3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:591:13+44
    call $t8 := $1_error_not_found($t7);
    if ($abort_flag) {
        assume {:print "$at(231,22809,22853)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(102,1):", $t3} $t3 == $t3;
        goto L3;
    }

    // trace_abort($t8) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:589:9+6
    assume {:print "$at(231,22750,22756)"} true;
    assume {:print "$track_abort(102,1):", $t8} $t8 == $t8;

    // $t3 := move($t8) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:589:9+6
    $t3 := $t8;

    // goto L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:589:9+6
    goto L3;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:629:5+1
    assume {:print "$at(231,24328,24329)"} true;
L2:

    // return $t6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:629:5+1
    assume {:print "$at(231,24328,24329)"} true;
    $ret0 := $t6;
    return;

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:629:5+1
L3:

    // abort($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:629:5+1
    assume {:print "$at(231,24328,24329)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun collection::create_collection_address [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:362:5+164
procedure {:inline 1} $4_collection_create_collection_address(_$t0: int, _$t1: $1_string_String) returns ($ret0: int)
{
    // declare local variables
    var $t2: Vec (int);
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t0: int;
    var $t1: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[creator]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:362:5+1
    assume {:print "$at(231,13299,13300)"} true;
    assume {:print "$track_local(102,5,0):", $t0} $t0 == $t0;

    // trace_local[name]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:362:5+1
    assume {:print "$track_local(102,5,1):", $t1} $t1 == $t1;

    // $t2 := collection::create_collection_seed($t1) on_abort goto L2 with $t3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:363:48+28
    assume {:print "$at(231,13428,13456)"} true;
    call $t2 := $4_collection_create_collection_seed($t1);
    if ($abort_flag) {
        assume {:print "$at(231,13428,13456)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(102,5):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t4 := opaque begin: object::create_object_address($t0, $t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:363:9+68

    // $t5 := havoc[val]() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:363:9+68
    havoc $t5;

    // if ($t5) goto L4 else goto L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:363:9+68
    if ($t5) { goto L4; } else { goto L3; }

    // label L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:363:9+68
L4:

    // trace_abort($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:363:9+68
    assume {:print "$at(231,13389,13457)"} true;
    assume {:print "$track_abort(102,5):", $t3} $t3 == $t3;

    // goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:363:9+68
    goto L2;

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:363:9+68
L3:

    // assume WellFormed($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:363:9+68
    assume {:print "$at(231,13389,13457)"} true;
    assume $IsValid'address'($t4);

    // assume Eq<address>($t4, object::spec_create_object_address($t0, $t2)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:363:9+68
    assume $IsEqual'address'($t4, $1_object_spec_create_object_address($t0, $t2));

    // $t4 := opaque end: object::create_object_address($t0, $t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:363:9+68

    // trace_return[0]($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:363:9+68
    assume {:print "$track_return(102,5,0):", $t4} $t4 == $t4;

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:364:5+1
    assume {:print "$at(231,13462,13463)"} true;
L1:

    // return $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:364:5+1
    assume {:print "$at(231,13462,13463)"} true;
    $ret0 := $t4;
    return;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:364:5+1
L2:

    // abort($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:364:5+1
    assume {:print "$at(231,13462,13463)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun collection::create_collection_seed [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:367:5+200
procedure {:inline 1} $4_collection_create_collection_seed(_$t0: $1_string_String) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: Vec (int);
    var $t6: int;
    var $t7: int;
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[name]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:367:5+1
    assume {:print "$at(231,13551,13552)"} true;
    assume {:print "$track_local(102,8,0):", $t0} $t0 == $t0;

    // $t1 := string::length($t0) on_abort goto L3 with $t2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:368:17+13
    assume {:print "$at(231,13630,13643)"} true;
    call $t1 := $1_string_length($t0);
    if ($abort_flag) {
        assume {:print "$at(231,13630,13643)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(102,8):", $t2} $t2 == $t2;
        goto L3;
    }

    // $t3 := 128 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:368:34+26
    $t3 := 128;
    assume $IsValid'u64'($t3);

    // $t4 := <=($t1, $t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:368:17+43
    call $t4 := $Le($t1, $t3);

    // if ($t4) goto L1 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:368:9+6
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:369:10+12
    assume {:print "$at(231,13733,13745)"} true;
L1:

    // $t5 := string::bytes($t0) on_abort goto L3 with $t2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:369:10+12
    assume {:print "$at(231,13733,13745)"} true;
    call $t5 := $1_string_bytes($t0);
    if ($abort_flag) {
        assume {:print "$at(231,13733,13745)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(102,8):", $t2} $t2 == $t2;
        goto L3;
    }

    // trace_return[0]($t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:367:66+139
    assume {:print "$at(231,13612,13751)"} true;
    assume {:print "$track_return(102,8,0):", $t5} $t5 == $t5;

    // goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:367:66+139
    goto L2;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:368:9+6
    assume {:print "$at(231,13622,13628)"} true;
L0:

    // $t6 := 3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:368:82+25
    assume {:print "$at(231,13695,13720)"} true;
    $t6 := 3;
    assume $IsValid'u64'($t6);

    // $t7 := error::out_of_range($t6) on_abort goto L3 with $t2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:368:62+46
    call $t7 := $1_error_out_of_range($t6);
    if ($abort_flag) {
        assume {:print "$at(231,13675,13721)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(102,8):", $t2} $t2 == $t2;
        goto L3;
    }

    // trace_abort($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:368:9+6
    assume {:print "$at(231,13622,13628)"} true;
    assume {:print "$track_abort(102,8):", $t7} $t7 == $t7;

    // $t2 := move($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:368:9+6
    $t2 := $t7;

    // goto L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:368:9+6
    goto L3;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:370:5+1
    assume {:print "$at(231,13750,13751)"} true;
L2:

    // return $t5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:370:5+1
    assume {:print "$at(231,13750,13751)"} true;
    $ret0 := $t5;
    return;

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:370:5+1
L3:

    // abort($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:370:5+1
    assume {:print "$at(231,13750,13751)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun collection::create_unlimited_collection [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:243:5+757
procedure {:inline 1} $4_collection_create_unlimited_collection(_$t0: $signer, _$t1: $1_string_String, _$t2: $1_string_String, _$t3: $1_option_Option'$4_royalty_Royalty', _$t4: $1_string_String) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t5: Vec (int);
    var $t6: $4_collection_ConcurrentSupply;
    var $t7: $1_object_ConstructorRef;
    var $t8: $1_object_ConstructorRef;
    var $t9: $1_string_String;
    var $t10: $1_string_String;
    var $t11: $1_option_Option'$4_royalty_Royalty';
    var $t12: $1_string_String;
    var $t13: $1_option_Option'$4_collection_ConcurrentSupply';
    var $t14: $signer;
    var $t15: $4_collection_Collection;
    var $t16: $1_object_TransferRef;
    var $t17: Vec (int);
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: $1_object_ConstructorRef;
    var $t22: $1_aggregator_v2_Aggregator'u64';
    var $t23: $1_aggregator_v2_Aggregator'u64';
    var $t24: $4_collection_ConcurrentSupply;
    var $t25: $1_option_Option'$4_collection_ConcurrentSupply';
    var $t26: int;
    var $t27: int;
    var $t28: bool;
    var $t29: int;
    var $t30: int;
    var $t31: bool;
    var $t32: int;
    var $t33: int;
    var $t34: bool;
    var $t35: $signer;
    var $t36: int;
    var $t37: $1_object_ObjectCore;
    var $t38: $1_guid_GUID;
    var $t39: $1_event_EventHandle'$4_collection_MutationEvent';
    var $t40: $4_collection_Collection;
    var $t41: bool;
    var $t42: $4_collection_ConcurrentSupply;
    var $t43: bool;
    var $t44: $1_option_Option'$4_royalty_Royalty';
    var $t45: bool;
    var $t46: $Mutation ($1_option_Option'$4_royalty_Royalty');
    var $t47: $4_royalty_Royalty;
    var $t48: $1_option_Option'$4_royalty_Royalty';
    var $t49: bool;
    var $t50: $1_object_TransferRef;
    var $t51: bool;
    var $t52: int;
    var $t53: int;
    var $t54: int;
    var $t55: int;
    var $t56: int;
    var $t57: int;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: $1_option_Option'$4_royalty_Royalty';
    var $t4: $1_string_String;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'$1_option_Option'$4_collection_ConcurrentSupply'': $1_option_Option'$4_collection_ConcurrentSupply';
    var $temp_0'$1_option_Option'$4_royalty_Royalty'': $1_option_Option'$4_royalty_Royalty';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$4_collection_Collection': $4_collection_Collection;
    var $temp_0'$4_collection_ConcurrentSupply': $4_collection_ConcurrentSupply;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;

    // bytecode translation starts here
    // trace_local[creator]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:243:5+1
    assume {:print "$at(231,9188,9189)"} true;
    assume {:print "$track_local(102,11,0):", $t0} $t0 == $t0;

    // trace_local[description]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:243:5+1
    assume {:print "$track_local(102,11,1):", $t1} $t1 == $t1;

    // trace_local[name]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:243:5+1
    assume {:print "$track_local(102,11,2):", $t2} $t2 == $t2;

    // trace_local[royalty]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:243:5+1
    assume {:print "$track_local(102,11,3):", $t3} $t3 == $t3;

    // trace_local[uri]($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:243:5+1
    assume {:print "$track_local(102,11,4):", $t4} $t4 == $t4;

    // $t17 := collection::create_collection_seed($t2) on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:250:31+29
    assume {:print "$at(231,9414,9443)"} true;
    call $t17 := $4_collection_create_collection_seed($t2);
    if ($abort_flag) {
        assume {:print "$at(231,9414,9443)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // trace_local[collection_seed]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:250:31+29
    assume {:print "$track_local(102,11,5):", $t17} $t17 == $t17;

    // assume Identical($t19, signer::$address_of($t0)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:162:9+50
    assume {:print "$at(186,6936,6986)"} true;
    assume ($t19 == $1_signer_$address_of($t0));

    // assume Identical($t20, object::spec_create_object_address($t19, $t17)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:163:9+65
    assume {:print "$at(186,6995,7060)"} true;
    assume ($t20 == $1_object_spec_create_object_address($t19, $t17));

    // $t21 := object::create_named_object($t0, $t17) on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:251:31+53
    assume {:print "$at(231,9475,9528)"} true;
    call $t21 := $1_object_create_named_object($t0, $t17);
    if ($abort_flag) {
        assume {:print "$at(231,9475,9528)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // $t22 := aggregator_v2::create_unbounded_aggregator<u64>() on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:254:29+44
    assume {:print "$at(231,9599,9643)"} true;
    call $t22 := $1_aggregator_v2_create_unbounded_aggregator'u64'();
    if ($abort_flag) {
        assume {:print "$at(231,9599,9643)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // $t23 := aggregator_v2::create_unbounded_aggregator<u64>() on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:255:27+44
    assume {:print "$at(231,9671,9715)"} true;
    call $t23 := $1_aggregator_v2_create_unbounded_aggregator'u64'();
    if ($abort_flag) {
        assume {:print "$at(231,9671,9715)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // $t24 := pack 0x4::collection::ConcurrentSupply($t22, $t23) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:253:22+174
    assume {:print "$at(231,9552,9726)"} true;
    $t24 := $4_collection_ConcurrentSupply($t22, $t23);

    // trace_local[supply]($t24) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:316:16+26
    assume {:print "$at(231,11632,11658)"} true;
    assume {:print "$track_local(102,11,6):", $t24} $t24 == $t24;

    // trace_local[constructor_ref]($t21) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:316:16+26
    assume {:print "$track_local(102,11,8):", $t21} $t21 == $t21;

    // trace_local[description]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:316:16+26
    assume {:print "$track_local(102,11,9):", $t1} $t1 == $t1;

    // trace_local[name]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:316:16+26
    assume {:print "$track_local(102,11,10):", $t2} $t2 == $t2;

    // $t11 := $t3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:316:16+26
    $t11 := $t3;

    // trace_local[royalty]($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:316:16+26
    assume {:print "$track_local(102,11,11):", $t11} $t11 == $t11;

    // trace_local[uri]($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:316:16+26
    assume {:print "$track_local(102,11,12):", $t4} $t4 == $t4;

    // $t25 := opaque begin: option::some<0x4::collection::ConcurrentSupply>($t24) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:265:13+20
    assume {:print "$at(231,9908,9928)"} true;

    // assume And(WellFormed($t25), Le(Len<0x4::collection::ConcurrentSupply>(select option::Option.vec($t25)), 1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:265:13+20
    assume ($IsValid'$1_option_Option'$4_collection_ConcurrentSupply''($t25) && (LenVec($t25->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x4::collection::ConcurrentSupply>>($t25, option::spec_some<0x4::collection::ConcurrentSupply>($t24)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:265:13+20
    assume $IsEqual'$1_option_Option'$4_collection_ConcurrentSupply''($t25, $1_option_spec_some'$4_collection_ConcurrentSupply'($t24));

    // $t25 := opaque end: option::some<0x4::collection::ConcurrentSupply>($t24) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:265:13+20

    // trace_local[supply]($t25) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:316:16+26
    assume {:print "$at(231,11632,11658)"} true;
    assume {:print "$track_local(102,11,13):", $t25} $t25 == $t25;

    // $t26 := string::length($t2) on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:325:17+13
    assume {:print "$at(231,11918,11931)"} true;
    call $t26 := $1_string_length($t2);
    if ($abort_flag) {
        assume {:print "$at(231,11918,11931)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // $t27 := 128 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:325:34+26
    $t27 := 128;
    assume $IsValid'u64'($t27);

    // $t28 := <=($t26, $t27) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:325:17+43
    call $t28 := $Le($t26, $t27);

    // if ($t28) goto L1 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:325:9+6
    if ($t28) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:326:17+12
    assume {:print "$at(231,12028,12040)"} true;
L1:

    // $t29 := string::length($t4) on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:326:17+12
    assume {:print "$at(231,12028,12040)"} true;
    call $t29 := $1_string_length($t4);
    if ($abort_flag) {
        assume {:print "$at(231,12028,12040)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // $t30 := 512 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:326:33+14
    $t30 := 512;
    assume $IsValid'u64'($t30);

    // $t31 := <=($t29, $t30) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:326:17+30
    call $t31 := $Le($t29, $t30);

    // if ($t31) goto L3 else goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:326:9+6
    if ($t31) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:327:17+20
    assume {:print "$at(231,12113,12133)"} true;
L3:

    // $t32 := string::length($t1) on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:327:17+20
    assume {:print "$at(231,12113,12133)"} true;
    call $t32 := $1_string_length($t1);
    if ($abort_flag) {
        assume {:print "$at(231,12113,12133)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // $t33 := 2048 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:327:41+22
    $t33 := 2048;
    assume $IsValid'u64'($t33);

    // $t34 := <=($t32, $t33) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:327:17+46
    call $t34 := $Le($t32, $t33);

    // if ($t34) goto L5 else goto L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:327:9+6
    if ($t34) { goto L5; } else { goto L4; }

    // label L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:329:53+16
    assume {:print "$at(231,12259,12275)"} true;
L5:

    // $t35 := object::generate_signer($t21) on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:329:29+41
    assume {:print "$at(231,12235,12276)"} true;
    call $t35 := $1_object_generate_signer($t21);
    if ($abort_flag) {
        assume {:print "$at(231,12235,12276)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // trace_local[object_signer]($t35) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:329:29+41
    assume {:print "$track_local(102,11,14):", $t35} $t35 == $t35;

    // $t36 := signer::address_of($t0) on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:332:22+27
    assume {:print "$at(231,12338,12365)"} true;
    call $t36 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(231,12338,12365)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // assume Identical($t37, global<0x1::object::ObjectCore>(signer::$address_of($t35))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:371:9+65
    assume {:print "$at(186,15272,15337)"} true;
    assume ($t37 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t35)));

    // assume Identical($t38, pack guid::GUID(pack guid::ID(select object::ObjectCore.guid_creation_num<0x1::object::ObjectCore>($t37), signer::$address_of($t35)))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:374:9+185
    assume {:print "$at(186,15410,15595)"} true;
    assume ($t38 == $1_guid_GUID($1_guid_ID($t37->$guid_creation_num, $1_signer_$address_of($t35))));

    // $t39 := object::new_event_handle<0x4::collection::MutationEvent>($t35) on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:336:30+40
    assume {:print "$at(231,12456,12496)"} true;
    call $t39 := $1_object_new_event_handle'$4_collection_MutationEvent'($t35);
    if ($abort_flag) {
        assume {:print "$at(231,12456,12496)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // $t40 := pack 0x4::collection::Collection($t36, $t1, $t2, $t4, $t39) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:331:26+203
    assume {:print "$at(231,12304,12507)"} true;
    $t40 := $4_collection_Collection($t36, $t1, $t2, $t4, $t39);

    // trace_local[collection]($t40) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:331:26+203
    assume {:print "$track_local(102,11,15):", $t40} $t40 == $t40;

    // move_to<0x4::collection::Collection>($t40, $t35) on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:338:9+35
    assume {:print "$at(231,12517,12552)"} true;
    if ($ResourceExists($4_collection_Collection_$memory, $t35->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_collection_Collection_$memory := $ResourceUpdate($4_collection_Collection_$memory, $t35->$addr, $t40);
    }
    if ($abort_flag) {
        assume {:print "$at(231,12517,12552)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // $t41 := opaque begin: option::is_some<0x4::collection::ConcurrentSupply>($t25) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:340:13+16
    assume {:print "$at(231,12567,12583)"} true;

    // assume WellFormed($t41) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:340:13+16
    assume $IsValid'bool'($t41);

    // assume Eq<bool>($t41, option::spec_is_some<0x4::collection::ConcurrentSupply>($t25)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:340:13+16
    assume $IsEqual'bool'($t41, $1_option_spec_is_some'$4_collection_ConcurrentSupply'($t25));

    // $t41 := opaque end: option::is_some<0x4::collection::ConcurrentSupply>($t25) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:340:13+16

    // if ($t41) goto L7 else goto L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:340:9+143
    if ($t41) { goto L7; } else { goto L6; }

    // label L7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:341:21+14
    assume {:print "$at(231,12607,12621)"} true;
L7:

    // $t42 := opaque begin: option::destroy_some<0x4::collection::ConcurrentSupply>($t25) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:341:37+21
    assume {:print "$at(231,12623,12644)"} true;

    // assume Identical($t43, option::spec_is_none<0x4::collection::ConcurrentSupply>($t25)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:341:37+21
    assume ($t43 == $1_option_spec_is_none'$4_collection_ConcurrentSupply'($t25));

    // if ($t43) goto L15 else goto L14 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:341:37+21
    if ($t43) { goto L15; } else { goto L14; }

    // label L15 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:341:37+21
L15:

    // assume And(option::spec_is_none<0x4::collection::ConcurrentSupply>($t25), Eq(262145, $t18)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:341:37+21
    assume {:print "$at(231,12623,12644)"} true;
    assume ($1_option_spec_is_none'$4_collection_ConcurrentSupply'($t25) && $IsEqual'num'(262145, $t18));

    // trace_abort($t18) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:341:37+21
    assume {:print "$at(231,12623,12644)"} true;
    assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;

    // goto L13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:341:37+21
    goto L13;

    // label L14 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:341:37+21
L14:

    // assume WellFormed($t42) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:341:37+21
    assume {:print "$at(231,12623,12644)"} true;
    assume $IsValid'$4_collection_ConcurrentSupply'($t42);

    // assume Eq<0x4::collection::ConcurrentSupply>($t42, option::spec_borrow<0x4::collection::ConcurrentSupply>($t25)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:341:37+21
    assume $IsEqual'$4_collection_ConcurrentSupply'($t42, $1_option_spec_borrow'$4_collection_ConcurrentSupply'($t25));

    // $t42 := opaque end: option::destroy_some<0x4::collection::ConcurrentSupply>($t25) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:341:37+21

    // move_to<0x4::collection::ConcurrentSupply>($t42, $t35) on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:341:13+46
    if ($ResourceExists($4_collection_ConcurrentSupply_$memory, $t35->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_collection_ConcurrentSupply_$memory := $ResourceUpdate($4_collection_ConcurrentSupply_$memory, $t35->$addr, $t42);
    }
    if ($abort_flag) {
        assume {:print "$at(231,12599,12645)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // label L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:346:13+17
    assume {:print "$at(231,12721,12738)"} true;
L11:

    // $t44 := copy($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:346:13+17
    assume {:print "$at(231,12721,12738)"} true;
    $t44 := $t11;

    // $t45 := opaque begin: option::is_some<0x4::royalty::Royalty>($t44) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:346:13+17

    // assume WellFormed($t45) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:346:13+17
    assume $IsValid'bool'($t45);

    // assume Eq<bool>($t45, option::spec_is_some<0x4::royalty::Royalty>($t44)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:346:13+17
    assume $IsEqual'bool'($t45, $1_option_spec_is_some'$4_royalty_Royalty'($t44));

    // $t45 := opaque end: option::is_some<0x4::royalty::Royalty>($t44) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:346:13+17

    // if ($t45) goto L8 else goto L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:346:9+97
    if ($t45) { goto L8; } else { goto L10; }

    // label L8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:27+16
    assume {:print "$at(231,12768,12784)"} true;
L8:

    // $t46 := borrow_local($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17
    assume {:print "$at(231,12786,12803)"} true;
    $t46 := $Mutation($Local(11), EmptyVec(), $t11);

    // $t47 := opaque begin: option::extract<0x4::royalty::Royalty>($t46) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17

    // $t48 := read_ref($t46) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17
    $t48 := $Dereference($t46);

    // assume Identical($t49, option::spec_is_none<0x4::royalty::Royalty>($t46)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17
    assume ($t49 == $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t46)));

    // if ($t49) goto L17 else goto L20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17
    if ($t49) { goto L17; } else { goto L20; }

    // label L17 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17
L17:

    // assume And(option::spec_is_none<0x4::royalty::Royalty>($t46), Eq(262145, $t18)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17
    assume {:print "$at(231,12786,12803)"} true;
    assume ($1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t46)) && $IsEqual'num'(262145, $t18));

    // trace_abort($t18) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17
    assume {:print "$at(231,12786,12803)"} true;
    assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;

    // goto L13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17
    goto L13;

    // label L16 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17
L16:

    // $t46 := havoc[mut]() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17
    assume {:print "$at(231,12786,12803)"} true;
    havoc $temp_0'$1_option_Option'$4_royalty_Royalty'';
    $t46 := $UpdateMutation($t46, $temp_0'$1_option_Option'$4_royalty_Royalty'');

    // assume And(WellFormed($t46), Le(Len<0x4::royalty::Royalty>(select option::Option.vec($t46)), 1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($Dereference($t46)) && (LenVec($Dereference($t46)->$vec) <= 1));

    // assume WellFormed($t47) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17
    assume $IsValid'$4_royalty_Royalty'($t47);

    // assume Eq<0x4::royalty::Royalty>($t47, option::spec_borrow<0x4::royalty::Royalty>($t48)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17
    assume $IsEqual'$4_royalty_Royalty'($t47, $1_option_spec_borrow'$4_royalty_Royalty'($t48));

    // assume option::spec_is_none<0x4::royalty::Royalty>($t46) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17
    assume $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t46));

    // $t47 := opaque end: option::extract<0x4::royalty::Royalty>($t46) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17

    // pack_ref_deep($t46) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17

    // write_back[LocalRoot($t11)@]($t46) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17
    $t11 := $Dereference($t46);

    // trace_local[royalty]($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:45+17
    assume {:print "$track_local(102,11,11):", $t11} $t11 == $t11;

    // royalty::init($t21, $t47) on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:347:13+50
    call $4_royalty_init($t21, $t47);
    if ($abort_flag) {
        assume {:print "$at(231,12754,12804)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // label L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:350:58+16
    assume {:print "$at(231,12874,12890)"} true;
L10:

    // $t50 := object::generate_transfer_ref($t21) on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:350:28+47
    assume {:print "$at(231,12844,12891)"} true;
    call $t50 := $1_object_generate_transfer_ref($t21);
    if ($abort_flag) {
        assume {:print "$at(231,12844,12891)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // trace_local[transfer_ref]($t50) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:350:28+47
    assume {:print "$track_local(102,11,16):", $t50} $t50 == $t50;

    // object::disable_ungated_transfer($t50) on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:351:9+47
    assume {:print "$at(231,12901,12948)"} true;
    call $1_object_disable_ungated_transfer($t50);
    if ($abort_flag) {
        assume {:print "$at(231,12901,12948)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // trace_return[0]($t21) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:324:23+1080
    assume {:print "$at(231,11900,12980)"} true;
    assume {:print "$track_return(102,11,0):", $t21} $t21 == $t21;

    // goto L12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:324:23+1080
    goto L12;

    // label L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:343:13+21
    assume {:print "$at(231,12675,12696)"} true;
L6:

    // opaque begin: option::destroy_none<0x4::collection::ConcurrentSupply>($t25) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:343:13+21
    assume {:print "$at(231,12675,12696)"} true;

    // assume Identical($t51, option::spec_is_some<0x4::collection::ConcurrentSupply>($t25)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:343:13+21
    assume ($t51 == $1_option_spec_is_some'$4_collection_ConcurrentSupply'($t25));

    // if ($t51) goto L19 else goto L18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:343:13+21
    if ($t51) { goto L19; } else { goto L18; }

    // label L19 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:343:13+21
L19:

    // assume And(option::spec_is_some<0x4::collection::ConcurrentSupply>($t25), Eq(262144, $t18)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:343:13+21
    assume {:print "$at(231,12675,12696)"} true;
    assume ($1_option_spec_is_some'$4_collection_ConcurrentSupply'($t25) && $IsEqual'num'(262144, $t18));

    // trace_abort($t18) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:343:13+21
    assume {:print "$at(231,12675,12696)"} true;
    assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;

    // goto L13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:343:13+21
    goto L13;

    // label L18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:343:13+21
L18:

    // opaque end: option::destroy_none<0x4::collection::ConcurrentSupply>($t25) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:343:13+21
    assume {:print "$at(231,12675,12696)"} true;

    // goto L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:343:13+21
    goto L11;

    // label L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:327:9+6
    assume {:print "$at(231,12105,12111)"} true;
L4:

    // $t52 := 5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:327:85+21
    assume {:print "$at(231,12181,12202)"} true;
    $t52 := 5;
    assume $IsValid'u64'($t52);

    // $t53 := error::out_of_range($t52) on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:327:65+42
    call $t53 := $1_error_out_of_range($t52);
    if ($abort_flag) {
        assume {:print "$at(231,12161,12203)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // trace_abort($t53) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:327:9+6
    assume {:print "$at(231,12105,12111)"} true;
    assume {:print "$track_abort(102,11):", $t53} $t53 == $t53;

    // $t18 := move($t53) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:327:9+6
    $t18 := $t53;

    // goto L13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:327:9+6
    goto L13;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:326:9+6
    assume {:print "$at(231,12020,12026)"} true;
L2:

    // $t54 := 4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:326:69+13
    assume {:print "$at(231,12080,12093)"} true;
    $t54 := 4;
    assume $IsValid'u64'($t54);

    // $t55 := error::out_of_range($t54) on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:326:49+34
    call $t55 := $1_error_out_of_range($t54);
    if ($abort_flag) {
        assume {:print "$at(231,12060,12094)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // trace_abort($t55) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:326:9+6
    assume {:print "$at(231,12020,12026)"} true;
    assume {:print "$track_abort(102,11):", $t55} $t55 == $t55;

    // $t18 := move($t55) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:326:9+6
    $t18 := $t55;

    // goto L13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:326:9+6
    goto L13;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:325:9+6
    assume {:print "$at(231,11910,11916)"} true;
L0:

    // $t56 := 3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:325:82+25
    assume {:print "$at(231,11983,12008)"} true;
    $t56 := 3;
    assume $IsValid'u64'($t56);

    // $t57 := error::out_of_range($t56) on_abort goto L13 with $t18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:325:62+46
    call $t57 := $1_error_out_of_range($t56);
    if ($abort_flag) {
        assume {:print "$at(231,11963,12009)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(102,11):", $t18} $t18 == $t18;
        goto L13;
    }

    // trace_abort($t57) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:325:9+6
    assume {:print "$at(231,11910,11916)"} true;
    assume {:print "$track_abort(102,11):", $t57} $t57 == $t57;

    // $t18 := move($t57) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:325:9+6
    $t18 := $t57;

    // goto L13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:325:9+6
    goto L13;

    // label L12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:267:5+1
    assume {:print "$at(231,9944,9945)"} true;
L12:

    // return $t21 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:267:5+1
    assume {:print "$at(231,9944,9945)"} true;
    $ret0 := $t21;
    return;

    // label L13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:267:5+1
L13:

    // abort($t18) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:267:5+1
    assume {:print "$at(231,9944,9945)"} true;
    $abort_code := $t18;
    $abort_flag := true;
    return;

    // label L20 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L20:

    // drop($t46) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L16 at <internal>:1:1+10
    goto L16;

}

// fun collection::increment_supply [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:373:5+2897
procedure {:inline 1} $4_collection_increment_supply(_$t0: $1_object_Object'$4_collection_Collection', _$t1: int) returns ($ret0: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'')
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($4_collection_ConcurrentSupply);
    var $t4: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'';
    var $t5: $Mutation ($4_collection_FixedSupply);
    var $t6: $Mutation (int);
    var $t7: $Mutation ($4_collection_UnlimitedSupply);
    var $t8: int;
    var $t9: $4_collection_ConcurrentSupply;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: $Mutation ($4_collection_ConcurrentSupply);
    var $t14: $Mutation ($1_aggregator_v2_Aggregator'u64');
    var $t15: int;
    var $t16: bool;
    var $t17: $Mutation ($1_aggregator_v2_Aggregator'u64');
    var $t18: int;
    var $t19: $1_aggregator_v2_Aggregator'u64';
    var $t20: $1_aggregator_v2_AggregatorSnapshot'u64';
    var $t21: bool;
    var $t22: $4_collection_Mint;
    var $t23: $1_aggregator_v2_Aggregator'u64';
    var $t24: $1_aggregator_v2_AggregatorSnapshot'u64';
    var $t25: bool;
    var $t26: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'';
    var $t27: int;
    var $t28: int;
    var $t29: bool;
    var $t30: $Mutation ($4_collection_FixedSupply);
    var $t31: $Mutation (int);
    var $t32: int;
    var $t33: int;
    var $t34: int;
    var $t35: $Mutation (int);
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: int;
    var $t40: int;
    var $t41: bool;
    var $t42: bool;
    var $t43: int;
    var $t44: $1_aggregator_v2_AggregatorSnapshot'u64';
    var $t45: bool;
    var $t46: $4_collection_Mint;
    var $t47: int;
    var $t48: $1_aggregator_v2_AggregatorSnapshot'u64';
    var $t49: bool;
    var $t50: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'';
    var $t51: $Mutation ($1_event_EventHandle'$4_collection_MintEvent');
    var $t52: int;
    var $t53: $4_collection_MintEvent;
    var $t54: int;
    var $t55: int;
    var $t56: bool;
    var $t57: $Mutation ($4_collection_UnlimitedSupply);
    var $t58: $Mutation (int);
    var $t59: int;
    var $t60: int;
    var $t61: int;
    var $t62: $Mutation (int);
    var $t63: int;
    var $t64: int;
    var $t65: int;
    var $t66: bool;
    var $t67: int;
    var $t68: $1_aggregator_v2_AggregatorSnapshot'u64';
    var $t69: bool;
    var $t70: $4_collection_Mint;
    var $t71: int;
    var $t72: $1_aggregator_v2_AggregatorSnapshot'u64';
    var $t73: bool;
    var $t74: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'';
    var $t75: $Mutation ($1_event_EventHandle'$4_collection_MintEvent');
    var $t76: int;
    var $t77: $4_collection_MintEvent;
    var $t78: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'';
    var $t0: $1_object_Object'$4_collection_Collection';
    var $t1: int;
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''': $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'';
    var $temp_0'$4_collection_ConcurrentSupply': $4_collection_ConcurrentSupply;
    var $temp_0'$4_collection_FixedSupply': $4_collection_FixedSupply;
    var $temp_0'$4_collection_UnlimitedSupply': $4_collection_UnlimitedSupply;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t8, object::$object_address<0x4::collection::Collection>($t0)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:447:9+57
    assume {:print "$at(231,16822,16879)"} true;
    assume ($t8 == $1_object_$object_address'$4_collection_Collection'($t0));

    // assume Identical($t9, global<0x4::collection::ConcurrentSupply>($t8)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:448:9+55
    assume {:print "$at(231,16888,16943)"} true;
    assume ($t9 == $ResourceValue($4_collection_ConcurrentSupply_$memory, $t8));

    // trace_local[collection]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:373:5+1
    assume {:print "$at(231,13850,13851)"} true;
    assume {:print "$track_local(102,15,0):", $t0} $t0 == $t0;

    // trace_local[token]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:373:5+1
    assume {:print "$track_local(102,15,1):", $t1} $t1 == $t1;

    // $t10 := object::object_address<0x4::collection::Collection>($t0) on_abort goto L18 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:377:31+34
    assume {:print "$at(231,14071,14105)"} true;
    call $t10 := $1_object_object_address'$4_collection_Collection'($t0);
    if ($abort_flag) {
        assume {:print "$at(231,14071,14105)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;
        goto L18;
    }

    // trace_local[collection_addr]($t10) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:377:31+34
    assume {:print "$track_local(102,15,2):", $t10} $t10 == $t10;

    // $t12 := exists<0x4::collection::ConcurrentSupply>($t10) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:378:13+41
    assume {:print "$at(231,14119,14160)"} true;
    $t12 := $ResourceExists($4_collection_ConcurrentSupply_$memory, $t10);

    // if ($t12) goto L1 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:378:9+2626
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:379:26+38
    assume {:print "$at(231,14189,14227)"} true;
L1:

    // $t13 := borrow_global<0x4::collection::ConcurrentSupply>($t10) on_abort goto L18 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:379:26+38
    assume {:print "$at(231,14189,14227)"} true;
    if (!$ResourceExists($4_collection_ConcurrentSupply_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $Mutation($Global($t10), EmptyVec(), $ResourceValue($4_collection_ConcurrentSupply_$memory, $t10));
    }
    if ($abort_flag) {
        assume {:print "$at(231,14189,14227)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;
        goto L18;
    }

    // trace_local[supply]($t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:379:26+38
    $temp_0'$4_collection_ConcurrentSupply' := $Dereference($t13);
    assume {:print "$track_local(102,15,3):", $temp_0'$4_collection_ConcurrentSupply'} $temp_0'$4_collection_ConcurrentSupply' == $temp_0'$4_collection_ConcurrentSupply';

    // $t14 := borrow_field<0x4::collection::ConcurrentSupply>.current_supply($t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:381:40+26
    assume {:print "$at(231,14289,14315)"} true;
    $t14 := $ChildMutation($t13, 0, $Dereference($t13)->$current_supply);

    // $t15 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:381:68+1
    $t15 := 1;
    assume $IsValid'u64'($t15);

    // $t16 := aggregator_v2::try_add<u64>($t14, $t15) on_abort goto L18 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:381:17+53
    call $t16,$t14 := $1_aggregator_v2_try_add'u64'($t14, $t15);
    if ($abort_flag) {
        assume {:print "$at(231,14266,14319)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;
        goto L18;
    }

    // write_back[Reference($t13).current_supply (0x1::aggregator_v2::Aggregator<u64>)]($t14) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:381:17+53
    $t13 := $UpdateMutation($t13, $Update'$4_collection_ConcurrentSupply'_current_supply($Dereference($t13), $Dereference($t14)));

    // if ($t16) goto L3 else goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:380:13+6
    assume {:print "$at(231,14241,14247)"} true;
    if ($t16) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:384:32+24
    assume {:print "$at(231,14433,14457)"} true;
L3:

    // $t17 := borrow_field<0x4::collection::ConcurrentSupply>.total_minted($t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:384:32+24
    assume {:print "$at(231,14433,14457)"} true;
    $t17 := $ChildMutation($t13, 1, $Dereference($t13)->$total_minted);

    // $t18 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:384:58+1
    $t18 := 1;
    assume $IsValid'u64'($t18);

    // aggregator_v2::add<u64>($t17, $t18) on_abort goto L18 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:384:13+47
    call $t17 := $1_aggregator_v2_add'u64'($t17, $t18);
    if ($abort_flag) {
        assume {:print "$at(231,14414,14461)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;
        goto L18;
    }

    // write_back[Reference($t13).total_minted (0x1::aggregator_v2::Aggregator<u64>)]($t17) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:384:13+47
    $t13 := $UpdateMutation($t13, $Update'$4_collection_ConcurrentSupply'_total_minted($Dereference($t13), $Dereference($t17)));

    // $t19 := get_field<0x4::collection::ConcurrentSupply>.total_minted($t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:388:52+20
    assume {:print "$at(231,14611,14631)"} true;
    $t19 := $Dereference($t13)->$total_minted;

    // $t20 := opaque begin: aggregator_v2::snapshot<u64>($t19) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:388:28+45

    // assume Identical($t21, And(Neq<vector<u8>>(select string::String.bytes<0x1::string::String>(type_info::$type_name<u64>()), [117, 54, 52]), Neq<vector<u8>>(select string::String.bytes<0x1::string::String>(type_info::$type_name<u64>()), [117, 49, 50, 56]))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:388:28+45
    assume ($t21 == (!$IsEqual'vec'u8''($1_string_String(Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3))->$bytes, MakeVec3(117, 54, 52)) && !$IsEqual'vec'u8''($1_string_String(Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3))->$bytes, MakeVec4(117, 49, 50, 56))));

    // if ($t21) goto L31 else goto L19 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:388:28+45
    if ($t21) { goto L31; } else { goto L19; }

    // label L20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:388:28+45
L20:

    // trace_abort($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:388:28+45
    assume {:print "$at(231,14587,14632)"} true;
    assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;

    // goto L18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:388:28+45
    goto L18;

    // label L19 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:388:28+45
L19:

    // assume WellFormed($t20) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:388:28+45
    assume {:print "$at(231,14587,14632)"} true;
    assume $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''($t20);

    // assume Eq<u64>(select aggregator_v2::AggregatorSnapshot.value<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t20), aggregator_v2::spec_get_value<u64>($t19)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:388:28+45
    assume $IsEqual'u64'($t20->$value, $1_aggregator_v2_spec_get_value'u64'($t19));

    // $t20 := opaque end: aggregator_v2::snapshot<u64>($t19) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:388:28+45

    // $t22 := pack 0x4::collection::Mint($t10, $t20, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:386:17+174
    assume {:print "$at(231,14504,14678)"} true;
    $t22 := $4_collection_Mint($t10, $t20, $t1);

    // opaque begin: event::emit<0x4::collection::Mint>($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:385:13+218
    assume {:print "$at(231,14475,14693)"} true;

    // opaque end: event::emit<0x4::collection::Mint>($t22) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:385:13+218

    // $t23 := get_field<0x4::collection::ConcurrentSupply>.total_minted($t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:50+20
    assume {:print "$at(231,14744,14764)"} true;
    $t23 := $Dereference($t13)->$total_minted;

    // write_back[0x4::collection::ConcurrentSupply@]($t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:50+20
    $4_collection_ConcurrentSupply_$memory := $ResourceUpdate($4_collection_ConcurrentSupply_$memory, $GlobalLocationAddress($t13),
        $Dereference($t13));

    // $t24 := opaque begin: aggregator_v2::snapshot<u64>($t23) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:26+45

    // assume Identical($t25, And(Neq<vector<u8>>(select string::String.bytes<0x1::string::String>(type_info::$type_name<u64>()), [117, 54, 52]), Neq<vector<u8>>(select string::String.bytes<0x1::string::String>(type_info::$type_name<u64>()), [117, 49, 50, 56]))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:26+45
    assume ($t25 == (!$IsEqual'vec'u8''($1_string_String(Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3))->$bytes, MakeVec3(117, 54, 52)) && !$IsEqual'vec'u8''($1_string_String(Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3))->$bytes, MakeVec4(117, 49, 50, 56))));

    // if ($t25) goto L22 else goto L21 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:26+45
    if ($t25) { goto L22; } else { goto L21; }

    // label L22 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:26+45
L22:

    // trace_abort($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:26+45
    assume {:print "$at(231,14720,14765)"} true;
    assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;

    // goto L18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:26+45
    goto L18;

    // label L21 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:26+45
L21:

    // assume WellFormed($t24) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:26+45
    assume {:print "$at(231,14720,14765)"} true;
    assume $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''($t24);

    // assume Eq<u64>(select aggregator_v2::AggregatorSnapshot.value<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t24), aggregator_v2::spec_get_value<u64>($t23)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:26+45
    assume $IsEqual'u64'($t24->$value, $1_aggregator_v2_spec_get_value'u64'($t23));

    // $t24 := opaque end: aggregator_v2::snapshot<u64>($t23) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:26+45

    // $t26 := opaque begin: option::some<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t24) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:13+59

    // assume And(WellFormed($t26), Le(Len<0x1::aggregator_v2::AggregatorSnapshot<u64>>(select option::Option.vec($t26)), 1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:13+59
    assume ($IsValid'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($t26) && (LenVec($t26->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::aggregator_v2::AggregatorSnapshot<u64>>>($t26, option::spec_some<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t24)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:13+59
    assume $IsEqual'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($t26, $1_option_spec_some'$1_aggregator_v2_AggregatorSnapshot'u64''($t24));

    // $t26 := opaque end: option::some<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t24) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:13+59

    // $t4 := $t26 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:13+59
    $t4 := $t26;

    // trace_local[return]($t26) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:392:13+59
    assume {:print "$track_local(102,15,4):", $t26} $t26 == $t26;

    // label L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:378:9+2626
    assume {:print "$at(231,14115,16741)"} true;
L10:

    // trace_return[0]($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:378:9+2626
    assume {:print "$at(231,14115,16741)"} true;
    assume {:print "$track_return(102,15,0):", $t4} $t4 == $t4;

    // goto L17 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:378:9+2626
    goto L17;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:380:13+6
    assume {:print "$at(231,14241,14247)"} true;
L2:

    // write_back[0x4::collection::ConcurrentSupply@]($t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:380:13+6
    assume {:print "$at(231,14241,14247)"} true;
    $4_collection_ConcurrentSupply_$memory := $ResourceUpdate($4_collection_ConcurrentSupply_$memory, $GlobalLocationAddress($t13),
        $Dereference($t13));

    // drop($t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:380:13+6

    // $t27 := 2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:382:37+27
    assume {:print "$at(231,14357,14384)"} true;
    $t27 := 2;
    assume $IsValid'u64'($t27);

    // $t28 := error::out_of_range($t27) on_abort goto L18 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:382:17+48
    call $t28 := $1_error_out_of_range($t27);
    if ($abort_flag) {
        assume {:print "$at(231,14337,14385)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;
        goto L18;
    }

    // trace_abort($t28) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:380:13+6
    assume {:print "$at(231,14241,14247)"} true;
    assume {:print "$track_abort(102,15):", $t28} $t28 == $t28;

    // $t11 := move($t28) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:380:13+6
    $t11 := $t28;

    // goto L18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:380:13+6
    goto L18;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:393:20+36
    assume {:print "$at(231,14786,14822)"} true;
L0:

    // $t29 := exists<0x4::collection::FixedSupply>($t10) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:393:20+36
    assume {:print "$at(231,14786,14822)"} true;
    $t29 := $ResourceExists($4_collection_FixedSupply_$memory, $t10);

    // if ($t29) goto L5 else goto L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:393:16+1959
    if ($t29) { goto L5; } else { goto L4; }

    // label L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:394:26+33
    assume {:print "$at(231,14851,14884)"} true;
L5:

    // $t30 := borrow_global<0x4::collection::FixedSupply>($t10) on_abort goto L18 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:394:26+33
    assume {:print "$at(231,14851,14884)"} true;
    if (!$ResourceExists($4_collection_FixedSupply_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t30 := $Mutation($Global($t10), EmptyVec(), $ResourceValue($4_collection_FixedSupply_$memory, $t10));
    }
    if ($abort_flag) {
        assume {:print "$at(231,14851,14884)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;
        goto L18;
    }

    // trace_local[supply]($t30) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:394:26+33
    $temp_0'$4_collection_FixedSupply' := $Dereference($t30);
    assume {:print "$track_local(102,15,5):", $temp_0'$4_collection_FixedSupply'} $temp_0'$4_collection_FixedSupply' == $temp_0'$4_collection_FixedSupply';

    // $t31 := borrow_field<0x4::collection::FixedSupply>.current_supply($t30) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:395:13+21
    assume {:print "$at(231,14898,14919)"} true;
    $t31 := $ChildMutation($t30, 0, $Dereference($t30)->$current_supply);

    // trace_local[$t1]($t31) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:395:13+21
    $temp_0'u64' := $Dereference($t31);
    assume {:print "$track_local(102,15,6):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t32 := read_ref($t31) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:395:13+26
    $t32 := $Dereference($t31);

    // $t33 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:395:38+1
    $t33 := 1;
    assume $IsValid'u64'($t33);

    // $t34 := +($t32, $t33) on_abort goto L18 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:395:13+26
    call $t34 := $AddU64($t32, $t33);
    if ($abort_flag) {
        assume {:print "$at(231,14898,14924)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;
        goto L18;
    }

    // write_ref($t31, $t34) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:395:13+26
    $t31 := $UpdateMutation($t31, $t34);

    // write_back[Reference($t30).current_supply (u64)]($t31) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:395:13+26
    $t30 := $UpdateMutation($t30, $Update'$4_collection_FixedSupply'_current_supply($Dereference($t30), $Dereference($t31)));

    // $t35 := borrow_field<0x4::collection::FixedSupply>.total_minted($t30) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:396:13+19
    assume {:print "$at(231,14938,14957)"} true;
    $t35 := $ChildMutation($t30, 2, $Dereference($t30)->$total_minted);

    // trace_local[$t1]($t35) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:396:13+19
    $temp_0'u64' := $Dereference($t35);
    assume {:print "$track_local(102,15,6):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t36 := read_ref($t35) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:396:13+24
    $t36 := $Dereference($t35);

    // $t37 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:396:36+1
    $t37 := 1;
    assume $IsValid'u64'($t37);

    // $t38 := +($t36, $t37) on_abort goto L18 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:396:13+24
    call $t38 := $AddU64($t36, $t37);
    if ($abort_flag) {
        assume {:print "$at(231,14938,14962)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;
        goto L18;
    }

    // write_ref($t35, $t38) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:396:13+24
    $t35 := $UpdateMutation($t35, $t38);

    // write_back[Reference($t30).total_minted (u64)]($t35) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:396:13+24
    $t30 := $UpdateMutation($t30, $Update'$4_collection_FixedSupply'_total_minted($Dereference($t30), $Dereference($t35)));

    // $t39 := get_field<0x4::collection::FixedSupply>.current_supply($t30) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:398:17+21
    assume {:print "$at(231,15001,15022)"} true;
    $t39 := $Dereference($t30)->$current_supply;

    // $t40 := get_field<0x4::collection::FixedSupply>.max_supply($t30) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:398:42+17
    $t40 := $Dereference($t30)->$max_supply;

    // $t41 := <=($t39, $t40) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:398:17+42
    call $t41 := $Le($t39, $t40);

    // if ($t41) goto L7 else goto L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:397:13+6
    assume {:print "$at(231,14976,14982)"} true;
    if ($t41) { goto L7; } else { goto L6; }

    // label L7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:401:17+47
    assume {:print "$at(231,15142,15189)"} true;
L7:

    // $t42 := features::module_event_migration_enabled() on_abort goto L18 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:401:17+47
    assume {:print "$at(231,15142,15189)"} true;
    call $t42 := $1_features_module_event_migration_enabled();
    if ($abort_flag) {
        assume {:print "$at(231,15142,15189)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;
        goto L18;
    }

    // if ($t42) goto L9 else goto L8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:401:13+571
    if ($t42) { goto L9; } else { goto L8; }

    // label L9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:404:37+15
    assume {:print "$at(231,15285,15300)"} true;
L9:

    // $t43 := get_field<0x4::collection::FixedSupply>.total_minted($t30) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:405:63+19
    assume {:print "$at(231,15364,15383)"} true;
    $t43 := $Dereference($t30)->$total_minted;

    // $t44 := opaque begin: aggregator_v2::create_snapshot<u64>($t43) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:405:32+51

    // assume Identical($t45, And(Neq<vector<u8>>(select string::String.bytes<0x1::string::String>(type_info::$type_name<u64>()), [117, 54, 52]), Neq<vector<u8>>(select string::String.bytes<0x1::string::String>(type_info::$type_name<u64>()), [117, 49, 50, 56]))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:405:32+51
    assume ($t45 == (!$IsEqual'vec'u8''($1_string_String(Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3))->$bytes, MakeVec3(117, 54, 52)) && !$IsEqual'vec'u8''($1_string_String(Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3))->$bytes, MakeVec4(117, 49, 50, 56))));

    // if ($t45) goto L32 else goto L23 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:405:32+51
    if ($t45) { goto L32; } else { goto L23; }

    // label L24 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:405:32+51
L24:

    // trace_abort($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:405:32+51
    assume {:print "$at(231,15333,15384)"} true;
    assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;

    // goto L18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:405:32+51
    goto L18;

    // label L23 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:405:32+51
L23:

    // assume WellFormed($t44) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:405:32+51
    assume {:print "$at(231,15333,15384)"} true;
    assume $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''($t44);

    // assume Eq<u64>(select aggregator_v2::AggregatorSnapshot.value<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t44), $t43) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:405:32+51
    assume $IsEqual'u64'($t44->$value, $t43);

    // $t44 := opaque end: aggregator_v2::create_snapshot<u64>($t43) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:405:32+51

    // $t46 := pack 0x4::collection::Mint($t10, $t44, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:403:21+196
    assume {:print "$at(231,15242,15438)"} true;
    $t46 := $4_collection_Mint($t10, $t44, $t1);

    // opaque begin: event::emit<0x4::collection::Mint>($t46) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:402:17+248
    assume {:print "$at(231,15209,15457)"} true;

    // opaque end: event::emit<0x4::collection::Mint>($t46) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:402:17+248

    // label L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:62+19
    assume {:print "$at(231,15772,15791)"} true;
L11:

    // $t47 := get_field<0x4::collection::FixedSupply>.total_minted($t30) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:62+19
    assume {:print "$at(231,15772,15791)"} true;
    $t47 := $Dereference($t30)->$total_minted;

    // write_back[0x4::collection::FixedSupply@]($t30) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:62+19
    $4_collection_FixedSupply_$memory := $ResourceUpdate($4_collection_FixedSupply_$memory, $GlobalLocationAddress($t30),
        $Dereference($t30));

    // $t48 := opaque begin: aggregator_v2::create_snapshot<u64>($t47) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:26+56

    // assume Identical($t49, And(Neq<vector<u8>>(select string::String.bytes<0x1::string::String>(type_info::$type_name<u64>()), [117, 54, 52]), Neq<vector<u8>>(select string::String.bytes<0x1::string::String>(type_info::$type_name<u64>()), [117, 49, 50, 56]))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:26+56
    assume ($t49 == (!$IsEqual'vec'u8''($1_string_String(Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3))->$bytes, MakeVec3(117, 54, 52)) && !$IsEqual'vec'u8''($1_string_String(Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3))->$bytes, MakeVec4(117, 49, 50, 56))));

    // if ($t49) goto L26 else goto L25 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:26+56
    if ($t49) { goto L26; } else { goto L25; }

    // label L26 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:26+56
L26:

    // trace_abort($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:26+56
    assume {:print "$at(231,15736,15792)"} true;
    assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;

    // goto L18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:26+56
    goto L18;

    // label L25 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:26+56
L25:

    // assume WellFormed($t48) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:26+56
    assume {:print "$at(231,15736,15792)"} true;
    assume $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''($t48);

    // assume Eq<u64>(select aggregator_v2::AggregatorSnapshot.value<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t48), $t47) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:26+56
    assume $IsEqual'u64'($t48->$value, $t47);

    // $t48 := opaque end: aggregator_v2::create_snapshot<u64>($t47) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:26+56

    // $t50 := opaque begin: option::some<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t48) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:13+70

    // assume And(WellFormed($t50), Le(Len<0x1::aggregator_v2::AggregatorSnapshot<u64>>(select option::Option.vec($t50)), 1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:13+70
    assume ($IsValid'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($t50) && (LenVec($t50->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::aggregator_v2::AggregatorSnapshot<u64>>>($t50, option::spec_some<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t48)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:13+70
    assume $IsEqual'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($t50, $1_option_spec_some'$1_aggregator_v2_AggregatorSnapshot'u64''($t48));

    // $t50 := opaque end: option::some<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t48) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:13+70

    // $t4 := $t50 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:13+70
    $t4 := $t50;

    // trace_local[return]($t50) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:417:13+70
    assume {:print "$track_local(102,15,4):", $t50} $t50 == $t50;

    // goto L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:393:58+979
    assume {:print "$at(231,14824,15803)"} true;
    goto L10;

    // label L8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:410:35+23
    assume {:print "$at(231,15514,15537)"} true;
L8:

    // $t51 := borrow_field<0x4::collection::FixedSupply>.mint_events($t30) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:410:35+23
    assume {:print "$at(231,15514,15537)"} true;
    $t51 := $ChildMutation($t30, 4, $Dereference($t30)->$mint_events);

    // $t52 := get_field<0x4::collection::FixedSupply>.total_minted($t30) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:412:32+19
    assume {:print "$at(231,15602,15621)"} true;
    $t52 := $Dereference($t30)->$total_minted;

    // $t53 := pack 0x4::collection::MintEvent($t52, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:411:21+116
    assume {:print "$at(231,15559,15675)"} true;
    $t53 := $4_collection_MintEvent($t52, $t1);

    // opaque begin: event::emit_event<0x4::collection::MintEvent>($t51, $t53) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:410:17+198
    assume {:print "$at(231,15496,15694)"} true;

    // opaque end: event::emit_event<0x4::collection::MintEvent>($t51, $t53) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:410:17+198

    // write_back[Reference($t30).mint_events (0x1::event::EventHandle<0x4::collection::MintEvent>)]($t51) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:410:17+198
    $t30 := $UpdateMutation($t30, $Update'$4_collection_FixedSupply'_mint_events($Dereference($t30), $Dereference($t51)));

    // goto L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:410:17+198
    goto L11;

    // label L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:397:13+6
    assume {:print "$at(231,14976,14982)"} true;
L6:

    // write_back[0x4::collection::FixedSupply@]($t30) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:397:13+6
    assume {:print "$at(231,14976,14982)"} true;
    $4_collection_FixedSupply_$memory := $ResourceUpdate($4_collection_FixedSupply_$memory, $GlobalLocationAddress($t30),
        $Dereference($t30));

    // drop($t30) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:397:13+6

    // $t54 := 2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:399:37+27
    assume {:print "$at(231,15081,15108)"} true;
    $t54 := 2;
    assume $IsValid'u64'($t54);

    // $t55 := error::out_of_range($t54) on_abort goto L18 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:399:17+48
    call $t55 := $1_error_out_of_range($t54);
    if ($abort_flag) {
        assume {:print "$at(231,15061,15109)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;
        goto L18;
    }

    // trace_abort($t55) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:397:13+6
    assume {:print "$at(231,14976,14982)"} true;
    assume {:print "$track_abort(102,15):", $t55} $t55 == $t55;

    // $t11 := move($t55) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:397:13+6
    $t11 := $t55;

    // goto L18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:397:13+6
    goto L18;

    // label L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:418:20+40
    assume {:print "$at(231,15813,15853)"} true;
L4:

    // $t56 := exists<0x4::collection::UnlimitedSupply>($t10) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:418:20+40
    assume {:print "$at(231,15813,15853)"} true;
    $t56 := $ResourceExists($4_collection_UnlimitedSupply_$memory, $t10);

    // if ($t56) goto L13 else goto L12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:418:16+932
    if ($t56) { goto L13; } else { goto L12; }

    // label L13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:419:26+37
    assume {:print "$at(231,15882,15919)"} true;
L13:

    // $t57 := borrow_global<0x4::collection::UnlimitedSupply>($t10) on_abort goto L18 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:419:26+37
    assume {:print "$at(231,15882,15919)"} true;
    if (!$ResourceExists($4_collection_UnlimitedSupply_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t57 := $Mutation($Global($t10), EmptyVec(), $ResourceValue($4_collection_UnlimitedSupply_$memory, $t10));
    }
    if ($abort_flag) {
        assume {:print "$at(231,15882,15919)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;
        goto L18;
    }

    // trace_local[supply]($t57) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:419:26+37
    $temp_0'$4_collection_UnlimitedSupply' := $Dereference($t57);
    assume {:print "$track_local(102,15,7):", $temp_0'$4_collection_UnlimitedSupply'} $temp_0'$4_collection_UnlimitedSupply' == $temp_0'$4_collection_UnlimitedSupply';

    // $t58 := borrow_field<0x4::collection::UnlimitedSupply>.current_supply($t57) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:420:13+21
    assume {:print "$at(231,15933,15954)"} true;
    $t58 := $ChildMutation($t57, 0, $Dereference($t57)->$current_supply);

    // trace_local[$t1]($t58) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:420:13+21
    $temp_0'u64' := $Dereference($t58);
    assume {:print "$track_local(102,15,6):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t59 := read_ref($t58) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:420:13+26
    $t59 := $Dereference($t58);

    // $t60 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:420:38+1
    $t60 := 1;
    assume $IsValid'u64'($t60);

    // $t61 := +($t59, $t60) on_abort goto L18 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:420:13+26
    call $t61 := $AddU64($t59, $t60);
    if ($abort_flag) {
        assume {:print "$at(231,15933,15959)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;
        goto L18;
    }

    // write_ref($t58, $t61) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:420:13+26
    $t58 := $UpdateMutation($t58, $t61);

    // write_back[Reference($t57).current_supply (u64)]($t58) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:420:13+26
    $t57 := $UpdateMutation($t57, $Update'$4_collection_UnlimitedSupply'_current_supply($Dereference($t57), $Dereference($t58)));

    // $t62 := borrow_field<0x4::collection::UnlimitedSupply>.total_minted($t57) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:421:13+19
    assume {:print "$at(231,15973,15992)"} true;
    $t62 := $ChildMutation($t57, 1, $Dereference($t57)->$total_minted);

    // trace_local[$t1]($t62) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:421:13+19
    $temp_0'u64' := $Dereference($t62);
    assume {:print "$track_local(102,15,6):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t63 := read_ref($t62) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:421:13+24
    $t63 := $Dereference($t62);

    // $t64 := 1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:421:36+1
    $t64 := 1;
    assume $IsValid'u64'($t64);

    // $t65 := +($t63, $t64) on_abort goto L18 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:421:13+24
    call $t65 := $AddU64($t63, $t64);
    if ($abort_flag) {
        assume {:print "$at(231,15973,15997)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;
        goto L18;
    }

    // write_ref($t62, $t65) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:421:13+24
    $t62 := $UpdateMutation($t62, $t65);

    // write_back[Reference($t57).total_minted (u64)]($t62) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:421:13+24
    $t57 := $UpdateMutation($t57, $Update'$4_collection_UnlimitedSupply'_total_minted($Dereference($t57), $Dereference($t62)));

    // $t66 := features::module_event_migration_enabled() on_abort goto L18 with $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:422:17+47
    assume {:print "$at(231,16015,16062)"} true;
    call $t66 := $1_features_module_event_migration_enabled();
    if ($abort_flag) {
        assume {:print "$at(231,16015,16062)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;
        goto L18;
    }

    // if ($t66) goto L15 else goto L14 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:422:13+592
    if ($t66) { goto L15; } else { goto L14; }

    // label L15 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:425:37+15
    assume {:print "$at(231,16158,16173)"} true;
L15:

    // $t67 := get_field<0x4::collection::UnlimitedSupply>.total_minted($t57) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:426:63+19
    assume {:print "$at(231,16237,16256)"} true;
    $t67 := $Dereference($t57)->$total_minted;

    // $t68 := opaque begin: aggregator_v2::create_snapshot<u64>($t67) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:426:32+51

    // assume Identical($t69, And(Neq<vector<u8>>(select string::String.bytes<0x1::string::String>(type_info::$type_name<u64>()), [117, 54, 52]), Neq<vector<u8>>(select string::String.bytes<0x1::string::String>(type_info::$type_name<u64>()), [117, 49, 50, 56]))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:426:32+51
    assume ($t69 == (!$IsEqual'vec'u8''($1_string_String(Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3))->$bytes, MakeVec3(117, 54, 52)) && !$IsEqual'vec'u8''($1_string_String(Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3))->$bytes, MakeVec4(117, 49, 50, 56))));

    // if ($t69) goto L33 else goto L27 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:426:32+51
    if ($t69) { goto L33; } else { goto L27; }

    // label L28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:426:32+51
L28:

    // trace_abort($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:426:32+51
    assume {:print "$at(231,16206,16257)"} true;
    assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;

    // goto L18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:426:32+51
    goto L18;

    // label L27 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:426:32+51
L27:

    // assume WellFormed($t68) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:426:32+51
    assume {:print "$at(231,16206,16257)"} true;
    assume $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''($t68);

    // assume Eq<u64>(select aggregator_v2::AggregatorSnapshot.value<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t68), $t67) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:426:32+51
    assume $IsEqual'u64'($t68->$value, $t67);

    // $t68 := opaque end: aggregator_v2::create_snapshot<u64>($t67) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:426:32+51

    // $t70 := pack 0x4::collection::Mint($t10, $t68, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:424:21+196
    assume {:print "$at(231,16115,16311)"} true;
    $t70 := $4_collection_Mint($t10, $t68, $t1);

    // opaque begin: event::emit<0x4::collection::Mint>($t70) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:423:17+248
    assume {:print "$at(231,16082,16330)"} true;

    // opaque end: event::emit<0x4::collection::Mint>($t70) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:423:17+248

    // label L16 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:62+19
    assume {:print "$at(231,16666,16685)"} true;
L16:

    // $t71 := get_field<0x4::collection::UnlimitedSupply>.total_minted($t57) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:62+19
    assume {:print "$at(231,16666,16685)"} true;
    $t71 := $Dereference($t57)->$total_minted;

    // write_back[0x4::collection::UnlimitedSupply@]($t57) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:62+19
    $4_collection_UnlimitedSupply_$memory := $ResourceUpdate($4_collection_UnlimitedSupply_$memory, $GlobalLocationAddress($t57),
        $Dereference($t57));

    // $t72 := opaque begin: aggregator_v2::create_snapshot<u64>($t71) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:26+56

    // assume Identical($t73, And(Neq<vector<u8>>(select string::String.bytes<0x1::string::String>(type_info::$type_name<u64>()), [117, 54, 52]), Neq<vector<u8>>(select string::String.bytes<0x1::string::String>(type_info::$type_name<u64>()), [117, 49, 50, 56]))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:26+56
    assume ($t73 == (!$IsEqual'vec'u8''($1_string_String(Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3))->$bytes, MakeVec3(117, 54, 52)) && !$IsEqual'vec'u8''($1_string_String(Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3))->$bytes, MakeVec4(117, 49, 50, 56))));

    // if ($t73) goto L30 else goto L29 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:26+56
    if ($t73) { goto L30; } else { goto L29; }

    // label L30 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:26+56
L30:

    // trace_abort($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:26+56
    assume {:print "$at(231,16630,16686)"} true;
    assume {:print "$track_abort(102,15):", $t11} $t11 == $t11;

    // goto L18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:26+56
    goto L18;

    // label L29 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:26+56
L29:

    // assume WellFormed($t72) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:26+56
    assume {:print "$at(231,16630,16686)"} true;
    assume $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''($t72);

    // assume Eq<u64>(select aggregator_v2::AggregatorSnapshot.value<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t72), $t71) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:26+56
    assume $IsEqual'u64'($t72->$value, $t71);

    // $t72 := opaque end: aggregator_v2::create_snapshot<u64>($t71) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:26+56

    // $t74 := opaque begin: option::some<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t72) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:13+70

    // assume And(WellFormed($t74), Le(Len<0x1::aggregator_v2::AggregatorSnapshot<u64>>(select option::Option.vec($t74)), 1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:13+70
    assume ($IsValid'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($t74) && (LenVec($t74->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::aggregator_v2::AggregatorSnapshot<u64>>>($t74, option::spec_some<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t72)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:13+70
    assume $IsEqual'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($t74, $1_option_spec_some'$1_aggregator_v2_AggregatorSnapshot'u64''($t72));

    // $t74 := opaque end: option::some<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t72) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:13+70

    // $t4 := $t74 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:13+70
    $t4 := $t74;

    // trace_local[return]($t74) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:439:13+70
    assume {:print "$track_local(102,15,4):", $t74} $t74 == $t74;

    // goto L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:418:62+842
    assume {:print "$at(231,15855,16697)"} true;
    goto L10;

    // label L14 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:432:21+23
    assume {:print "$at(231,16408,16431)"} true;
L14:

    // $t75 := borrow_field<0x4::collection::UnlimitedSupply>.mint_events($t57) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:432:21+23
    assume {:print "$at(231,16408,16431)"} true;
    $t75 := $ChildMutation($t57, 3, $Dereference($t57)->$mint_events);

    // $t76 := get_field<0x4::collection::UnlimitedSupply>.total_minted($t57) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:434:32+19
    assume {:print "$at(231,16496,16515)"} true;
    $t76 := $Dereference($t57)->$total_minted;

    // $t77 := pack 0x4::collection::MintEvent($t76, $t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:433:21+116
    assume {:print "$at(231,16453,16569)"} true;
    $t77 := $4_collection_MintEvent($t76, $t1);

    // opaque begin: event::emit_event<0x4::collection::MintEvent>($t75, $t77) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:431:17+219
    assume {:print "$at(231,16369,16588)"} true;

    // opaque end: event::emit_event<0x4::collection::MintEvent>($t75, $t77) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:431:17+219

    // write_back[Reference($t57).mint_events (0x1::event::EventHandle<0x4::collection::MintEvent>)]($t75) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:431:17+219
    $t57 := $UpdateMutation($t57, $Update'$4_collection_UnlimitedSupply'_mint_events($Dereference($t57), $Dereference($t75)));

    // goto L16 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:431:17+219
    goto L16;

    // label L12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:441:13+14
    assume {:print "$at(231,16717,16731)"} true;
L12:

    // $t78 := opaque begin: option::none<0x1::aggregator_v2::AggregatorSnapshot<u64>>() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:441:13+14
    assume {:print "$at(231,16717,16731)"} true;

    // assume And(WellFormed($t78), Le(Len<0x1::aggregator_v2::AggregatorSnapshot<u64>>(select option::Option.vec($t78)), 1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:441:13+14
    assume ($IsValid'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($t78) && (LenVec($t78->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::aggregator_v2::AggregatorSnapshot<u64>>>($t78, option::spec_none<0x1::aggregator_v2::AggregatorSnapshot<u64>>()) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:441:13+14
    assume $IsEqual'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($t78, $1_option_spec_none'$1_aggregator_v2_AggregatorSnapshot'u64''());

    // $t78 := opaque end: option::none<0x1::aggregator_v2::AggregatorSnapshot<u64>>() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:441:13+14

    // $t4 := $t78 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:441:13+14
    $t4 := $t78;

    // trace_local[return]($t78) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:441:13+14
    assume {:print "$track_local(102,15,4):", $t78} $t78 == $t78;

    // goto L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:441:13+14
    goto L10;

    // label L17 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:443:5+1
    assume {:print "$at(231,16746,16747)"} true;
L17:

    // return $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:443:5+1
    assume {:print "$at(231,16746,16747)"} true;
    $ret0 := $t4;
    return;

    // label L18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:443:5+1
L18:

    // abort($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:443:5+1
    assume {:print "$at(231,16746,16747)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

    // label L31 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L31:

    // drop($t13) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L20 at <internal>:1:1+10
    goto L20;

    // label L32 at <internal>:1:1+10
L32:

    // drop($t30) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L24 at <internal>:1:1+10
    goto L24;

    // label L33 at <internal>:1:1+10
L33:

    // drop($t57) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L28 at <internal>:1:1+10
    goto L28;

}

// struct token::MutationEvent at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:107:5+133
datatype $4_token_MutationEvent {
    $4_token_MutationEvent($mutated_field_name: $1_string_String, $old_value: $1_string_String, $new_value: $1_string_String)
}
function {:inline} $Update'$4_token_MutationEvent'_mutated_field_name(s: $4_token_MutationEvent, x: $1_string_String): $4_token_MutationEvent {
    $4_token_MutationEvent(x, s->$old_value, s->$new_value)
}
function {:inline} $Update'$4_token_MutationEvent'_old_value(s: $4_token_MutationEvent, x: $1_string_String): $4_token_MutationEvent {
    $4_token_MutationEvent(s->$mutated_field_name, x, s->$new_value)
}
function {:inline} $Update'$4_token_MutationEvent'_new_value(s: $4_token_MutationEvent, x: $1_string_String): $4_token_MutationEvent {
    $4_token_MutationEvent(s->$mutated_field_name, s->$old_value, x)
}
function $IsValid'$4_token_MutationEvent'(s: $4_token_MutationEvent): bool {
    $IsValid'$1_string_String'(s->$mutated_field_name)
      && $IsValid'$1_string_String'(s->$old_value)
      && $IsValid'$1_string_String'(s->$new_value)
}
function {:inline} $IsEqual'$4_token_MutationEvent'(s1: $4_token_MutationEvent, s2: $4_token_MutationEvent): bool {
    $IsEqual'$1_string_String'(s1->$mutated_field_name, s2->$mutated_field_name)
    && $IsEqual'$1_string_String'(s1->$old_value, s2->$old_value)
    && $IsEqual'$1_string_String'(s1->$new_value, s2->$new_value)}

// struct token::Token at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:48:5+1186
datatype $4_token_Token {
    $4_token_Token($collection: $1_object_Object'$4_collection_Collection', $index: int, $description: $1_string_String, $name: $1_string_String, $uri: $1_string_String, $mutation_events: $1_event_EventHandle'$4_token_MutationEvent')
}
function {:inline} $Update'$4_token_Token'_collection(s: $4_token_Token, x: $1_object_Object'$4_collection_Collection'): $4_token_Token {
    $4_token_Token(x, s->$index, s->$description, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_index(s: $4_token_Token, x: int): $4_token_Token {
    $4_token_Token(s->$collection, x, s->$description, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_description(s: $4_token_Token, x: $1_string_String): $4_token_Token {
    $4_token_Token(s->$collection, s->$index, x, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_name(s: $4_token_Token, x: $1_string_String): $4_token_Token {
    $4_token_Token(s->$collection, s->$index, s->$description, x, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_uri(s: $4_token_Token, x: $1_string_String): $4_token_Token {
    $4_token_Token(s->$collection, s->$index, s->$description, s->$name, x, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_mutation_events(s: $4_token_Token, x: $1_event_EventHandle'$4_token_MutationEvent'): $4_token_Token {
    $4_token_Token(s->$collection, s->$index, s->$description, s->$name, s->$uri, x)
}
function $IsValid'$4_token_Token'(s: $4_token_Token): bool {
    $IsValid'$1_object_Object'$4_collection_Collection''(s->$collection)
      && $IsValid'u64'(s->$index)
      && $IsValid'$1_string_String'(s->$description)
      && $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$uri)
      && $IsValid'$1_event_EventHandle'$4_token_MutationEvent''(s->$mutation_events)
}
function {:inline} $IsEqual'$4_token_Token'(s1: $4_token_Token, s2: $4_token_Token): bool {
    $IsEqual'$1_object_Object'$4_collection_Collection''(s1->$collection, s2->$collection)
    && $IsEqual'u64'(s1->$index, s2->$index)
    && $IsEqual'$1_string_String'(s1->$description, s2->$description)
    && $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$uri, s2->$uri)
    && $IsEqual'$1_event_EventHandle'$4_token_MutationEvent''(s1->$mutation_events, s2->$mutation_events)}
var $4_token_Token_$memory: $Memory $4_token_Token;

// struct token::TokenIdentifiers at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:76:5+375
datatype $4_token_TokenIdentifiers {
    $4_token_TokenIdentifiers($index: $1_aggregator_v2_AggregatorSnapshot'u64', $name: $1_aggregator_v2_DerivedStringSnapshot)
}
function {:inline} $Update'$4_token_TokenIdentifiers'_index(s: $4_token_TokenIdentifiers, x: $1_aggregator_v2_AggregatorSnapshot'u64'): $4_token_TokenIdentifiers {
    $4_token_TokenIdentifiers(x, s->$name)
}
function {:inline} $Update'$4_token_TokenIdentifiers'_name(s: $4_token_TokenIdentifiers, x: $1_aggregator_v2_DerivedStringSnapshot): $4_token_TokenIdentifiers {
    $4_token_TokenIdentifiers(s->$index, x)
}
function $IsValid'$4_token_TokenIdentifiers'(s: $4_token_TokenIdentifiers): bool {
    $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''(s->$index)
      && $IsValid'$1_aggregator_v2_DerivedStringSnapshot'(s->$name)
}
function {:inline} $IsEqual'$4_token_TokenIdentifiers'(s1: $4_token_TokenIdentifiers, s2: $4_token_TokenIdentifiers): bool {
    $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''(s1->$index, s2->$index)
    && $IsEqual'$1_aggregator_v2_DerivedStringSnapshot'(s1->$name, s2->$name)}
var $4_token_TokenIdentifiers_$memory: $Memory $4_token_TokenIdentifiers;

// fun token::create_named_token [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:450:5+609
procedure {:inline 1} $4_token_create_named_token(_$t0: $signer, _$t1: $1_string_String, _$t2: $1_string_String, _$t3: $1_string_String, _$t4: $1_option_Option'$4_royalty_Royalty', _$t5: $1_string_String) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t6: Vec (int);
    var $t7: $1_object_ConstructorRef;
    var $t8: $1_object_ConstructorRef;
    var $t9: $1_string_String;
    var $t10: $1_string_String;
    var $t11: $1_option_Option'$1_string_String';
    var $t12: int;
    var $t13: $1_object_Object'$4_collection_Collection';
    var $t14: $1_object_ConstructorRef;
    var $t15: $1_object_Object'$4_collection_Collection';
    var $t16: $1_string_String;
    var $t17: $1_string_String;
    var $t18: $1_option_Option'$1_string_String';
    var $t19: $1_option_Option'$4_royalty_Royalty';
    var $t20: $1_string_String;
    var $t21: $signer;
    var $t22: $1_aggregator_v2_AggregatorSnapshot'u64';
    var $t23: $1_aggregator_v2_DerivedStringSnapshot;
    var $t24: $1_string_String;
    var $t25: $4_token_TokenIdentifiers;
    var $t26: $4_token_Token;
    var $t27: Vec (int);
    var $t28: int;
    var $t29: int;
    var $t30: int;
    var $t31: $1_object_ConstructorRef;
    var $t32: $1_option_Option'$1_string_String';
    var $t33: int;
    var $t34: int;
    var $t35: $1_object_Object'$4_collection_Collection';
    var $t36: int;
    var $t37: int;
    var $t38: bool;
    var $t39: $1_option_Option'$1_string_String';
    var $t40: bool;
    var $t41: int;
    var $t42: int;
    var $t43: int;
    var $t44: $1_option_Option'$1_string_String';
    var $t45: $1_string_String;
    var $t46: bool;
    var $t47: int;
    var $t48: int;
    var $t49: int;
    var $t50: bool;
    var $t51: int;
    var $t52: int;
    var $t53: bool;
    var $t54: int;
    var $t55: int;
    var $t56: bool;
    var $t57: $signer;
    var $t58: int;
    var $t59: int;
    var $t60: $4_collection_ConcurrentSupply;
    var $t61: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'';
    var $t62: int;
    var $t63: $1_aggregator_v2_AggregatorSnapshot'u64';
    var $t64: bool;
    var $t65: $1_aggregator_v2_AggregatorSnapshot'u64';
    var $t66: $1_option_Option'$1_string_String';
    var $t67: bool;
    var $t68: $Mutation ($1_option_Option'$1_string_String');
    var $t69: $1_string_String;
    var $t70: $1_option_Option'$1_string_String';
    var $t71: bool;
    var $t72: $1_aggregator_v2_DerivedStringSnapshot;
    var $t73: bool;
    var $t74: Vec (int);
    var $t75: $1_string_String;
    var $t76: $4_token_TokenIdentifiers;
    var $t77: int;
    var $t78: $1_object_ObjectCore;
    var $t79: $1_guid_GUID;
    var $t80: $1_event_EventHandle'$4_token_MutationEvent';
    var $t81: $4_token_Token;
    var $t82: $1_option_Option'$4_royalty_Royalty';
    var $t83: bool;
    var $t84: $Mutation ($1_option_Option'$4_royalty_Royalty');
    var $t85: $4_royalty_Royalty;
    var $t86: $1_option_Option'$4_royalty_Royalty';
    var $t87: bool;
    var $t88: $1_aggregator_v2_DerivedStringSnapshot;
    var $t89: bool;
    var $t90: int;
    var $t91: int;
    var $t92: int;
    var $t93: int;
    var $t94: int;
    var $t95: int;
    var $t96: int;
    var $t97: int;
    var $t98: bool;
    var $t99: int;
    var $t100: int;
    var $t101: int;
    var $t102: int;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: $1_option_Option'$4_royalty_Royalty';
    var $t5: $1_string_String;
    var $temp_0'$1_aggregator_v2_AggregatorSnapshot'u64'': $1_aggregator_v2_AggregatorSnapshot'u64';
    var $temp_0'$1_aggregator_v2_DerivedStringSnapshot': $1_aggregator_v2_DerivedStringSnapshot;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'$1_option_Option'$1_string_String'': $1_option_Option'$1_string_String';
    var $temp_0'$1_option_Option'$4_royalty_Royalty'': $1_option_Option'$4_royalty_Royalty';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$4_token_Token': $4_token_Token;
    var $temp_0'$4_token_TokenIdentifiers': $4_token_TokenIdentifiers;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;

    // bytecode translation starts here
    // trace_local[creator]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:450:5+1
    assume {:print "$at(234,16642,16643)"} true;
    assume {:print "$track_local(103,17,0):", $t0} $t0 == $t0;

    // trace_local[collection_name]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:450:5+1
    assume {:print "$track_local(103,17,1):", $t1} $t1 == $t1;

    // trace_local[description]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:450:5+1
    assume {:print "$track_local(103,17,2):", $t2} $t2 == $t2;

    // trace_local[name]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:450:5+1
    assume {:print "$track_local(103,17,3):", $t3} $t3 == $t3;

    // trace_local[royalty]($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:450:5+1
    assume {:print "$track_local(103,17,4):", $t4} $t4 == $t4;

    // trace_local[uri]($t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:450:5+1
    assume {:print "$track_local(103,17,5):", $t5} $t5 == $t5;

    // $t27 := token::create_token_seed($t1, $t3) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:458:20+42
    assume {:print "$at(234,16881,16923)"} true;
    call $t27 := $4_token_create_token_seed($t1, $t3);
    if ($abort_flag) {
        assume {:print "$at(234,16881,16923)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // trace_local[seed]($t27) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:458:20+42
    assume {:print "$track_local(103,17,6):", $t27} $t27 == $t27;

    // assume Identical($t29, signer::$address_of($t0)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:162:9+50
    assume {:print "$at(186,6936,6986)"} true;
    assume ($t29 == $1_signer_$address_of($t0));

    // assume Identical($t30, object::spec_create_object_address($t29, $t27)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:163:9+65
    assume {:print "$at(186,6995,7060)"} true;
    assume ($t30 == $1_object_spec_create_object_address($t29, $t27));

    // $t31 := object::create_named_object($t0, $t27) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:460:31+42
    assume {:print "$at(234,16956,16998)"} true;
    call $t31 := $1_object_create_named_object($t0, $t27);
    if ($abort_flag) {
        assume {:print "$at(234,16956,16998)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // trace_local[constructor_ref]($t31) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:460:31+42
    assume {:print "$track_local(103,17,7):", $t31} $t31 == $t31;

    // trace_local[$t20]($t31) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:463:13+16
    assume {:print "$at(234,17056,17072)"} true;
    assume {:print "$track_local(103,17,8):", $t31} $t31 == $t31;

    // trace_local[collection_name]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:121:16+13
    assume {:print "$at(234,4959,4972)"} true;
    assume {:print "$track_local(103,17,9):", $t1} $t1 == $t1;

    // trace_local[name_prefix]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:121:16+13
    assume {:print "$track_local(103,17,10):", $t3} $t3 == $t3;

    // $t32 := opaque begin: option::none<0x1::string::String>() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:467:13+14
    assume {:print "$at(234,17158,17172)"} true;

    // assume And(WellFormed($t32), Le(Len<0x1::string::String>(select option::Option.vec($t32)), 1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:467:13+14
    assume ($IsValid'$1_option_Option'$1_string_String''($t32) && (LenVec($t32->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::string::String>>($t32, option::spec_none<0x1::string::String>()) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:467:13+14
    assume $IsEqual'$1_option_Option'$1_string_String''($t32, $1_option_spec_none'$1_string_String'());

    // $t32 := opaque end: option::none<0x1::string::String>() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:467:13+14

    // trace_local[$t21]($t32) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:467:13+14
    assume {:print "$track_local(103,17,11):", $t32} $t32 == $t32;

    // $t33 := signer::address_of($t0) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:133:31+27
    assume {:print "$at(234,5437,5464)"} true;
    call $t33 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(234,5437,5464)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // trace_local[creator_address]($t33) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:133:31+27
    assume {:print "$track_local(103,17,12):", $t33} $t33 == $t33;

    // $t34 := collection::create_collection_address($t33, $t1) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:134:31+73
    assume {:print "$at(234,5496,5569)"} true;
    call $t34 := $4_collection_create_collection_address($t33, $t1);
    if ($abort_flag) {
        assume {:print "$at(234,5496,5569)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // $t35 := object::address_to_object<0x4::collection::Collection>($t34) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:135:26+54
    assume {:print "$at(234,5596,5650)"} true;
    call $t35 := $1_object_address_to_object'$4_collection_Collection'($t34);
    if ($abort_flag) {
        assume {:print "$at(234,5596,5650)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // trace_local[collection]($t35) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:135:26+54
    assume {:print "$track_local(103,17,13):", $t35} $t35 == $t35;

    // $t36 := collection::creator<0x4::collection::Collection>($t35) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:161:17+31
    assume {:print "$at(234,6408,6439)"} true;
    call $t36 := $4_collection_creator'$4_collection_Collection'($t35);
    if ($abort_flag) {
        assume {:print "$at(234,6408,6439)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // $t37 := signer::address_of($t0) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:161:52+27
    call $t37 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(234,6443,6470)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // $t38 := ==($t36, $t37) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:161:17+62
    $t38 := $IsEqual'address'($t36, $t37);

    // if ($t38) goto L1 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:161:9+6
    if ($t38) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:200:16+38
    assume {:print "$at(234,7725,7763)"} true;
L1:

    // trace_local[constructor_ref]($t31) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:200:16+38
    assume {:print "$at(234,7725,7763)"} true;
    assume {:print "$track_local(103,17,14):", $t31} $t31 == $t31;

    // trace_local[collection]($t35) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:200:16+38
    assume {:print "$track_local(103,17,15):", $t35} $t35 == $t35;

    // trace_local[description]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:200:16+38
    assume {:print "$track_local(103,17,16):", $t2} $t2 == $t2;

    // trace_local[name_prefix]($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:200:16+38
    assume {:print "$track_local(103,17,17):", $t3} $t3 == $t3;

    // $t18 := $t32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:200:16+38
    $t18 := $t32;

    // trace_local[name_with_index_suffix]($t18) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:200:16+38
    assume {:print "$track_local(103,17,18):", $t18} $t18 == $t18;

    // $t19 := $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:200:16+38
    $t19 := $t4;

    // trace_local[royalty]($t19) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:200:16+38
    assume {:print "$track_local(103,17,19):", $t19} $t19 == $t19;

    // trace_local[uri]($t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:200:16+38
    assume {:print "$track_local(103,17,20):", $t5} $t5 == $t5;

    // $t39 := copy($t18) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:211:13+32
    assume {:print "$at(234,8191,8223)"} true;
    $t39 := $t18;

    // $t40 := opaque begin: option::is_some<0x1::string::String>($t39) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:211:13+32

    // assume WellFormed($t40) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:211:13+32
    assume $IsValid'bool'($t40);

    // assume Eq<bool>($t40, option::spec_is_some<0x1::string::String>($t39)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:211:13+32
    assume $IsEqual'bool'($t40, $1_option_spec_is_some'$1_string_String'($t39));

    // $t40 := opaque end: option::is_some<0x1::string::String>($t39) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:211:13+32

    // if ($t40) goto L3 else goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:211:9+506
    if ($t40) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:17+20
    assume {:print "$at(234,8388,8408)"} true;
L3:

    // $t41 := string::length($t3) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:17+20
    assume {:print "$at(234,8388,8408)"} true;
    call $t41 := $1_string_length($t3);
    if ($abort_flag) {
        assume {:print "$at(234,8388,8408)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // $t42 := 20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:40+2
    $t42 := 20;
    assume $IsValid'u64'($t42);

    // $t43 := +($t41, $t42) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:17+25
    call $t43 := $AddU64($t41, $t42);
    if ($abort_flag) {
        assume {:print "$at(234,8388,8413)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // $t44 := copy($t18) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:45+31
    $t44 := $t18;

    // $t45 := opaque begin: option::borrow<0x1::string::String>($t44) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:45+31

    // assume Identical($t46, option::spec_is_none<0x1::string::String>($t44)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:45+31
    assume ($t46 == $1_option_spec_is_none'$1_string_String'($t44));

    // if ($t46) goto L22 else goto L21 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:45+31
    if ($t46) { goto L22; } else { goto L21; }

    // label L22 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:45+31
L22:

    // assume And(option::spec_is_none<0x1::string::String>($t44), Eq(262145, $t28)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:45+31
    assume {:print "$at(234,8416,8447)"} true;
    assume ($1_option_spec_is_none'$1_string_String'($t44) && $IsEqual'num'(262145, $t28));

    // trace_abort($t28) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:45+31
    assume {:print "$at(234,8416,8447)"} true;
    assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;

    // goto L20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:45+31
    goto L20;

    // label L21 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:45+31
L21:

    // assume WellFormed($t45) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:45+31
    assume {:print "$at(234,8416,8447)"} true;
    assume $IsValid'$1_string_String'($t45);

    // assume Eq<0x1::string::String>($t45, option::spec_borrow<0x1::string::String>($t44)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:45+31
    assume $IsEqual'$1_string_String'($t45, $1_option_spec_borrow'$1_string_String'($t44));

    // $t45 := opaque end: option::borrow<0x1::string::String>($t44) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:45+31

    // $t47 := string::length($t45) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:45+40
    call $t47 := $1_string_length($t45);
    if ($abort_flag) {
        assume {:print "$at(234,8416,8456)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // $t48 := +($t43, $t47) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:17+68
    call $t48 := $AddU64($t43, $t47);
    if ($abort_flag) {
        assume {:print "$at(234,8388,8456)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // $t49 := 128 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:89+21
    $t49 := 128;
    assume $IsValid'u64'($t49);

    // $t50 := <=($t48, $t49) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:214:17+93
    call $t50 := $Le($t48, $t49);

    // if ($t50) goto L5 else goto L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:213:13+6
    assume {:print "$at(234,8363,8369)"} true;
    if ($t50) { goto L5; } else { goto L4; }

    // label L5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:213:13+6
L5:

    // label L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:220:17+20
    assume {:print "$at(234,8711,8731)"} true;
L6:

    // $t51 := string::length($t2) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:220:17+20
    assume {:print "$at(234,8711,8731)"} true;
    call $t51 := $1_string_length($t2);
    if ($abort_flag) {
        assume {:print "$at(234,8711,8731)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // $t52 := 2048 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:220:41+22
    $t52 := 2048;
    assume $IsValid'u64'($t52);

    // $t53 := <=($t51, $t52) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:220:17+46
    call $t53 := $Le($t51, $t52);

    // if ($t53) goto L8 else goto L7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:220:9+6
    if ($t53) { goto L8; } else { goto L7; }

    // label L8 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:221:17+12
    assume {:print "$at(234,8820,8832)"} true;
L8:

    // $t54 := string::length($t5) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:221:17+12
    assume {:print "$at(234,8820,8832)"} true;
    call $t54 := $1_string_length($t5);
    if ($abort_flag) {
        assume {:print "$at(234,8820,8832)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // $t55 := 512 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:221:33+14
    $t55 := 512;
    assume $IsValid'u64'($t55);

    // $t56 := <=($t54, $t55) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:221:17+30
    call $t56 := $Le($t54, $t55);

    // if ($t56) goto L10 else goto L9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:221:9+6
    if ($t56) { goto L10; } else { goto L9; }

    // label L10 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:223:29+40
    assume {:print "$at(234,8918,8958)"} true;
L10:

    // $t57 := object::generate_signer($t31) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:223:29+40
    assume {:print "$at(234,8918,8958)"} true;
    call $t57 := $1_object_generate_signer($t31);
    if ($abort_flag) {
        assume {:print "$at(234,8918,8958)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // trace_local[object_signer]($t57) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:223:29+40
    assume {:print "$track_local(103,17,21):", $t57} $t57 == $t57;

    // $t58 := signer::address_of($t57) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:225:63+34
    assume {:print "$at(234,9023,9057)"} true;
    call $t58 := $1_signer_address_of($t57);
    if ($abort_flag) {
        assume {:print "$at(234,9023,9057)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // assume Identical($t59, object::$object_address<0x4::collection::Collection>($t35)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:447:9+57
    assume {:print "$at(231,16822,16879)"} true;
    assume ($t59 == $1_object_$object_address'$4_collection_Collection'($t35));

    // assume Identical($t60, global<0x4::collection::ConcurrentSupply>($t59)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/collection.move:448:9+55
    assume {:print "$at(231,16888,16943)"} true;
    assume ($t60 == $ResourceValue($4_collection_ConcurrentSupply_$memory, $t59));

    // $t61 := collection::increment_supply($t35, $t58) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:225:21+77
    assume {:print "$at(234,8981,9058)"} true;
    call $t61 := $4_collection_increment_supply($t35, $t58);
    if ($abort_flag) {
        assume {:print "$at(234,8981,9058)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // $t62 := 0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:226:49+1
    assume {:print "$at(234,9129,9130)"} true;
    $t62 := 0;
    assume $IsValid'u64'($t62);

    // $t63 := opaque begin: aggregator_v2::create_snapshot<u64>($t62) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:226:13+38

    // assume Identical($t64, And(Neq<vector<u8>>(select string::String.bytes<0x1::string::String>(type_info::$type_name<u64>()), [117, 54, 52]), Neq<vector<u8>>(select string::String.bytes<0x1::string::String>(type_info::$type_name<u64>()), [117, 49, 50, 56]))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:226:13+38
    assume ($t64 == (!$IsEqual'vec'u8''($1_string_String(Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3))->$bytes, MakeVec3(117, 54, 52)) && !$IsEqual'vec'u8''($1_string_String(Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3))->$bytes, MakeVec4(117, 49, 50, 56))));

    // if ($t64) goto L24 else goto L23 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:226:13+38
    if ($t64) { goto L24; } else { goto L23; }

    // label L24 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:226:13+38
L24:

    // trace_abort($t28) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:226:13+38
    assume {:print "$at(234,9093,9131)"} true;
    assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;

    // goto L20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:226:13+38
    goto L20;

    // label L23 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:226:13+38
L23:

    // assume WellFormed($t63) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:226:13+38
    assume {:print "$at(234,9093,9131)"} true;
    assume $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''($t63);

    // assume Eq<u64>(select aggregator_v2::AggregatorSnapshot.value<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t63), $t62) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:226:13+38
    assume $IsEqual'u64'($t63->$value, $t62);

    // $t63 := opaque end: aggregator_v2::create_snapshot<u64>($t62) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:226:13+38

    // $t65 := opaque begin: option::destroy_with_default<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t61, $t63) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:225:21+160
    assume {:print "$at(234,8981,9141)"} true;

    // assume WellFormed($t65) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:225:21+160
    assume $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''($t65);

    // assume Eq<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t65, if option::spec_is_some<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t61) {
    //   option::spec_borrow<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t61)
    // } else {
    //   $t63
    // }) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:225:21+160
    assume $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''($t65, (if ($1_option_spec_is_some'$1_aggregator_v2_AggregatorSnapshot'u64''($t61)) then ($1_option_spec_borrow'$1_aggregator_v2_AggregatorSnapshot'u64''($t61)) else ($t63)));

    // $t65 := opaque end: option::destroy_with_default<0x1::aggregator_v2::AggregatorSnapshot<u64>>($t61, $t63) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:225:21+160

    // trace_local[index]($t65) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:225:21+160
    assume {:print "$track_local(103,17,22):", $t65} $t65 == $t65;

    // $t66 := copy($t18) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:230:24+32
    assume {:print "$at(234,9237,9269)"} true;
    $t66 := $t18;

    // $t67 := opaque begin: option::is_some<0x1::string::String>($t66) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:230:24+32

    // assume WellFormed($t67) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:230:24+32
    assume $IsValid'bool'($t67);

    // assume Eq<bool>($t67, option::spec_is_some<0x1::string::String>($t66)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:230:24+32
    assume $IsEqual'bool'($t67, $1_option_spec_is_some'$1_string_String'($t66));

    // $t67 := opaque end: option::is_some<0x1::string::String>($t66) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:230:24+32

    // if ($t67) goto L12 else goto L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:230:20+231
    if ($t67) { goto L12; } else { goto L11; }

    // label L12 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:49+11
    assume {:print "$at(234,9321,9332)"} true;
L12:

    // $t68 := borrow_local($t18) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32
    assume {:print "$at(234,9342,9374)"} true;
    $t68 := $Mutation($Local(18), EmptyVec(), $t18);

    // $t69 := opaque begin: option::extract<0x1::string::String>($t68) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32

    // $t70 := read_ref($t68) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32
    $t70 := $Dereference($t68);

    // assume Identical($t71, option::spec_is_none<0x1::string::String>($t68)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32
    assume ($t71 == $1_option_spec_is_none'$1_string_String'($Dereference($t68)));

    // if ($t71) goto L26 else goto L33 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32
    if ($t71) { goto L26; } else { goto L33; }

    // label L26 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32
L26:

    // assume And(option::spec_is_none<0x1::string::String>($t68), Eq(262145, $t28)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32
    assume {:print "$at(234,9342,9374)"} true;
    assume ($1_option_spec_is_none'$1_string_String'($Dereference($t68)) && $IsEqual'num'(262145, $t28));

    // trace_abort($t28) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32
    assume {:print "$at(234,9342,9374)"} true;
    assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;

    // goto L20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32
    goto L20;

    // label L25 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32
L25:

    // $t68 := havoc[mut]() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32
    assume {:print "$at(234,9342,9374)"} true;
    havoc $temp_0'$1_option_Option'$1_string_String'';
    $t68 := $UpdateMutation($t68, $temp_0'$1_option_Option'$1_string_String'');

    // assume And(WellFormed($t68), Le(Len<0x1::string::String>(select option::Option.vec($t68)), 1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32
    assume ($IsValid'$1_option_Option'$1_string_String''($Dereference($t68)) && (LenVec($Dereference($t68)->$vec) <= 1));

    // assume WellFormed($t69) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32
    assume $IsValid'$1_string_String'($t69);

    // assume Eq<0x1::string::String>($t69, option::spec_borrow<0x1::string::String>($t70)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32
    assume $IsEqual'$1_string_String'($t69, $1_option_spec_borrow'$1_string_String'($t70));

    // assume option::spec_is_none<0x1::string::String>($t68) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32
    assume $1_option_spec_is_none'$1_string_String'($Dereference($t68));

    // $t69 := opaque end: option::extract<0x1::string::String>($t68) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32

    // pack_ref_deep($t68) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32

    // write_back[LocalRoot($t18)@]($t68) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32
    $t18 := $Dereference($t68);

    // trace_local[name_with_index_suffix]($t18) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:70+32
    assume {:print "$track_local(103,17,18):", $t18} $t18 == $t18;

    // $t72 := opaque begin: aggregator_v2::derive_string_concat<u64>($t3, $t65, $t69) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:13+90

    // assume Identical($t73, Or(And(Neq<vector<u8>>(select string::String.bytes<0x1::string::String>(type_info::$type_name<u64>()), [117, 54, 52]), Neq<vector<u8>>(select string::String.bytes<0x1::string::String>(type_info::$type_name<u64>()), [117, 49, 50, 56])), Gt(Add(Len<u8>(select string::String.bytes<0x1::string::String>($t3)), Len<u8>(select string::String.bytes<0x1::string::String>($t69))), 1024))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:13+90
    assume ($t73 == ((!$IsEqual'vec'u8''($1_string_String(Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3))->$bytes, MakeVec3(117, 54, 52)) && !$IsEqual'vec'u8''($1_string_String(Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3))->$bytes, MakeVec4(117, 49, 50, 56))) || ((LenVec($t3->$bytes) + LenVec($t69->$bytes)) > 1024)));

    // if ($t73) goto L28 else goto L27 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:13+90
    if ($t73) { goto L28; } else { goto L27; }

    // label L28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:13+90
L28:

    // trace_abort($t28) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:13+90
    assume {:print "$at(234,9285,9375)"} true;
    assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;

    // goto L20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:13+90
    goto L20;

    // label L27 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:13+90
L27:

    // assume WellFormed($t72) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:13+90
    assume {:print "$at(234,9285,9375)"} true;
    assume $IsValid'$1_aggregator_v2_DerivedStringSnapshot'($t72);

    // assume Eq<vector<u8>>(select string::String.bytes<0x1::string::String>(select aggregator_v2::DerivedStringSnapshot.value<0x1::aggregator_v2::DerivedStringSnapshot>($t72)), ConcatVec<u8>(select string::String.bytes<0x1::string::String>($t3), ConcatVec<u8>(select string::String.bytes<0x1::string::String>(aggregator_v2::spec_get_string_value<u64>($t65)), select string::String.bytes<0x1::string::String>($t69)))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:13+90
    assume $IsEqual'vec'u8''($t72->$value->$bytes, ConcatVec($t3->$bytes, ConcatVec($1_aggregator_v2_spec_get_string_value'u64'($t65)->$bytes, $t69->$bytes)));

    // $t72 := opaque end: aggregator_v2::derive_string_concat<u64>($t3, $t65, $t69) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:13+90

    // $t23 := $t72 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:13+90
    $t23 := $t72;

    // trace_local[name]($t72) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:231:13+90
    assume {:print "$track_local(103,17,23):", $t72} $t72 == $t72;

    // label L16 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:237:44+3
    assume {:print "$at(234,9544,9547)"} true;
L16:

    // $t74 := [] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:237:44+3
    assume {:print "$at(234,9544,9547)"} true;
    $t74 := $EmptyVec'u8'();
    assume $IsValid'vec'u8''($t74);

    // $t75 := string::utf8($t74) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:237:31+17
    call $t75 := $1_string_utf8($t74);
    if ($abort_flag) {
        assume {:print "$at(234,9531,9548)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // trace_local[$t90]($t75) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:237:31+17
    assume {:print "$track_local(103,17,24):", $t75} $t75 == $t75;

    // $t76 := pack 0x4::token::TokenIdentifiers($t65, $t23) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:239:32+65
    assume {:print "$at(234,9582,9647)"} true;
    $t76 := $4_token_TokenIdentifiers($t65, $t23);

    // trace_local[token_concurrent]($t76) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:239:32+65
    assume {:print "$track_local(103,17,25):", $t76} $t76 == $t76;

    // move_to<0x4::token::TokenIdentifiers>($t76, $t57) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:243:9+41
    assume {:print "$at(234,9657,9698)"} true;
    if ($ResourceExists($4_token_TokenIdentifiers_$memory, $t57->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_token_TokenIdentifiers_$memory := $ResourceUpdate($4_token_TokenIdentifiers_$memory, $t57->$addr, $t76);
    }
    if ($abort_flag) {
        assume {:print "$at(234,9657,9698)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // $t77 := 0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:247:20+16
    assume {:print "$at(234,9772,9788)"} true;
    $t77 := 0;
    assume $IsValid'u64'($t77);

    // assume Identical($t78, global<0x1::object::ObjectCore>(signer::$address_of($t57))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:371:9+65
    assume {:print "$at(186,15272,15337)"} true;
    assume ($t78 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t57)));

    // assume Identical($t79, pack guid::GUID(pack guid::ID(select object::ObjectCore.guid_creation_num<0x1::object::ObjectCore>($t78), signer::$address_of($t57)))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:374:9+185
    assume {:print "$at(186,15410,15595)"} true;
    assume ($t79 == $1_guid_GUID($1_guid_ID($t78->$guid_creation_num, $1_signer_$address_of($t57))));

    // $t80 := object::new_event_handle<0x4::token::MutationEvent>($t57) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:251:30+40
    assume {:print "$at(234,9896,9936)"} true;
    call $t80 := $1_object_new_event_handle'$4_token_MutationEvent'($t57);
    if ($abort_flag) {
        assume {:print "$at(234,9896,9936)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // $t81 := pack 0x4::token::Token($t35, $t77, $t2, $t75, $t5, $t80) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:245:21+226
    assume {:print "$at(234,9721,9947)"} true;
    $t81 := $4_token_Token($t35, $t77, $t2, $t75, $t5, $t80);

    // trace_local[token]($t81) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:245:21+226
    assume {:print "$track_local(103,17,26):", $t81} $t81 == $t81;

    // move_to<0x4::token::Token>($t81, $t57) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:253:9+30
    assume {:print "$at(234,9957,9987)"} true;
    if ($ResourceExists($4_token_Token_$memory, $t57->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_token_Token_$memory := $ResourceUpdate($4_token_Token_$memory, $t57->$addr, $t81);
    }
    if ($abort_flag) {
        assume {:print "$at(234,9957,9987)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // $t82 := copy($t19) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:255:13+17
    assume {:print "$at(234,10002,10019)"} true;
    $t82 := $t19;

    // $t83 := opaque begin: option::is_some<0x4::royalty::Royalty>($t82) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:255:13+17

    // assume WellFormed($t83) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:255:13+17
    assume $IsValid'bool'($t83);

    // assume Eq<bool>($t83, option::spec_is_some<0x4::royalty::Royalty>($t82)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:255:13+17
    assume $IsEqual'bool'($t83, $1_option_spec_is_some'$4_royalty_Royalty'($t82));

    // $t83 := opaque end: option::is_some<0x4::royalty::Royalty>($t82) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:255:13+17

    // if ($t83) goto L14 else goto L13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:255:9+96
    if ($t83) { goto L14; } else { goto L13; }

    // label L14 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:27+15
    assume {:print "$at(234,10049,10064)"} true;
L14:

    // $t84 := borrow_local($t19) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17
    assume {:print "$at(234,10066,10083)"} true;
    $t84 := $Mutation($Local(19), EmptyVec(), $t19);

    // $t85 := opaque begin: option::extract<0x4::royalty::Royalty>($t84) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17

    // $t86 := read_ref($t84) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17
    $t86 := $Dereference($t84);

    // assume Identical($t87, option::spec_is_none<0x4::royalty::Royalty>($t84)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17
    assume ($t87 == $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t84)));

    // if ($t87) goto L30 else goto L34 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17
    if ($t87) { goto L30; } else { goto L34; }

    // label L30 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17
L30:

    // assume And(option::spec_is_none<0x4::royalty::Royalty>($t84), Eq(262145, $t28)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17
    assume {:print "$at(234,10066,10083)"} true;
    assume ($1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t84)) && $IsEqual'num'(262145, $t28));

    // trace_abort($t28) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17
    assume {:print "$at(234,10066,10083)"} true;
    assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;

    // goto L20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17
    goto L20;

    // label L29 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17
L29:

    // $t84 := havoc[mut]() at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17
    assume {:print "$at(234,10066,10083)"} true;
    havoc $temp_0'$1_option_Option'$4_royalty_Royalty'';
    $t84 := $UpdateMutation($t84, $temp_0'$1_option_Option'$4_royalty_Royalty'');

    // assume And(WellFormed($t84), Le(Len<0x4::royalty::Royalty>(select option::Option.vec($t84)), 1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($Dereference($t84)) && (LenVec($Dereference($t84)->$vec) <= 1));

    // assume WellFormed($t85) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17
    assume $IsValid'$4_royalty_Royalty'($t85);

    // assume Eq<0x4::royalty::Royalty>($t85, option::spec_borrow<0x4::royalty::Royalty>($t86)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17
    assume $IsEqual'$4_royalty_Royalty'($t85, $1_option_spec_borrow'$4_royalty_Royalty'($t86));

    // assume option::spec_is_none<0x4::royalty::Royalty>($t84) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17
    assume $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t84));

    // $t85 := opaque end: option::extract<0x4::royalty::Royalty>($t84) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17

    // pack_ref_deep($t84) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17

    // write_back[LocalRoot($t19)@]($t84) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17
    $t19 := $Dereference($t84);

    // trace_local[royalty]($t19) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:44+17
    assume {:print "$track_local(103,17,19):", $t19} $t19 == $t19;

    // royalty::init($t31, $t85) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:256:13+49
    call $4_royalty_init($t31, $t85);
    if ($abort_flag) {
        assume {:print "$at(234,10035,10084)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // label L15 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:471:9+15
    assume {:print "$at(234,17230,17245)"} true;
L15:

    // trace_return[0]($t31) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:457:23+391
    assume {:print "$at(234,16860,17251)"} true;
    assume {:print "$track_return(103,17,0):", $t31} $t31 == $t31;

    // goto L19 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:457:23+391
    goto L19;

    // label L13 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:255:9+96
    assume {:print "$at(234,9998,10094)"} true;
L13:

    // goto L15 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:255:9+96
    assume {:print "$at(234,9998,10094)"} true;
    goto L15;

    // label L11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:233:13+49
    assume {:print "$at(234,9405,9454)"} true;
L11:

    // $t88 := opaque begin: aggregator_v2::create_derived_string($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:233:13+49
    assume {:print "$at(234,9405,9454)"} true;

    // assume Identical($t89, Gt(Len<u8>(select string::String.bytes<0x1::string::String>($t3)), 1024)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:233:13+49
    assume ($t89 == (LenVec($t3->$bytes) > 1024));

    // if ($t89) goto L32 else goto L31 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:233:13+49
    if ($t89) { goto L32; } else { goto L31; }

    // label L32 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:233:13+49
L32:

    // trace_abort($t28) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:233:13+49
    assume {:print "$at(234,9405,9454)"} true;
    assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;

    // goto L20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:233:13+49
    goto L20;

    // label L31 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:233:13+49
L31:

    // assume WellFormed($t88) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:233:13+49
    assume {:print "$at(234,9405,9454)"} true;
    assume $IsValid'$1_aggregator_v2_DerivedStringSnapshot'($t88);

    // assume Eq<0x1::string::String>(select aggregator_v2::DerivedStringSnapshot.value<0x1::aggregator_v2::DerivedStringSnapshot>($t88), $t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:233:13+49
    assume $IsEqual'$1_string_String'($t88->$value, $t3);

    // $t88 := opaque end: aggregator_v2::create_derived_string($t3) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:233:13+49

    // $t23 := $t88 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:233:13+49
    $t23 := $t88;

    // trace_local[name]($t88) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:233:13+49
    assume {:print "$track_local(103,17,23):", $t88} $t88 == $t88;

    // goto L16 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:233:13+49
    goto L16;

    // label L9 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:221:9+6
    assume {:print "$at(234,8812,8818)"} true;
L9:

    // $t90 := 5 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:221:69+13
    assume {:print "$at(234,8872,8885)"} true;
    $t90 := 5;
    assume $IsValid'u64'($t90);

    // $t91 := error::out_of_range($t90) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:221:49+34
    call $t91 := $1_error_out_of_range($t90);
    if ($abort_flag) {
        assume {:print "$at(234,8852,8886)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // trace_abort($t91) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:221:9+6
    assume {:print "$at(234,8812,8818)"} true;
    assume {:print "$track_abort(103,17):", $t91} $t91 == $t91;

    // $t28 := move($t91) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:221:9+6
    $t28 := $t91;

    // goto L20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:221:9+6
    goto L20;

    // label L7 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:220:9+6
    assume {:print "$at(234,8703,8709)"} true;
L7:

    // $t92 := 6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:220:85+21
    assume {:print "$at(234,8779,8800)"} true;
    $t92 := 6;
    assume $IsValid'u64'($t92);

    // $t93 := error::out_of_range($t92) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:220:65+42
    call $t93 := $1_error_out_of_range($t92);
    if ($abort_flag) {
        assume {:print "$at(234,8759,8801)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // trace_abort($t93) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:220:9+6
    assume {:print "$at(234,8703,8709)"} true;
    assume {:print "$track_abort(103,17):", $t93} $t93 == $t93;

    // $t28 := move($t93) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:220:9+6
    $t28 := $t93;

    // goto L20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:220:9+6
    goto L20;

    // label L4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:213:13+6
    assume {:print "$at(234,8363,8369)"} true;
L4:

    // $t94 := 4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:215:37+20
    assume {:print "$at(234,8519,8539)"} true;
    $t94 := 4;
    assume $IsValid'u64'($t94);

    // $t95 := error::out_of_range($t94) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:215:17+41
    call $t95 := $1_error_out_of_range($t94);
    if ($abort_flag) {
        assume {:print "$at(234,8499,8540)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // trace_abort($t95) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:213:13+6
    assume {:print "$at(234,8363,8369)"} true;
    assume {:print "$track_abort(103,17):", $t95} $t95 == $t95;

    // $t28 := move($t95) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:213:13+6
    $t28 := $t95;

    // goto L20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:213:13+6
    goto L20;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:218:21+20
    assume {:print "$at(234,8593,8613)"} true;
L2:

    // $t96 := string::length($t3) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:218:21+20
    assume {:print "$at(234,8593,8613)"} true;
    call $t96 := $1_string_length($t3);
    if ($abort_flag) {
        assume {:print "$at(234,8593,8613)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // $t97 := 128 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:218:45+21
    $t97 := 128;
    assume $IsValid'u64'($t97);

    // $t98 := <=($t96, $t97) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:218:21+45
    call $t98 := $Le($t96, $t97);

    // if ($t98) goto L18 else goto L17 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:218:13+6
    if ($t98) { goto L18; } else { goto L17; }

    // label L18 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:218:13+6
L18:

    // goto L6 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:218:13+6
    assume {:print "$at(234,8585,8591)"} true;
    goto L6;

    // label L17 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:218:13+6
L17:

    // $t99 := 4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:218:88+20
    assume {:print "$at(234,8660,8680)"} true;
    $t99 := 4;
    assume $IsValid'u64'($t99);

    // $t100 := error::out_of_range($t99) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:218:68+41
    call $t100 := $1_error_out_of_range($t99);
    if ($abort_flag) {
        assume {:print "$at(234,8640,8681)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // trace_abort($t100) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:218:13+6
    assume {:print "$at(234,8585,8591)"} true;
    assume {:print "$track_abort(103,17):", $t100} $t100 == $t100;

    // $t28 := move($t100) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:218:13+6
    $t28 := $t100;

    // goto L20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:218:13+6
    goto L20;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:161:9+6
    assume {:print "$at(234,6400,6406)"} true;
L0:

    // $t101 := 2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:161:104+12
    assume {:print "$at(234,6495,6507)"} true;
    $t101 := 2;
    assume $IsValid'u64'($t101);

    // $t102 := error::unauthenticated($t101) on_abort goto L20 with $t28 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:161:81+36
    call $t102 := $1_error_unauthenticated($t101);
    if ($abort_flag) {
        assume {:print "$at(234,6472,6508)"} true;
        $t28 := $abort_code;
        assume {:print "$track_abort(103,17):", $t28} $t28 == $t28;
        goto L20;
    }

    // trace_abort($t102) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:161:9+6
    assume {:print "$at(234,6400,6406)"} true;
    assume {:print "$track_abort(103,17):", $t102} $t102 == $t102;

    // $t28 := move($t102) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:161:9+6
    $t28 := $t102;

    // goto L20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:161:9+6
    goto L20;

    // label L19 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:472:5+1
    assume {:print "$at(234,17250,17251)"} true;
L19:

    // return $t31 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:472:5+1
    assume {:print "$at(234,17250,17251)"} true;
    $ret0 := $t31;
    return;

    // label L20 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:472:5+1
L20:

    // abort($t28) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:472:5+1
    assume {:print "$at(234,17250,17251)"} true;
    $abort_code := $t28;
    $abort_flag := true;
    return;

    // label L33 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L33:

    // drop($t68) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L25 at <internal>:1:1+10
    goto L25;

    // label L34 at <internal>:1:1+10
L34:

    // drop($t84) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L29 at <internal>:1:1+10
    goto L29;

}

// fun token::create_token_seed [baseline] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:581:5+301
procedure {:inline 1} $4_token_create_token_seed(_$t0: $1_string_String, _$t1: $1_string_String) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t2: Vec (int);
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: $Mutation (Vec (int));
    var $t8: Vec (int);
    var $t9: $Mutation (Vec (int));
    var $t10: Vec (int);
    var $t11: Vec (int);
    var $t12: int;
    var $t13: int;
    var $t0: $1_string_String;
    var $t1: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[collection]($t0) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:581:5+1
    assume {:print "$at(234,21285,21286)"} true;
    assume {:print "$track_local(103,30,0):", $t0} $t0 == $t0;

    // trace_local[name]($t1) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:581:5+1
    assume {:print "$track_local(103,30,1):", $t1} $t1 == $t1;

    // $t3 := string::length($t1) on_abort goto L3 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:582:17+13
    assume {:print "$at(234,21380,21393)"} true;
    call $t3 := $1_string_length($t1);
    if ($abort_flag) {
        assume {:print "$at(234,21380,21393)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(103,30):", $t4} $t4 == $t4;
        goto L3;
    }

    // $t5 := 128 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:582:34+21
    $t5 := 128;
    assume $IsValid'u64'($t5);

    // $t6 := <=($t3, $t5) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:582:17+38
    call $t6 := $Le($t3, $t5);

    // if ($t6) goto L1 else goto L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:582:9+6
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:583:21+18
    assume {:print "$at(234,21484,21502)"} true;
L1:

    // $t2 := string::bytes($t0) on_abort goto L3 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:583:21+18
    assume {:print "$at(234,21484,21502)"} true;
    call $t2 := $1_string_bytes($t0);
    if ($abort_flag) {
        assume {:print "$at(234,21484,21502)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(103,30):", $t4} $t4 == $t4;
        goto L3;
    }

    // trace_local[seed]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:583:20+19
    assume {:print "$track_local(103,30,2):", $t2} $t2 == $t2;

    // $t7 := borrow_local($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:584:9+18
    assume {:print "$at(234,21512,21530)"} true;
    $t7 := $Mutation($Local(2), EmptyVec(), $t2);

    // $t8 := [58, 58] at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:584:21+5
    $t8 := MakeVec2(58, 58);
    assume $IsValid'vec'u8''($t8);

    // vector::append<u8>($t7, $t8) on_abort goto L3 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:584:9+18
    call $t7 := $1_vector_append'u8'($t7, $t8);
    if ($abort_flag) {
        assume {:print "$at(234,21512,21530)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(103,30):", $t4} $t4 == $t4;
        goto L3;
    }

    // write_back[LocalRoot($t2)@]($t7) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:584:9+18
    $t2 := $Dereference($t7);

    // trace_local[seed]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:584:9+18
    assume {:print "$track_local(103,30,2):", $t2} $t2 == $t2;

    // $t9 := borrow_local($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:585:9+26
    assume {:print "$at(234,21540,21566)"} true;
    $t9 := $Mutation($Local(2), EmptyVec(), $t2);

    // $t10 := string::bytes($t1) on_abort goto L3 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:585:22+12
    call $t10 := $1_string_bytes($t1);
    if ($abort_flag) {
        assume {:print "$at(234,21553,21565)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(103,30):", $t4} $t4 == $t4;
        goto L3;
    }

    // vector::append<u8>($t9, $t10) on_abort goto L3 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:585:9+26
    call $t9 := $1_vector_append'u8'($t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(234,21540,21566)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(103,30):", $t4} $t4 == $t4;
        goto L3;
    }

    // write_back[LocalRoot($t2)@]($t9) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:585:9+26
    $t2 := $Dereference($t9);

    // trace_local[seed]($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:585:9+26
    assume {:print "$track_local(103,30,2):", $t2} $t2 == $t2;

    // $t11 := move($t2) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:586:9+4
    assume {:print "$at(234,21576,21580)"} true;
    $t11 := $t2;

    // trace_return[0]($t11) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:581:82+224
    assume {:print "$at(234,21362,21586)"} true;
    assume {:print "$track_return(103,30,0):", $t11} $t11 == $t11;

    // goto L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:581:82+224
    goto L2;

    // label L0 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:582:9+6
    assume {:print "$at(234,21372,21378)"} true;
L0:

    // $t12 := 4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:582:77+20
    assume {:print "$at(234,21440,21460)"} true;
    $t12 := 4;
    assume $IsValid'u64'($t12);

    // $t13 := error::out_of_range($t12) on_abort goto L3 with $t4 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:582:57+41
    call $t13 := $1_error_out_of_range($t12);
    if ($abort_flag) {
        assume {:print "$at(234,21420,21461)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(103,30):", $t4} $t4 == $t4;
        goto L3;
    }

    // trace_abort($t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:582:9+6
    assume {:print "$at(234,21372,21378)"} true;
    assume {:print "$track_abort(103,30):", $t13} $t13 == $t13;

    // $t4 := move($t13) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:582:9+6
    $t4 := $t13;

    // goto L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:582:9+6
    goto L3;

    // label L2 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:587:5+1
    assume {:print "$at(234,21585,21586)"} true;
L2:

    // return $t11 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:587:5+1
    assume {:print "$at(234,21585,21586)"} true;
    $ret0 := $t11;
    return;

    // label L3 at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:587:5+1
L3:

    // abort($t4) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-token-objects/sources/token.move:587:5+1
    assume {:print "$at(234,21585,21586)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// struct retro_nft_generator_da::NFTCollection at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:79:5+237
datatype $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection($collection: $1_object_Object'$4_collection_Collection', $total_minted: int, $creator: int, $resource_cap: $1_account_SignerCapability)
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'_collection(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection, x: $1_object_Object'$4_collection_Collection'): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection(x, s->$total_minted, s->$creator, s->$resource_cap)
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'_total_minted(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection, x: int): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection(s->$collection, x, s->$creator, s->$resource_cap)
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'_creator(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection, x: int): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection(s->$collection, s->$total_minted, x, s->$resource_cap)
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'_resource_cap(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection, x: $1_account_SignerCapability): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection(s->$collection, s->$total_minted, s->$creator, x)
}
function $IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection): bool {
    $IsValid'$1_object_Object'$4_collection_Collection''(s->$collection)
      && $IsValid'u64'(s->$total_minted)
      && $IsValid'address'(s->$creator)
      && $IsValid'$1_account_SignerCapability'(s->$resource_cap)
}
function {:inline} $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'(s1: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection, s2: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection): bool {
    s1 == s2
}
var $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory: $Memory $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection;

// struct retro_nft_generator_da::NFTMetadata at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:87:5+169
datatype $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata($background_color: $1_string_String, $shape: $1_string_String, $word_combination: $1_string_String, $token_id: int)
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'_background_color(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata, x: $1_string_String): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata(x, s->$shape, s->$word_combination, s->$token_id)
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'_shape(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata, x: $1_string_String): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata(s->$background_color, x, s->$word_combination, s->$token_id)
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'_word_combination(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata, x: $1_string_String): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata(s->$background_color, s->$shape, x, s->$token_id)
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'_token_id(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata, x: int): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata(s->$background_color, s->$shape, s->$word_combination, x)
}
function $IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata): bool {
    $IsValid'$1_string_String'(s->$background_color)
      && $IsValid'$1_string_String'(s->$shape)
      && $IsValid'$1_string_String'(s->$word_combination)
      && $IsValid'u64'(s->$token_id)
}
function {:inline} $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'(s1: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata, s2: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata): bool {
    $IsEqual'$1_string_String'(s1->$background_color, s2->$background_color)
    && $IsEqual'$1_string_String'(s1->$shape, s2->$shape)
    && $IsEqual'$1_string_String'(s1->$word_combination, s2->$word_combination)
    && $IsEqual'u64'(s1->$token_id, s2->$token_id)}

// struct retro_nft_generator_da::NFTMintedEvent at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:110:5+132
datatype $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent($token_address: int, $owner: int, $metadata: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata)
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent'_token_address(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent, x: int): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent(x, s->$owner, s->$metadata)
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent'_owner(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent, x: int): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent(s->$token_address, x, s->$metadata)
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent'_metadata(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent, x: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent(s->$token_address, s->$owner, x)
}
function $IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent'(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent): bool {
    $IsValid'address'(s->$token_address)
      && $IsValid'address'(s->$owner)
      && $IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'(s->$metadata)
}
function {:inline} $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent'(s1: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent, s2: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent): bool {
    $IsEqual'address'(s1->$token_address, s2->$token_address)
    && $IsEqual'address'(s1->$owner, s2->$owner)
    && $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'(s1->$metadata, s2->$metadata)}

// struct retro_nft_generator_da::TokenData at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:100:5+186
datatype $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData($collection_address: int, $name: $1_string_String, $description: $1_string_String, $uri: $1_string_String, $metadata: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata)
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'_collection_address(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData, x: int): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData(x, s->$name, s->$description, s->$uri, s->$metadata)
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'_name(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData, x: $1_string_String): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData(s->$collection_address, x, s->$description, s->$uri, s->$metadata)
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'_description(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData, x: $1_string_String): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData(s->$collection_address, s->$name, x, s->$uri, s->$metadata)
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'_uri(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData, x: $1_string_String): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData(s->$collection_address, s->$name, s->$description, x, s->$metadata)
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'_metadata(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData, x: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData(s->$collection_address, s->$name, s->$description, s->$uri, x)
}
function $IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData): bool {
    $IsValid'address'(s->$collection_address)
      && $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$description)
      && $IsValid'$1_string_String'(s->$uri)
      && $IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'(s->$metadata)
}
function {:inline} $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'(s1: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData, s2: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData): bool {
    $IsEqual'address'(s1->$collection_address, s2->$collection_address)
    && $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$description, s2->$description)
    && $IsEqual'$1_string_String'(s1->$uri, s2->$uri)
    && $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'(s1->$metadata, s2->$metadata)}

// struct retro_nft_generator_da::UserNFTs at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:95:5+64
datatype $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs($nfts: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData))
}
function {:inline} $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'_nfts(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs, x: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData)): $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs {
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs(x)
}
function $IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'(s: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs): bool {
    $IsValid'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''(s->$nfts)
}
function {:inline} $IsEqual'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'(s1: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs, s2: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs): bool {
    $IsEqual'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''(s1->$nfts, s2->$nfts)}
var $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory: $Memory $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs;

// fun retro_nft_generator_da::to_string [baseline] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:644:5+555
procedure {:inline 1} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_to_string(_$t0: int) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: Vec (int);
    var $t6: $1_string_String;
    var $t7: int;
    var $t8: $1_string_String;
    var $t9: int;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: $Mutation (Vec (int));
    var $t19: $Mutation (Vec (int));
    var $t20: Vec (int);
    var $t21: $1_string_String;
    var $t0: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    var $temp_0'u8': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[value]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:644:5+1
    assume {:print "$at(2,28269,28270)"} true;
    assume {:print "$track_local(104,0,0):", $t0} $t0 == $t0;

    // $t3 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:645:22+1
    assume {:print "$at(2,28326,28327)"} true;
    $t3 := 0;
    assume $IsValid'u64'($t3);

    // $t4 := ==($t0, $t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:645:13+10
    $t4 := $IsEqual'u64'($t0, $t3);

    // if ($t4) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:645:9+65
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:646:33+4
    assume {:print "$at(2,28363,28367)"} true;
L1:

    // $t5 := [48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:646:33+4
    assume {:print "$at(2,28363,28367)"} true;
    $t5 := MakeVec1(48);
    assume $IsValid'vec'u8''($t5);

    // $t6 := string::utf8($t5) on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:646:20+18
    call $t6 := $1_string_utf8($t5);
    if ($abort_flag) {
        assume {:print "$at(2,28350,28368)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_return[0]($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:646:13+25
    assume {:print "$track_return(104,0,0):", $t6} $t6 == $t6;

    // $t8 := move($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:646:13+25
    $t8 := $t6;

    // goto L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:646:13+25
    goto L6;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:649:22+19
    assume {:print "$at(2,28410,28429)"} true;
L0:

    // $t1 := vector::empty<u8>() on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:649:22+19
    assume {:print "$at(2,28410,28429)"} true;
    call $t1 := $1_vector_empty'u8'();
    if ($abort_flag) {
        assume {:print "$at(2,28410,28429)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_local[buffer]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:649:22+19
    assume {:print "$track_local(104,0,1):", $t1} $t1 == $t1;

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume {:print "$at(2,28487,28497)"} true;
L4:

    // $t0 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume {:print "$at(2,28487,28497)"} true;
    havoc $t0;

    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u64'($t0);

    // $t1 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t1;

    // assume WellFormed($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'vec'u8''($t1);

    // $t9 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t9;

    // assume WellFormed($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u64'($t9);

    // $t10 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t10;

    // assume WellFormed($t10) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'bool'($t10);

    // $t11 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t11;

    // assume WellFormed($t11) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u64'($t11);

    // $t12 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t12;

    // assume WellFormed($t12) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u64'($t12);

    // $t13 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t13;

    // assume WellFormed($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u8'($t13);

    // $t14 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t14;

    // assume WellFormed($t14) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u8'($t14);

    // $t15 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t15;

    // assume WellFormed($t15) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u8'($t15);

    // $t16 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t16;

    // assume WellFormed($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u64'($t16);

    // $t17 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t17;

    // assume WellFormed($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u64'($t17);

    // $t18 := havoc[mut_all]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t18;

    // assume WellFormed($t18) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'vec'u8''($Dereference($t18));

    // trace_local[value]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume {:print "$info(): enter loop, variable(s) value, buffer havocked and reassigned"} true;
    assume {:print "$track_local(104,0,0):", $t0} $t0 == $t0;

    // trace_local[buffer]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume {:print "$track_local(104,0,1):", $t1} $t1 == $t1;

    // assume Not(AbortFlag()) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume !$abort_flag;

    // $t9 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:29+1
    $t9 := 0;
    assume $IsValid'u64'($t9);

    // $t10 := >($t0, $t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+14
    call $t10 := $Gt($t0, $t9);

    // if ($t10) goto L3 else goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:9+203
    if ($t10) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:653:27+10
    assume {:print "$at(2,28531,28541)"} true;
L3:

    // $t11 := 10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:653:40+2
    assume {:print "$at(2,28544,28546)"} true;
    $t11 := 10;
    assume $IsValid'u64'($t11);

    // $t12 := %($t0, $t11) on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:653:26+17
    call $t12 := $Mod($t0, $t11);
    if ($abort_flag) {
        assume {:print "$at(2,28530,28547)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // $t13 := (u8)($t12) on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:653:25+25
    call $t13 := $CastU8($t12);
    if ($abort_flag) {
        assume {:print "$at(2,28529,28554)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // $t14 := 48 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:653:53+2
    $t14 := 48;
    assume $IsValid'u8'($t14);

    // $t15 := +($t13, $t14) on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:653:25+30
    call $t15 := $AddU8($t13, $t14);
    if ($abort_flag) {
        assume {:print "$at(2,28529,28559)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_local[$t12]($t15) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:653:25+30
    assume {:print "$track_local(104,0,2):", $t15} $t15 == $t15;

    // $t18 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:654:31+11
    assume {:print "$at(2,28611,28622)"} true;
    $t18 := $Mutation($Local(1), EmptyVec(), $t1);

    // vector::push_back<u8>($t18, $t15) on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:654:13+37
    call $t18 := $1_vector_push_back'u8'($t18, $t15);
    if ($abort_flag) {
        assume {:print "$at(2,28593,28630)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // write_back[LocalRoot($t1)@]($t18) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:654:13+37
    $t1 := $Dereference($t18);

    // trace_local[buffer]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:654:13+37
    assume {:print "$track_local(104,0,1):", $t1} $t1 == $t1;

    // $t16 := 10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:655:39+2
    assume {:print "$at(2,28670,28672)"} true;
    $t16 := 10;
    assume $IsValid'u64'($t16);

    // $t17 := /($t0, $t16) on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:655:26+15
    call $t17 := $Div($t0, $t16);
    if ($abort_flag) {
        assume {:print "$at(2,28657,28672)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_local[value]($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:655:13+28
    assume {:print "$track_local(104,0,0):", $t17} $t17 == $t17;

    // goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:9+203
    assume {:print "$at(2,28480,28683)"} true;
    goto L5;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:659:25+11
    assume {:print "$at(2,28776,28787)"} true;
L2:

    // $t19 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:659:25+11
    assume {:print "$at(2,28776,28787)"} true;
    $t19 := $Mutation($Local(1), EmptyVec(), $t1);

    // vector::reverse<u8>($t19) on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:659:9+28
    call $t19 := $1_vector_reverse'u8'($t19);
    if ($abort_flag) {
        assume {:print "$at(2,28760,28788)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // write_back[LocalRoot($t1)@]($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:659:9+28
    $t1 := $Dereference($t19);

    // trace_local[buffer]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:659:9+28
    assume {:print "$track_local(104,0,1):", $t1} $t1 == $t1;

    // $t20 := move($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:660:9+20
    assume {:print "$at(2,28798,28818)"} true;
    $t20 := $t1;

    // $t21 := string::utf8($t20) on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:660:9+20
    call $t21 := $1_string_utf8($t20);
    if ($abort_flag) {
        assume {:print "$at(2,28798,28818)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_return[0]($t21) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:644:39+521
    assume {:print "$at(2,28303,28824)"} true;
    assume {:print "$track_return(104,0,0):", $t21} $t21 == $t21;

    // $t8 := move($t21) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:644:39+521
    $t8 := $t21;

    // goto L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:644:39+521
    goto L6;

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:659:25+11
    // Loop invariant checking block for the loop started with header: L4
    assume {:print "$at(2,28776,28787)"} true;
L5:

    // stop() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:659:25+11
    assume {:print "$at(2,28776,28787)"} true;
    assume false;
    return;

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:661:5+1
    assume {:print "$at(2,28823,28824)"} true;
L6:

    // return $t8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:661:5+1
    assume {:print "$at(2,28823,28824)"} true;
    $ret0 := $t8;
    return;

    // label L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:661:5+1
L7:

    // abort($t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:661:5+1
    assume {:print "$at(2,28823,28824)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::to_string [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:644:5+555
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_to_string$verify(_$t0: int) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: Vec (int);
    var $t6: $1_string_String;
    var $t7: int;
    var $t8: $1_string_String;
    var $t9: int;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: $Mutation (Vec (int));
    var $t19: $Mutation (Vec (int));
    var $t20: Vec (int);
    var $t21: $1_string_String;
    var $t0: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    var $temp_0'u8': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:644:5+1
    assume {:print "$at(2,28269,28270)"} true;
    assume $IsValid'u64'($t0);

    // trace_local[value]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:644:5+1
    assume {:print "$track_local(104,0,0):", $t0} $t0 == $t0;

    // $t3 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:645:22+1
    assume {:print "$at(2,28326,28327)"} true;
    $t3 := 0;
    assume $IsValid'u64'($t3);

    // $t4 := ==($t0, $t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:645:13+10
    $t4 := $IsEqual'u64'($t0, $t3);

    // if ($t4) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:645:9+65
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:646:33+4
    assume {:print "$at(2,28363,28367)"} true;
L1:

    // $t5 := [48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:646:33+4
    assume {:print "$at(2,28363,28367)"} true;
    $t5 := MakeVec1(48);
    assume $IsValid'vec'u8''($t5);

    // $t6 := string::utf8($t5) on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:646:20+18
    call $t6 := $1_string_utf8($t5);
    if ($abort_flag) {
        assume {:print "$at(2,28350,28368)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_return[0]($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:646:13+25
    assume {:print "$track_return(104,0,0):", $t6} $t6 == $t6;

    // $t8 := move($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:646:13+25
    $t8 := $t6;

    // goto L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:646:13+25
    goto L6;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:649:22+19
    assume {:print "$at(2,28410,28429)"} true;
L0:

    // $t1 := vector::empty<u8>() on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:649:22+19
    assume {:print "$at(2,28410,28429)"} true;
    call $t1 := $1_vector_empty'u8'();
    if ($abort_flag) {
        assume {:print "$at(2,28410,28429)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_local[buffer]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:649:22+19
    assume {:print "$track_local(104,0,1):", $t1} $t1 == $t1;

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume {:print "$at(2,28487,28497)"} true;
L4:

    // $t0 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume {:print "$at(2,28487,28497)"} true;
    havoc $t0;

    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u64'($t0);

    // $t1 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t1;

    // assume WellFormed($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'vec'u8''($t1);

    // $t9 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t9;

    // assume WellFormed($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u64'($t9);

    // $t10 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t10;

    // assume WellFormed($t10) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'bool'($t10);

    // $t11 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t11;

    // assume WellFormed($t11) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u64'($t11);

    // $t12 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t12;

    // assume WellFormed($t12) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u64'($t12);

    // $t13 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t13;

    // assume WellFormed($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u8'($t13);

    // $t14 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t14;

    // assume WellFormed($t14) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u8'($t14);

    // $t15 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t15;

    // assume WellFormed($t15) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u8'($t15);

    // $t16 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t16;

    // assume WellFormed($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u64'($t16);

    // $t17 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t17;

    // assume WellFormed($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'u64'($t17);

    // $t18 := havoc[mut_all]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    havoc $t18;

    // assume WellFormed($t18) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume $IsValid'vec'u8''($Dereference($t18));

    // trace_local[value]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume {:print "$info(): enter loop, variable(s) value, buffer havocked and reassigned"} true;
    assume {:print "$track_local(104,0,0):", $t0} $t0 == $t0;

    // trace_local[buffer]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume {:print "$track_local(104,0,1):", $t1} $t1 == $t1;

    // assume Not(AbortFlag()) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+10
    assume !$abort_flag;

    // $t9 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:29+1
    $t9 := 0;
    assume $IsValid'u64'($t9);

    // $t10 := >($t0, $t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:16+14
    call $t10 := $Gt($t0, $t9);

    // if ($t10) goto L3 else goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:9+203
    if ($t10) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:653:27+10
    assume {:print "$at(2,28531,28541)"} true;
L3:

    // $t11 := 10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:653:40+2
    assume {:print "$at(2,28544,28546)"} true;
    $t11 := 10;
    assume $IsValid'u64'($t11);

    // $t12 := %($t0, $t11) on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:653:26+17
    call $t12 := $Mod($t0, $t11);
    if ($abort_flag) {
        assume {:print "$at(2,28530,28547)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // $t13 := (u8)($t12) on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:653:25+25
    call $t13 := $CastU8($t12);
    if ($abort_flag) {
        assume {:print "$at(2,28529,28554)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // $t14 := 48 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:653:53+2
    $t14 := 48;
    assume $IsValid'u8'($t14);

    // $t15 := +($t13, $t14) on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:653:25+30
    call $t15 := $AddU8($t13, $t14);
    if ($abort_flag) {
        assume {:print "$at(2,28529,28559)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_local[$t12]($t15) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:653:25+30
    assume {:print "$track_local(104,0,2):", $t15} $t15 == $t15;

    // $t18 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:654:31+11
    assume {:print "$at(2,28611,28622)"} true;
    $t18 := $Mutation($Local(1), EmptyVec(), $t1);

    // vector::push_back<u8>($t18, $t15) on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:654:13+37
    call $t18 := $1_vector_push_back'u8'($t18, $t15);
    if ($abort_flag) {
        assume {:print "$at(2,28593,28630)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // write_back[LocalRoot($t1)@]($t18) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:654:13+37
    $t1 := $Dereference($t18);

    // trace_local[buffer]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:654:13+37
    assume {:print "$track_local(104,0,1):", $t1} $t1 == $t1;

    // $t16 := 10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:655:39+2
    assume {:print "$at(2,28670,28672)"} true;
    $t16 := 10;
    assume $IsValid'u64'($t16);

    // $t17 := /($t0, $t16) on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:655:26+15
    call $t17 := $Div($t0, $t16);
    if ($abort_flag) {
        assume {:print "$at(2,28657,28672)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_local[value]($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:655:13+28
    assume {:print "$track_local(104,0,0):", $t17} $t17 == $t17;

    // goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:652:9+203
    assume {:print "$at(2,28480,28683)"} true;
    goto L5;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:659:25+11
    assume {:print "$at(2,28776,28787)"} true;
L2:

    // $t19 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:659:25+11
    assume {:print "$at(2,28776,28787)"} true;
    $t19 := $Mutation($Local(1), EmptyVec(), $t1);

    // vector::reverse<u8>($t19) on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:659:9+28
    call $t19 := $1_vector_reverse'u8'($t19);
    if ($abort_flag) {
        assume {:print "$at(2,28760,28788)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // write_back[LocalRoot($t1)@]($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:659:9+28
    $t1 := $Dereference($t19);

    // trace_local[buffer]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:659:9+28
    assume {:print "$track_local(104,0,1):", $t1} $t1 == $t1;

    // $t20 := move($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:660:9+20
    assume {:print "$at(2,28798,28818)"} true;
    $t20 := $t1;

    // $t21 := string::utf8($t20) on_abort goto L7 with $t7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:660:9+20
    call $t21 := $1_string_utf8($t20);
    if ($abort_flag) {
        assume {:print "$at(2,28798,28818)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(104,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_return[0]($t21) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:644:39+521
    assume {:print "$at(2,28303,28824)"} true;
    assume {:print "$track_return(104,0,0):", $t21} $t21 == $t21;

    // $t8 := move($t21) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:644:39+521
    $t8 := $t21;

    // goto L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:644:39+521
    goto L6;

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:659:25+11
    // Loop invariant checking block for the loop started with header: L4
    assume {:print "$at(2,28776,28787)"} true;
L5:

    // stop() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:659:25+11
    assume {:print "$at(2,28776,28787)"} true;
    assume false;
    return;

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:661:5+1
    assume {:print "$at(2,28823,28824)"} true;
L6:

    // return $t8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:661:5+1
    assume {:print "$at(2,28823,28824)"} true;
    $ret0 := $t8;
    return;

    // label L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:661:5+1
L7:

    // abort($t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:661:5+1
    assume {:print "$at(2,28823,28824)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::create_token_uri [baseline] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:633:5+380
procedure {:inline 1} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_create_token_uri(_$t0: $1_string_String, _$t1: $1_string_String, _$t2: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t3: $1_string_String;
    var $t4: Vec (int);
    var $t5: int;
    var $t6: int;
    var $t7: $1_string_String;
    var $t8: $Mutation ($1_string_String);
    var $t9: $1_string_String;
    var $t0: $1_string_String;
    var $t1: $1_string_String;
    var $t2: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[_name]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:633:5+1
    assume {:print "$at(2,27835,27836)"} true;
    assume {:print "$track_local(104,1,0):", $t0} $t0 == $t0;

    // trace_local[_description]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:633:5+1
    assume {:print "$track_local(104,1,1):", $t1} $t1 == $t1;

    // trace_local[metadata]($t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:633:5+1
    assume {:print "$track_local(104,1,2):", $t2} $t2 == $t2;

    // $t4 := [104, 116, 116, 112, 115, 58, 47, 47, 119, 119, 119, 46, 97, 112, 116, 111, 115, 110, 102, 116, 46, 99, 111, 109, 47, 97, 112, 105, 47, 110, 102, 116, 47, 109, 101, 116, 97, 100, 97, 116, 97, 63, 105, 100, 61] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:634:38+48
    assume {:print "$at(2,27963,28011)"} true;
    $t4 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(104, 116, 116, 112), MakeVec4(115, 58, 47, 47)), MakeVec4(119, 119, 119, 46)), MakeVec4(97, 112, 116, 111)), MakeVec4(115, 110, 102, 116)), MakeVec4(46, 99, 111, 109)), MakeVec4(47, 97, 112, 105)), MakeVec4(47, 110, 102, 116)), MakeVec4(47, 109, 101, 116)), MakeVec4(97, 100, 97, 116)), MakeVec4(97, 63, 105, 100)), MakeVec1(61));
    assume $IsValid'vec'u8''($t4);

    // $t3 := string::utf8($t4) on_abort goto L2 with $t5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:634:25+62
    call $t3 := $1_string_utf8($t4);
    if ($abort_flag) {
        assume {:print "$at(2,27950,28012)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(104,1):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[token_uri]($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:634:25+62
    assume {:print "$track_local(104,1,3):", $t3} $t3 == $t3;

    // $t6 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>.token_id($t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:637:38+17
    assume {:print "$at(2,28109,28126)"} true;
    $t6 := $t2->$token_id;

    // $t7 := retro_nft_generator_da::to_string($t6) on_abort goto L2 with $t5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:637:28+28
    call $t7 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_to_string($t6);
    if ($abort_flag) {
        assume {:print "$at(2,28099,28127)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(104,1):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[_name]($t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:637:28+28
    assume {:print "$track_local(104,1,0):", $t7} $t7 == $t7;

    // $t8 := borrow_local($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:638:24+14
    assume {:print "$at(2,28152,28166)"} true;
    $t8 := $Mutation($Local(3), EmptyVec(), $t3);

    // string::append($t8, $t7) on_abort goto L2 with $t5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:638:9+44
    call $t8 := $1_string_append($t8, $t7);
    if ($abort_flag) {
        assume {:print "$at(2,28137,28181)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(104,1):", $t5} $t5 == $t5;
        goto L2;
    }

    // write_back[LocalRoot($t3)@]($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:638:9+44
    $t3 := $Dereference($t8);

    // trace_local[token_uri]($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:638:9+44
    assume {:print "$track_local(104,1,3):", $t3} $t3 == $t3;

    // $t9 := move($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:640:9+9
    assume {:print "$at(2,28200,28209)"} true;
    $t9 := $t3;

    // trace_return[0]($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:633:94+291
    assume {:print "$at(2,27924,28215)"} true;
    assume {:print "$track_return(104,1,0):", $t9} $t9 == $t9;

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:641:5+1
    assume {:print "$at(2,28214,28215)"} true;
L1:

    // return $t9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:641:5+1
    assume {:print "$at(2,28214,28215)"} true;
    $ret0 := $t9;
    return;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:641:5+1
L2:

    // abort($t5) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:641:5+1
    assume {:print "$at(2,28214,28215)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::create_token_uri [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:633:5+380
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_create_token_uri$verify(_$t0: $1_string_String, _$t1: $1_string_String, _$t2: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t3: $1_string_String;
    var $t4: Vec (int);
    var $t5: int;
    var $t6: int;
    var $t7: $1_string_String;
    var $t8: $Mutation ($1_string_String);
    var $t9: $1_string_String;
    var $t0: $1_string_String;
    var $t1: $1_string_String;
    var $t2: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:633:5+1
    assume {:print "$at(2,27835,27836)"} true;
    assume $IsValid'$1_string_String'($t0);

    // assume WellFormed($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:633:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume WellFormed($t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:633:5+1
    assume $IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'($t2);

    // trace_local[_name]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:633:5+1
    assume {:print "$track_local(104,1,0):", $t0} $t0 == $t0;

    // trace_local[_description]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:633:5+1
    assume {:print "$track_local(104,1,1):", $t1} $t1 == $t1;

    // trace_local[metadata]($t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:633:5+1
    assume {:print "$track_local(104,1,2):", $t2} $t2 == $t2;

    // $t4 := [104, 116, 116, 112, 115, 58, 47, 47, 119, 119, 119, 46, 97, 112, 116, 111, 115, 110, 102, 116, 46, 99, 111, 109, 47, 97, 112, 105, 47, 110, 102, 116, 47, 109, 101, 116, 97, 100, 97, 116, 97, 63, 105, 100, 61] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:634:38+48
    assume {:print "$at(2,27963,28011)"} true;
    $t4 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(104, 116, 116, 112), MakeVec4(115, 58, 47, 47)), MakeVec4(119, 119, 119, 46)), MakeVec4(97, 112, 116, 111)), MakeVec4(115, 110, 102, 116)), MakeVec4(46, 99, 111, 109)), MakeVec4(47, 97, 112, 105)), MakeVec4(47, 110, 102, 116)), MakeVec4(47, 109, 101, 116)), MakeVec4(97, 100, 97, 116)), MakeVec4(97, 63, 105, 100)), MakeVec1(61));
    assume $IsValid'vec'u8''($t4);

    // $t3 := string::utf8($t4) on_abort goto L2 with $t5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:634:25+62
    call $t3 := $1_string_utf8($t4);
    if ($abort_flag) {
        assume {:print "$at(2,27950,28012)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(104,1):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[token_uri]($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:634:25+62
    assume {:print "$track_local(104,1,3):", $t3} $t3 == $t3;

    // $t6 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>.token_id($t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:637:38+17
    assume {:print "$at(2,28109,28126)"} true;
    $t6 := $t2->$token_id;

    // $t7 := retro_nft_generator_da::to_string($t6) on_abort goto L2 with $t5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:637:28+28
    call $t7 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_to_string($t6);
    if ($abort_flag) {
        assume {:print "$at(2,28099,28127)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(104,1):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[_name]($t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:637:28+28
    assume {:print "$track_local(104,1,0):", $t7} $t7 == $t7;

    // $t8 := borrow_local($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:638:24+14
    assume {:print "$at(2,28152,28166)"} true;
    $t8 := $Mutation($Local(3), EmptyVec(), $t3);

    // string::append($t8, $t7) on_abort goto L2 with $t5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:638:9+44
    call $t8 := $1_string_append($t8, $t7);
    if ($abort_flag) {
        assume {:print "$at(2,28137,28181)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(104,1):", $t5} $t5 == $t5;
        goto L2;
    }

    // write_back[LocalRoot($t3)@]($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:638:9+44
    $t3 := $Dereference($t8);

    // trace_local[token_uri]($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:638:9+44
    assume {:print "$track_local(104,1,3):", $t3} $t3 == $t3;

    // $t9 := move($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:640:9+9
    assume {:print "$at(2,28200,28209)"} true;
    $t9 := $t3;

    // trace_return[0]($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:633:94+291
    assume {:print "$at(2,27924,28215)"} true;
    assume {:print "$track_return(104,1,0):", $t9} $t9 == $t9;

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:641:5+1
    assume {:print "$at(2,28214,28215)"} true;
L1:

    // return $t9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:641:5+1
    assume {:print "$at(2,28214,28215)"} true;
    $ret0 := $t9;
    return;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:641:5+1
L2:

    // abort($t5) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:641:5+1
    assume {:print "$at(2,28214,28215)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::generate_image_url [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:589:5+932
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_generate_image_url$verify(_$t0: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: Vec (int);
    var $t4: int;
    var $t5: $1_string_String;
    var $t6: int;
    var $t7: $1_string_String;
    var $t8: int;
    var $t9: $1_string_String;
    var $t10: $Mutation ($1_string_String);
    var $t11: $Mutation ($1_string_String);
    var $t12: Vec (int);
    var $t13: $1_string_String;
    var $t14: $Mutation ($1_string_String);
    var $t15: $1_string_String;
    var $t16: $Mutation ($1_string_String);
    var $t17: Vec (int);
    var $t18: $1_string_String;
    var $t19: $1_string_String;
    var $t20: $1_string_String;
    var $t21: $Mutation ($1_string_String);
    var $t22: $1_string_String;
    var $t0: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:589:5+1
    assume {:print "$at(2,25987,25988)"} true;
    assume $IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata'($t0);

    // trace_local[metadata]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:589:5+1
    assume {:print "$track_local(104,2,0):", $t0} $t0 == $t0;

    // $t3 := [104, 116, 116, 112, 115, 58, 47, 47, 119, 119, 119, 46, 97, 112, 116, 111, 115, 110, 102, 116, 46, 99, 111, 109, 47, 97, 112, 105, 47, 110, 102, 116, 47, 103, 101, 110, 101, 114, 97, 116, 101, 63, 98, 103, 61] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:591:38+48
    assume {:print "$at(2,26157,26205)"} true;
    $t3 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(104, 116, 116, 112), MakeVec4(115, 58, 47, 47)), MakeVec4(119, 119, 119, 46)), MakeVec4(97, 112, 116, 111)), MakeVec4(115, 110, 102, 116)), MakeVec4(46, 99, 111, 109)), MakeVec4(47, 97, 112, 105)), MakeVec4(47, 110, 102, 116)), MakeVec4(47, 103, 101, 110)), MakeVec4(101, 114, 97, 116)), MakeVec4(101, 63, 98, 103)), MakeVec1(61));
    assume $IsValid'vec'u8''($t3);

    // $t1 := string::utf8($t3) on_abort goto L2 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:591:25+62
    call $t1 := $1_string_utf8($t3);
    if ($abort_flag) {
        assume {:print "$at(2,26144,26206)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,2):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[image_url]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:591:25+62
    assume {:print "$track_local(104,2,1):", $t1} $t1 == $t1;

    // $t5 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>.background_color($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:594:53+26
    assume {:print "$at(2,26327,26353)"} true;
    $t5 := $t0->$background_color;

    // $t6 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:594:81+1
    $t6 := 1;
    assume $IsValid'u64'($t6);

    // $t7 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>.background_color($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:594:99+26
    $t7 := $t0->$background_color;

    // $t8 := string::length($t7) on_abort goto L2 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:594:84+42
    call $t8 := $1_string_length($t7);
    if ($abort_flag) {
        assume {:print "$at(2,26358,26400)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,2):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t9 := string::sub_string($t5, $t6, $t8) on_abort goto L2 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:594:34+93
    call $t9 := $1_string_sub_string($t5, $t6, $t8);
    if ($abort_flag) {
        assume {:print "$at(2,26308,26401)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,2):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[color_without_hash]($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:594:34+93
    assume {:print "$track_local(104,2,2):", $t9} $t9 == $t9;

    // $t10 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:595:24+14
    assume {:print "$at(2,26426,26440)"} true;
    $t10 := $Mutation($Local(1), EmptyVec(), $t1);

    // string::append($t10, $t9) on_abort goto L2 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:595:9+50
    call $t10 := $1_string_append($t10, $t9);
    if ($abort_flag) {
        assume {:print "$at(2,26411,26461)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,2):", $t4} $t4 == $t4;
        goto L2;
    }

    // write_back[LocalRoot($t1)@]($t10) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:595:9+50
    $t1 := $Dereference($t10);

    // trace_local[image_url]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:595:9+50
    assume {:print "$track_local(104,2,1):", $t1} $t1 == $t1;

    // $t11 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:598:24+14
    assume {:print "$at(2,26526,26540)"} true;
    $t11 := $Mutation($Local(1), EmptyVec(), $t1);

    // $t12 := [38, 115, 104, 97, 112, 101, 61] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:598:53+10
    $t12 := ConcatVec(MakeVec4(38, 115, 104, 97), MakeVec3(112, 101, 61));
    assume $IsValid'vec'u8''($t12);

    // $t13 := string::utf8($t12) on_abort goto L2 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:598:40+24
    call $t13 := $1_string_utf8($t12);
    if ($abort_flag) {
        assume {:print "$at(2,26542,26566)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,2):", $t4} $t4 == $t4;
        goto L2;
    }

    // string::append($t11, $t13) on_abort goto L2 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:598:9+56
    call $t11 := $1_string_append($t11, $t13);
    if ($abort_flag) {
        assume {:print "$at(2,26511,26567)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,2):", $t4} $t4 == $t4;
        goto L2;
    }

    // write_back[LocalRoot($t1)@]($t11) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:598:9+56
    $t1 := $Dereference($t11);

    // trace_local[image_url]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:598:9+56
    assume {:print "$track_local(104,2,1):", $t1} $t1 == $t1;

    // $t14 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:599:24+14
    assume {:print "$at(2,26592,26606)"} true;
    $t14 := $Mutation($Local(1), EmptyVec(), $t1);

    // $t15 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>.shape($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:599:40+14
    $t15 := $t0->$shape;

    // string::append($t14, $t15) on_abort goto L2 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:599:9+46
    call $t14 := $1_string_append($t14, $t15);
    if ($abort_flag) {
        assume {:print "$at(2,26577,26623)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,2):", $t4} $t4 == $t4;
        goto L2;
    }

    // write_back[LocalRoot($t1)@]($t14) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:599:9+46
    $t1 := $Dereference($t14);

    // trace_local[image_url]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:599:9+46
    assume {:print "$track_local(104,2,1):", $t1} $t1 == $t1;

    // $t16 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:602:24+14
    assume {:print "$at(2,26715,26729)"} true;
    $t16 := $Mutation($Local(1), EmptyVec(), $t1);

    // $t17 := [38, 119, 111, 114, 100, 115, 61] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:602:53+10
    $t17 := ConcatVec(MakeVec4(38, 119, 111, 114), MakeVec3(100, 115, 61));
    assume $IsValid'vec'u8''($t17);

    // $t18 := string::utf8($t17) on_abort goto L2 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:602:40+24
    call $t18 := $1_string_utf8($t17);
    if ($abort_flag) {
        assume {:print "$at(2,26731,26755)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,2):", $t4} $t4 == $t4;
        goto L2;
    }

    // string::append($t16, $t18) on_abort goto L2 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:602:9+56
    call $t16 := $1_string_append($t16, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,26700,26756)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,2):", $t4} $t4 == $t4;
        goto L2;
    }

    // write_back[LocalRoot($t1)@]($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:602:9+56
    $t1 := $Dereference($t16);

    // trace_local[image_url]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:602:9+56
    assume {:print "$track_local(104,2,1):", $t1} $t1 == $t1;

    // $t19 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>.word_combination($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:603:47+25
    assume {:print "$at(2,26804,26829)"} true;
    $t19 := $t0->$word_combination;

    // $t20 := retro_nft_generator_da::url_encode_spaces($t19) on_abort goto L2 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:603:29+44
    call $t20 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_url_encode_spaces($t19);
    if ($abort_flag) {
        assume {:print "$at(2,26786,26830)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,2):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[color_without_hash]($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:603:29+44
    assume {:print "$track_local(104,2,2):", $t20} $t20 == $t20;

    // $t21 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:604:24+14
    assume {:print "$at(2,26855,26869)"} true;
    $t21 := $Mutation($Local(1), EmptyVec(), $t1);

    // string::append($t21, $t20) on_abort goto L2 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:604:9+45
    call $t21 := $1_string_append($t21, $t20);
    if ($abort_flag) {
        assume {:print "$at(2,26840,26885)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,2):", $t4} $t4 == $t4;
        goto L2;
    }

    // write_back[LocalRoot($t1)@]($t21) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:604:9+45
    $t1 := $Dereference($t21);

    // trace_local[image_url]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:604:9+45
    assume {:print "$track_local(104,2,1):", $t1} $t1 == $t1;

    // $t22 := move($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:606:9+9
    assume {:print "$at(2,26904,26913)"} true;
    $t22 := $t1;

    // trace_return[0]($t22) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:589:59+878
    assume {:print "$at(2,26041,26919)"} true;
    assume {:print "$track_return(104,2,0):", $t22} $t22 == $t22;

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:607:5+1
    assume {:print "$at(2,26918,26919)"} true;
L1:

    // return $t22 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:607:5+1
    assume {:print "$at(2,26918,26919)"} true;
    $ret0 := $t22;
    return;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:607:5+1
L2:

    // abort($t4) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:607:5+1
    assume {:print "$at(2,26918,26919)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::generate_improved_metadata [baseline] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:396:5+2684
procedure {:inline 1} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_generate_improved_metadata(_$t0: int, _$t1: int) returns ($ret0: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata)
{
    // declare local variables
    var $t2: int;
    var $t3: $1_string_String;
    var $t4: int;
    var $t5: Vec (Vec (int));
    var $t6: $1_string_String;
    var $t7: Vec (Vec (int));
    var $t8: int;
    var $t9: Vec (Vec (int));
    var $t10: int;
    var $t11: Vec (Vec (int));
    var $t12: Vec (Vec (int));
    var $t13: Vec (Vec (int));
    var $t14: $1_string_String;
    var $t15: Vec (Vec (int));
    var $t16: $1_string_String;
    var $t17: $1_string_String;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: bool;
    var $t28: Vec (int);
    var $t29: $1_string_String;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t34: int;
    var $t35: Vec (Vec (int));
    var $t36: Vec (int);
    var $t37: $1_string_String;
    var $t38: int;
    var $t39: int;
    var $t40: int;
    var $t41: int;
    var $t42: int;
    var $t43: Vec (Vec (int));
    var $t44: int;
    var $t45: int;
    var $t46: int;
    var $t47: int;
    var $t48: bv64;
    var $t49: Vec (Vec (int));
    var $t50: bv64;
    var $t51: bv64;
    var $t52: int;
    var $t53: int;
    var $t54: bv64;
    var $t55: Vec (Vec (int));
    var $t56: bv64;
    var $t57: bv64;
    var $t58: Vec (Vec (int));
    var $t59: Vec (int);
    var $t60: $1_string_String;
    var $t61: Vec (Vec (int));
    var $t62: Vec (int);
    var $t63: $1_string_String;
    var $t64: Vec (Vec (int));
    var $t65: Vec (int);
    var $t66: $1_string_String;
    var $t67: $Mutation ($1_string_String);
    var $t68: Vec (int);
    var $t69: $1_string_String;
    var $t70: $Mutation ($1_string_String);
    var $t71: $Mutation ($1_string_String);
    var $t72: Vec (int);
    var $t73: $1_string_String;
    var $t74: $Mutation ($1_string_String);
    var $t75: $1_string_String;
    var $t76: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $t77: int;
    var $t78: bool;
    var $t79: Vec (int);
    var $t80: $1_string_String;
    var $t81: int;
    var $t82: bool;
    var $t83: Vec (int);
    var $t84: $1_string_String;
    var $t85: int;
    var $t86: bool;
    var $t87: Vec (int);
    var $t88: $1_string_String;
    var $t89: int;
    var $t90: bool;
    var $t91: Vec (int);
    var $t92: $1_string_String;
    var $t93: int;
    var $t94: bool;
    var $t95: Vec (int);
    var $t96: $1_string_String;
    var $t97: int;
    var $t98: bool;
    var $t99: Vec (int);
    var $t100: $1_string_String;
    var $t101: int;
    var $t102: bool;
    var $t103: Vec (int);
    var $t104: $1_string_String;
    var $t105: int;
    var $t106: bool;
    var $t107: Vec (int);
    var $t108: $1_string_String;
    var $t109: int;
    var $t110: bool;
    var $t111: Vec (int);
    var $t112: $1_string_String;
    var $t113: int;
    var $t114: bool;
    var $t115: Vec (int);
    var $t116: $1_string_String;
    var $t117: int;
    var $t118: bool;
    var $t119: Vec (int);
    var $t120: $1_string_String;
    var $t121: Vec (int);
    var $t122: $1_string_String;
    var $t0: int;
    var $t1: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $temp_0'u64': int;
    var $temp_0'bv64': bv64;
    var $temp_0'vec'vec'u8''': Vec (Vec (int));
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[seed]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:396:5+1
    assume {:print "$at(2,16732,16733)"} true;
    assume {:print "$track_local(104,3,0):", $t0} $t0 == $t0;

    // trace_local[token_id]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:396:5+1
    assume {:print "$track_local(104,3,1):", $t1} $t1 == $t1;

    // $t18 := 4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:398:43+1
    assume {:print "$at(2,16928,16929)"} true;
    $t18 := 4;
    assume $IsValid'u8'($t18);

    // $t19 := <<($t1, $t18) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:398:30+15
    call $t19 := $ShlU64($t1, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,16915,16930)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t21 := +($t0, $t19) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:398:23+22
    call $t21 := $AddU64($t0, $t19);
    if ($abort_flag) {
        assume {:print "$at(2,16908,16930)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t22 := 4096 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:398:48+6
    $t22 := 4096;
    assume $IsValid'u64'($t22);

    // $t23 := +($t21, $t22) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:398:23+31
    call $t23 := $AddU64($t21, $t22);
    if ($abort_flag) {
        assume {:print "$at(2,16908,16939)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t24 := 13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:399:35+2
    assume {:print "$at(2,16975,16977)"} true;
    $t24 := 13;
    assume $IsValid'u64'($t24);

    // $t25 := %($t23, $t24) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:399:24+14
    call $t25 := $Mod($t23, $t24);
    if ($abort_flag) {
        assume {:print "$at(2,16964,16978)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[$t5]($t25) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:399:24+14
    assume {:print "$track_local(104,3,2):", $t25} $t25 == $t25;

    // $t26 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:400:48+1
    assume {:print "$at(2,17027,17028)"} true;
    $t26 := 0;
    assume $IsValid'u64'($t26);

    // $t27 := ==($t25, $t26) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:400:36+13
    $t27 := $IsEqual'u64'($t25, $t26);

    // if ($t27) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:400:32+941
    if ($t27) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:401:26+9
    assume {:print "$at(2,17057,17066)"} true;
L1:

    // $t28 := [35, 70, 70, 48, 48, 56, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:401:26+9
    assume {:print "$at(2,17057,17066)"} true;
    $t28 := ConcatVec(MakeVec4(35, 70, 70, 48), MakeVec3(48, 56, 48));
    assume $IsValid'vec'u8''($t28);

    // $t29 := string::utf8($t28) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:401:13+23
    call $t29 := $1_string_utf8($t28);
    if ($abort_flag) {
        assume {:print "$at(2,17044,17067)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t29 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:401:13+23
    $t3 := $t29;

    // trace_local[background_color]($t29) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:401:13+23
    assume {:print "$track_local(104,3,3):", $t29} $t29 == $t29;

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:430:27+8
    assume {:print "$at(2,18140,18148)"} true;
L4:

    // $t30 := 3571 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:430:38+4
    assume {:print "$at(2,18151,18155)"} true;
    $t30 := 3571;
    assume $IsValid'u64'($t30);

    // $t31 := *($t1, $t30) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:430:26+17
    call $t31 := $MulU64($t1, $t30);
    if ($abort_flag) {
        assume {:print "$at(2,18139,18156)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t32 := 7810 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:430:46+4
    $t32 := 7810;
    assume $IsValid'u64'($t32);

    // $t33 := %($t31, $t32) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:430:26+24
    call $t33 := $Mod($t31, $t32);
    if ($abort_flag) {
        assume {:print "$at(2,18139,18163)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t34 := retro_nft_generator_da::get_shape_index($t33) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:431:27+27
    assume {:print "$at(2,18191,18218)"} true;
    call $t34 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shape_index($t33);
    if ($abort_flag) {
        assume {:print "$at(2,18191,18218)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[$t7]($t34) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:431:27+27
    assume {:print "$track_local(104,3,4):", $t34} $t34 == $t34;

    // $t35 := ["[67, 105, 114, 99, 108, 101]", "[83, 113, 117, 97, 114, 101]", "[84, 114, 105, 97, 110, 103, 108, 101]", "[68, 105, 97, 109, 111, 110, 100]", "[83, 116, 97, 114]", "[80, 101, 110, 116, 97, 103, 111, 110]", "[72, 101, 120, 97, 103, 111, 110]", "[79, 99, 116, 97, 103, 111, 110]", "[67, 114, 111, 115, 115]", "[72, 101, 97, 114, 116]", "[65, 114, 114, 111, 119]", "[83, 112, 105, 114, 97, 108]", "[73, 110, 102, 105, 110, 105, 116, 121]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:432:51+11
    assume {:print "$at(2,18270,18281)"} true;
    $t35 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(ConcatVec(MakeVec4(67, 105, 114, 99), MakeVec2(108, 101)), ConcatVec(MakeVec4(83, 113, 117, 97), MakeVec2(114, 101)), ConcatVec(MakeVec4(84, 114, 105, 97), MakeVec4(110, 103, 108, 101)), ConcatVec(MakeVec4(68, 105, 97, 109), MakeVec3(111, 110, 100))), MakeVec4(MakeVec4(83, 116, 97, 114), ConcatVec(MakeVec4(80, 101, 110, 116), MakeVec4(97, 103, 111, 110)), ConcatVec(MakeVec4(72, 101, 120, 97), MakeVec3(103, 111, 110)), ConcatVec(MakeVec4(79, 99, 116, 97), MakeVec3(103, 111, 110)))), MakeVec4(ConcatVec(MakeVec4(67, 114, 111, 115), MakeVec1(115)), ConcatVec(MakeVec4(72, 101, 97, 114), MakeVec1(116)), ConcatVec(MakeVec4(65, 114, 114, 111), MakeVec1(119)), ConcatVec(MakeVec4(83, 112, 105, 114), MakeVec2(97, 108)))), MakeVec1(ConcatVec(MakeVec4(73, 110, 102, 105), MakeVec4(110, 105, 116, 121))));
    assume $IsValid'vec'vec'u8'''($t35);

    // trace_local[$t73]($t35) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:432:51+11
    assume {:print "$track_local(104,3,5):", $t35} $t35 == $t35;

    // $t36 := vector::borrow<vector<u8>>($t35, $t34) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:432:35+41
    call $t36 := $1_vector_borrow'vec'u8''($t35, $t34);
    if ($abort_flag) {
        assume {:print "$at(2,18254,18295)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t37 := string::utf8($t36) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:432:21+56
    call $t37 := $1_string_utf8($t36);
    if ($abort_flag) {
        assume {:print "$at(2,18240,18296)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[shape]($t37) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:432:21+56
    assume {:print "$track_local(104,3,6):", $t37} $t37 == $t37;

    // $t38 := 16 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:435:50+2
    assume {:print "$at(2,18420,18422)"} true;
    $t38 := 16;
    assume $IsValid'u8'($t38);

    // $t39 := <<($t1, $t38) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:435:37+16
    call $t39 := $ShlU64($t1, $t38);
    if ($abort_flag) {
        assume {:print "$at(2,18407,18423)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t40 := +($t0, $t39) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:435:30+23
    call $t40 := $AddU64($t0, $t39);
    if ($abort_flag) {
        assume {:print "$at(2,18400,18423)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t41 := 12288 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:435:56+6
    $t41 := 12288;
    assume $IsValid'u64'($t41);

    // $t42 := +($t40, $t41) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:435:30+32
    call $t42 := $AddU64($t40, $t41);
    if ($abort_flag) {
        assume {:print "$at(2,18400,18432)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[$t7]($t42) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:435:30+32
    assume {:print "$track_local(104,3,4):", $t42} $t42 == $t42;

    // $t43 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:436:61+17
    assume {:print "$at(2,18494,18511)"} true;
    $t43 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t43);

    // trace_local[$t85]($t43) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:436:61+17
    assume {:print "$track_local(104,3,7):", $t43} $t43 == $t43;

    // $t44 := vector::length<vector<u8>>($t43) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:436:45+34
    call $t44 := $1_vector_length'vec'u8''($t43);
    if ($abort_flag) {
        assume {:print "$at(2,18478,18512)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t45 := %($t42, $t44) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:436:27+53
    call $t45 := $Mod($t42, $t44);
    if ($abort_flag) {
        assume {:print "$at(2,18460,18513)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[$t16]($t45) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:436:27+53
    assume {:print "$track_local(104,3,8):", $t45} $t45 == $t45;

    // $t46 := 1000003 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:437:58+7
    assume {:print "$at(2,18572,18579)"} true;
    $t46 := 1000003;
    assume $IsValid'u64'($t46);

    // $t47 := *($t1, $t46) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:437:46+20
    call $t47 := $MulU64($t1, $t46);
    if ($abort_flag) {
        assume {:print "$at(2,18560,18580)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t48 := ^($t42, $t47) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:437:28+39
    call $t48 := $XorBv64($int2bv.64($t42), $int2bv.64($t47));

    // $t49 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:437:86+17
    $t49 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t49);

    // trace_local[$t94]($t49) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:437:86+17
    assume {:print "$track_local(104,3,9):", $t49} $t49 == $t49;

    // $t50 := vector::length<vector<u8>>($t49) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:437:70+34
    call $t50 := $int2bv64($1_vector_$length'vec'bv8''($t49));
    call $t50 := $1_vector_$length'vec'bv8''($t49);
    if ($abort_flag) {
        assume {:print "$at(2,18584,18618)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t51 := %($t48, $t50) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:437:27+78
    call $t51 := $ModBv64($t48, $t50);
    if ($abort_flag) {
        assume {:print "$at(2,18541,18619)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[$t83]($t51) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:437:27+78
    assume {:print "$track_local(104,3,10):", $t51} $t51 == $t51;

    // $t52 := 2000003 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:438:58+7
    assume {:print "$at(2,18678,18685)"} true;
    $t52 := 2000003;
    assume $IsValid'u64'($t52);

    // $t53 := *($t1, $t52) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:438:46+20
    call $t53 := $MulU64($t1, $t52);
    if ($abort_flag) {
        assume {:print "$at(2,18666,18686)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t54 := ^($t42, $t53) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:438:28+39
    call $t54 := $XorBv64($int2bv.64($t42), $int2bv.64($t53));

    // $t55 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:438:86+17
    $t55 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t55);

    // trace_local[$t103]($t55) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:438:86+17
    assume {:print "$track_local(104,3,11):", $t55} $t55 == $t55;

    // $t56 := vector::length<vector<u8>>($t55) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:438:70+34
    call $t56 := $int2bv64($1_vector_$length'vec'bv8''($t55));
    call $t56 := $1_vector_$length'vec'bv8''($t55);
    if ($abort_flag) {
        assume {:print "$at(2,18690,18724)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t57 := %($t54, $t56) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:438:27+78
    call $t57 := $ModBv64($t54, $t56);
    if ($abort_flag) {
        assume {:print "$at(2,18647,18725)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[$t7]($t57) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:438:27+78
    assume {:print "$track_local(104,3,4):", $t57} $t57 == $t57;

    // $t58 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:440:51+17
    assume {:print "$at(2,18786,18803)"} true;
    $t58 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t58);

    // trace_local[$t108]($t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:440:51+17
    assume {:print "$track_local(104,3,12):", $t58} $t58 == $t58;

    // $t59 := vector::borrow<vector<u8>>($t58, $t45) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:440:35+47
    call $t59 := $1_vector_borrow'vec'u8''($t58, $t45);
    if ($abort_flag) {
        assume {:print "$at(2,18770,18817)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t60 := string::utf8($t59) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:440:21+62
    call $t60 := $1_string_utf8($t59);
    if ($abort_flag) {
        assume {:print "$at(2,18756,18818)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t61 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:441:51+17
    assume {:print "$at(2,18870,18887)"} true;
    $t61 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t61);

    // trace_local[$t113]($t61) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:441:51+17
    assume {:print "$track_local(104,3,13):", $t61} $t61 == $t61;

    // $t62 := vector::borrow<vector<u8>>($t61, $t51) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:441:35+47
    call $t62 := $1_vector_borrow'vec'u8''($t61, $bv2int.64($t51));
    if ($abort_flag) {
        assume {:print "$at(2,18854,18901)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t63 := string::utf8($t62) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:441:21+62
    call $t63 := $1_string_utf8($t62);
    if ($abort_flag) {
        assume {:print "$at(2,18840,18902)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[word2]($t63) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:441:21+62
    assume {:print "$track_local(104,3,14):", $t63} $t63 == $t63;

    // $t64 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:442:51+17
    assume {:print "$at(2,18954,18971)"} true;
    $t64 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t64);

    // trace_local[$t118]($t64) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:442:51+17
    assume {:print "$track_local(104,3,15):", $t64} $t64 == $t64;

    // $t65 := vector::borrow<vector<u8>>($t64, $t57) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:442:35+47
    call $t65 := $1_vector_borrow'vec'u8''($t64, $bv2int.64($t57));
    if ($abort_flag) {
        assume {:print "$at(2,18938,18985)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t66 := string::utf8($t65) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:442:21+62
    call $t66 := $1_string_utf8($t65);
    if ($abort_flag) {
        assume {:print "$at(2,18924,18986)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[word3]($t66) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:442:21+62
    assume {:print "$track_local(104,3,16):", $t66} $t66 == $t66;

    // $t17 := $t60 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:444:32+5
    assume {:print "$at(2,19028,19033)"} true;
    $t17 := $t60;

    // trace_local[word_combination]($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:444:32+5
    assume {:print "$track_local(104,3,17):", $t17} $t17 == $t17;

    // $t67 := borrow_local($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:445:24+21
    assume {:print "$at(2,19058,19079)"} true;
    $t67 := $Mutation($Local(17), EmptyVec(), $t17);

    // $t68 := [32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:445:60+4
    $t68 := MakeVec1(32);
    assume $IsValid'vec'u8''($t68);

    // $t69 := string::utf8($t68) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:445:47+18
    call $t69 := $1_string_utf8($t68);
    if ($abort_flag) {
        assume {:print "$at(2,19081,19099)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // string::append($t67, $t69) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:445:9+57
    call $t67 := $1_string_append($t67, $t69);
    if ($abort_flag) {
        assume {:print "$at(2,19043,19100)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // write_back[LocalRoot($t17)@]($t67) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:445:9+57
    $t17 := $Dereference($t67);

    // trace_local[word_combination]($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:445:9+57
    assume {:print "$track_local(104,3,17):", $t17} $t17 == $t17;

    // $t70 := borrow_local($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:446:24+21
    assume {:print "$at(2,19125,19146)"} true;
    $t70 := $Mutation($Local(17), EmptyVec(), $t17);

    // string::append($t70, $t63) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:446:9+44
    call $t70 := $1_string_append($t70, $t63);
    if ($abort_flag) {
        assume {:print "$at(2,19110,19154)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // write_back[LocalRoot($t17)@]($t70) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:446:9+44
    $t17 := $Dereference($t70);

    // trace_local[word_combination]($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:446:9+44
    assume {:print "$track_local(104,3,17):", $t17} $t17 == $t17;

    // $t71 := borrow_local($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:447:24+21
    assume {:print "$at(2,19179,19200)"} true;
    $t71 := $Mutation($Local(17), EmptyVec(), $t17);

    // $t72 := [32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:447:60+4
    $t72 := MakeVec1(32);
    assume $IsValid'vec'u8''($t72);

    // $t73 := string::utf8($t72) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:447:47+18
    call $t73 := $1_string_utf8($t72);
    if ($abort_flag) {
        assume {:print "$at(2,19202,19220)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // string::append($t71, $t73) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:447:9+57
    call $t71 := $1_string_append($t71, $t73);
    if ($abort_flag) {
        assume {:print "$at(2,19164,19221)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // write_back[LocalRoot($t17)@]($t71) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:447:9+57
    $t17 := $Dereference($t71);

    // trace_local[word_combination]($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:447:9+57
    assume {:print "$track_local(104,3,17):", $t17} $t17 == $t17;

    // $t74 := borrow_local($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:448:24+21
    assume {:print "$at(2,19246,19267)"} true;
    $t74 := $Mutation($Local(17), EmptyVec(), $t17);

    // string::append($t74, $t66) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:448:9+44
    call $t74 := $1_string_append($t74, $t66);
    if ($abort_flag) {
        assume {:print "$at(2,19231,19275)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // write_back[LocalRoot($t17)@]($t74) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:448:9+44
    $t17 := $Dereference($t74);

    // trace_local[word_combination]($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:448:9+44
    assume {:print "$track_local(104,3,17):", $t17} $t17 == $t17;

    // $t75 := move($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:453:13+16
    assume {:print "$at(2,19361,19377)"} true;
    $t75 := $t17;

    // $t76 := pack 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata($t3, $t37, $t75, $t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:450:9+124
    assume {:print "$at(2,19286,19410)"} true;
    $t76 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata($t3, $t37, $t75, $t1);

    // trace_return[0]($t76) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:396:75+2614
    assume {:print "$at(2,16802,19416)"} true;
    assume {:print "$track_return(104,3,0):", $t76} $t76 == $t76;

    // goto L25 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:396:75+2614
    goto L25;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:402:20+8
    assume {:print "$at(2,17087,17095)"} true;
L0:

    // $t77 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:402:32+1
    assume {:print "$at(2,17099,17100)"} true;
    $t77 := 1;
    assume $IsValid'u64'($t77);

    // $t78 := ==($t25, $t77) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:402:20+13
    $t78 := $IsEqual'u64'($t25, $t77);

    // if ($t78) goto L3 else goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:402:16+869
    if ($t78) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:403:26+13
    assume {:print "$at(2,17129,17142)"} true;
L3:

    // $t79 := [35, 48, 48, 56, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:403:26+13
    assume {:print "$at(2,17129,17142)"} true;
    $t79 := ConcatVec(MakeVec4(35, 48, 48, 56), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t79);

    // $t80 := string::utf8($t79) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:403:13+27
    call $t80 := $1_string_utf8($t79);
    if ($abort_flag) {
        assume {:print "$at(2,17116,17143)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t80 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:403:13+27
    $t3 := $t80;

    // trace_local[background_color]($t80) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:403:13+27
    assume {:print "$track_local(104,3,3):", $t80} $t80 == $t80;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:403:13+27
    goto L4;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:404:20+8
    assume {:print "$at(2,17163,17171)"} true;
L2:

    // $t81 := 2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:404:32+1
    assume {:print "$at(2,17175,17176)"} true;
    $t81 := 2;
    assume $IsValid'u64'($t81);

    // $t82 := ==($t25, $t81) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:404:20+13
    $t82 := $IsEqual'u64'($t25, $t81);

    // if ($t82) goto L6 else goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:404:16+793
    if ($t82) { goto L6; } else { goto L5; }

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:405:26+12
    assume {:print "$at(2,17205,17217)"} true;
L6:

    // $t83 := [35, 56, 48, 48, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:405:26+12
    assume {:print "$at(2,17205,17217)"} true;
    $t83 := ConcatVec(MakeVec4(35, 56, 48, 48), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t83);

    // $t84 := string::utf8($t83) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:405:13+26
    call $t84 := $1_string_utf8($t83);
    if ($abort_flag) {
        assume {:print "$at(2,17192,17218)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t84 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:405:13+26
    $t3 := $t84;

    // trace_local[background_color]($t84) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:405:13+26
    assume {:print "$track_local(104,3,3):", $t84} $t84 == $t84;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:405:13+26
    goto L4;

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:406:20+8
    assume {:print "$at(2,17238,17246)"} true;
L5:

    // $t85 := 3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:406:32+1
    assume {:print "$at(2,17250,17251)"} true;
    $t85 := 3;
    assume $IsValid'u64'($t85);

    // $t86 := ==($t25, $t85) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:406:20+13
    $t86 := $IsEqual'u64'($t25, $t85);

    // if ($t86) goto L8 else goto L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:406:16+718
    if ($t86) { goto L8; } else { goto L7; }

    // label L8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:407:26+11
    assume {:print "$at(2,17280,17291)"} true;
L8:

    // $t87 := [35, 48, 48, 70, 70, 56, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:407:26+11
    assume {:print "$at(2,17280,17291)"} true;
    $t87 := ConcatVec(MakeVec4(35, 48, 48, 70), MakeVec3(70, 56, 48));
    assume $IsValid'vec'u8''($t87);

    // $t88 := string::utf8($t87) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:407:13+25
    call $t88 := $1_string_utf8($t87);
    if ($abort_flag) {
        assume {:print "$at(2,17267,17292)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t88 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:407:13+25
    $t3 := $t88;

    // trace_local[background_color]($t88) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:407:13+25
    assume {:print "$track_local(104,3,3):", $t88} $t88 == $t88;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:407:13+25
    goto L4;

    // label L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:408:20+8
    assume {:print "$at(2,17312,17320)"} true;
L7:

    // $t89 := 4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:408:32+1
    assume {:print "$at(2,17324,17325)"} true;
    $t89 := 4;
    assume $IsValid'u64'($t89);

    // $t90 := ==($t25, $t89) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:408:20+13
    $t90 := $IsEqual'u64'($t25, $t89);

    // if ($t90) goto L10 else goto L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:408:16+644
    if ($t90) { goto L10; } else { goto L9; }

    // label L10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:409:26+13
    assume {:print "$at(2,17354,17367)"} true;
L10:

    // $t91 := [35, 70, 70, 56, 48, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:409:26+13
    assume {:print "$at(2,17354,17367)"} true;
    $t91 := ConcatVec(MakeVec4(35, 70, 70, 56), MakeVec3(48, 48, 48));
    assume $IsValid'vec'u8''($t91);

    // $t92 := string::utf8($t91) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:409:13+27
    call $t92 := $1_string_utf8($t91);
    if ($abort_flag) {
        assume {:print "$at(2,17341,17368)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t92 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:409:13+27
    $t3 := $t92;

    // trace_local[background_color]($t92) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:409:13+27
    assume {:print "$track_local(104,3,3):", $t92} $t92 == $t92;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:409:13+27
    goto L4;

    // label L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:410:20+8
    assume {:print "$at(2,17388,17396)"} true;
L9:

    // $t93 := 5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:410:32+1
    assume {:print "$at(2,17400,17401)"} true;
    $t93 := 5;
    assume $IsValid'u64'($t93);

    // $t94 := ==($t25, $t93) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:410:20+13
    $t94 := $IsEqual'u64'($t25, $t93);

    // if ($t94) goto L12 else goto L11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:410:16+568
    if ($t94) { goto L12; } else { goto L11; }

    // label L12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:411:26+11
    assume {:print "$at(2,17430,17441)"} true;
L12:

    // $t95 := [35, 70, 70, 70, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:411:26+11
    assume {:print "$at(2,17430,17441)"} true;
    $t95 := ConcatVec(MakeVec4(35, 70, 70, 70), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t95);

    // $t96 := string::utf8($t95) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:411:13+25
    call $t96 := $1_string_utf8($t95);
    if ($abort_flag) {
        assume {:print "$at(2,17417,17442)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t96 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:411:13+25
    $t3 := $t96;

    // trace_local[background_color]($t96) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:411:13+25
    assume {:print "$track_local(104,3,3):", $t96} $t96 == $t96;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:411:13+25
    goto L4;

    // label L11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:412:20+8
    assume {:print "$at(2,17462,17470)"} true;
L11:

    // $t97 := 6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:412:32+1
    assume {:print "$at(2,17474,17475)"} true;
    $t97 := 6;
    assume $IsValid'u64'($t97);

    // $t98 := ==($t25, $t97) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:412:20+13
    $t98 := $IsEqual'u64'($t25, $t97);

    // if ($t98) goto L14 else goto L13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:412:16+494
    if ($t98) { goto L14; } else { goto L13; }

    // label L14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:413:26+11
    assume {:print "$at(2,17504,17515)"} true;
L14:

    // $t99 := [35, 70, 70, 48, 48, 52, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:413:26+11
    assume {:print "$at(2,17504,17515)"} true;
    $t99 := ConcatVec(MakeVec4(35, 70, 70, 48), MakeVec3(48, 52, 48));
    assume $IsValid'vec'u8''($t99);

    // $t100 := string::utf8($t99) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:413:13+25
    call $t100 := $1_string_utf8($t99);
    if ($abort_flag) {
        assume {:print "$at(2,17491,17516)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t100 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:413:13+25
    $t3 := $t100;

    // trace_local[background_color]($t100) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:413:13+25
    assume {:print "$track_local(104,3,3):", $t100} $t100 == $t100;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:413:13+25
    goto L4;

    // label L13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:414:20+8
    assume {:print "$at(2,17536,17544)"} true;
L13:

    // $t101 := 7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:414:32+1
    assume {:print "$at(2,17548,17549)"} true;
    $t101 := 7;
    assume $IsValid'u64'($t101);

    // $t102 := ==($t25, $t101) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:414:20+13
    $t102 := $IsEqual'u64'($t25, $t101);

    // if ($t102) goto L16 else goto L15 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:414:16+420
    if ($t102) { goto L16; } else { goto L15; }

    // label L16 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:415:26+11
    assume {:print "$at(2,17578,17589)"} true;
L16:

    // $t103 := [35, 48, 48, 70, 70, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:415:26+11
    assume {:print "$at(2,17578,17589)"} true;
    $t103 := ConcatVec(MakeVec4(35, 48, 48, 70), MakeVec3(70, 70, 70));
    assume $IsValid'vec'u8''($t103);

    // $t104 := string::utf8($t103) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:415:13+25
    call $t104 := $1_string_utf8($t103);
    if ($abort_flag) {
        assume {:print "$at(2,17565,17590)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t104 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:415:13+25
    $t3 := $t104;

    // trace_local[background_color]($t104) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:415:13+25
    assume {:print "$track_local(104,3,3):", $t104} $t104 == $t104;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:415:13+25
    goto L4;

    // label L15 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:416:20+8
    assume {:print "$at(2,17610,17618)"} true;
L15:

    // $t105 := 8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:416:32+1
    assume {:print "$at(2,17622,17623)"} true;
    $t105 := 8;
    assume $IsValid'u64'($t105);

    // $t106 := ==($t25, $t105) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:416:20+13
    $t106 := $IsEqual'u64'($t25, $t105);

    // if ($t106) goto L18 else goto L17 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:416:16+346
    if ($t106) { goto L18; } else { goto L17; }

    // label L18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:417:26+9
    assume {:print "$at(2,17652,17661)"} true;
L18:

    // $t107 := [35, 70, 70, 52, 48, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:417:26+9
    assume {:print "$at(2,17652,17661)"} true;
    $t107 := ConcatVec(MakeVec4(35, 70, 70, 52), MakeVec3(48, 48, 48));
    assume $IsValid'vec'u8''($t107);

    // $t108 := string::utf8($t107) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:417:13+23
    call $t108 := $1_string_utf8($t107);
    if ($abort_flag) {
        assume {:print "$at(2,17639,17662)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t108 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:417:13+23
    $t3 := $t108;

    // trace_local[background_color]($t108) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:417:13+23
    assume {:print "$track_local(104,3,3):", $t108} $t108 == $t108;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:417:13+23
    goto L4;

    // label L17 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:418:20+8
    assume {:print "$at(2,17682,17690)"} true;
L17:

    // $t109 := 9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:418:32+1
    assume {:print "$at(2,17694,17695)"} true;
    $t109 := 9;
    assume $IsValid'u64'($t109);

    // $t110 := ==($t25, $t109) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:418:20+13
    $t110 := $IsEqual'u64'($t25, $t109);

    // if ($t110) goto L20 else goto L19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:418:16+274
    if ($t110) { goto L20; } else { goto L19; }

    // label L20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:419:26+9
    assume {:print "$at(2,17724,17733)"} true;
L20:

    // $t111 := [35, 56, 48, 70, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:419:26+9
    assume {:print "$at(2,17724,17733)"} true;
    $t111 := ConcatVec(MakeVec4(35, 56, 48, 70), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t111);

    // $t112 := string::utf8($t111) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:419:13+23
    call $t112 := $1_string_utf8($t111);
    if ($abort_flag) {
        assume {:print "$at(2,17711,17734)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t112 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:419:13+23
    $t3 := $t112;

    // trace_local[background_color]($t112) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:419:13+23
    assume {:print "$track_local(104,3,3):", $t112} $t112 == $t112;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:419:13+23
    goto L4;

    // label L19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:420:20+8
    assume {:print "$at(2,17754,17762)"} true;
L19:

    // $t113 := 10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:420:32+2
    assume {:print "$at(2,17766,17768)"} true;
    $t113 := 10;
    assume $IsValid'u64'($t113);

    // $t114 := ==($t25, $t113) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:420:20+14
    $t114 := $IsEqual'u64'($t25, $t113);

    // if ($t114) goto L22 else goto L21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:420:16+202
    if ($t114) { goto L22; } else { goto L21; }

    // label L22 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:421:26+11
    assume {:print "$at(2,17797,17808)"} true;
L22:

    // $t115 := [35, 52, 48, 48, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:421:26+11
    assume {:print "$at(2,17797,17808)"} true;
    $t115 := ConcatVec(MakeVec4(35, 52, 48, 48), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t115);

    // $t116 := string::utf8($t115) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:421:13+25
    call $t116 := $1_string_utf8($t115);
    if ($abort_flag) {
        assume {:print "$at(2,17784,17809)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t116 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:421:13+25
    $t3 := $t116;

    // trace_local[background_color]($t116) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:421:13+25
    assume {:print "$track_local(104,3,3):", $t116} $t116 == $t116;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:421:13+25
    goto L4;

    // label L21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:422:20+8
    assume {:print "$at(2,17829,17837)"} true;
L21:

    // $t117 := 11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:422:32+2
    assume {:print "$at(2,17841,17843)"} true;
    $t117 := 11;
    assume $IsValid'u64'($t117);

    // $t118 := ==($t25, $t117) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:422:20+14
    $t118 := $IsEqual'u64'($t25, $t117);

    // if ($t118) goto L24 else goto L23 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:422:16+127
    if ($t118) { goto L24; } else { goto L23; }

    // label L24 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:423:26+13
    assume {:print "$at(2,17872,17885)"} true;
L24:

    // $t119 := [35, 67, 48, 67, 48, 67, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:423:26+13
    assume {:print "$at(2,17872,17885)"} true;
    $t119 := ConcatVec(MakeVec4(35, 67, 48, 67), MakeVec3(48, 67, 48));
    assume $IsValid'vec'u8''($t119);

    // $t120 := string::utf8($t119) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:423:13+27
    call $t120 := $1_string_utf8($t119);
    if ($abort_flag) {
        assume {:print "$at(2,17859,17886)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t120 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:423:13+27
    $t3 := $t120;

    // trace_local[background_color]($t120) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:423:13+27
    assume {:print "$track_local(104,3,3):", $t120} $t120 == $t120;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:423:13+27
    goto L4;

    // label L23 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:425:26+12
    assume {:print "$at(2,17929,17941)"} true;
L23:

    // $t121 := [35, 70, 70, 66, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:425:26+12
    assume {:print "$at(2,17929,17941)"} true;
    $t121 := ConcatVec(MakeVec4(35, 70, 70, 66), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t121);

    // $t122 := string::utf8($t121) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:425:13+26
    call $t122 := $1_string_utf8($t121);
    if ($abort_flag) {
        assume {:print "$at(2,17916,17942)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t122 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:425:13+26
    $t3 := $t122;

    // trace_local[background_color]($t122) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:425:13+26
    assume {:print "$track_local(104,3,3):", $t122} $t122 == $t122;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:425:13+26
    goto L4;

    // label L25 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:456:5+1
    assume {:print "$at(2,19415,19416)"} true;
L25:

    // return $t76 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:456:5+1
    assume {:print "$at(2,19415,19416)"} true;
    $ret0 := $t76;
    return;

    // label L26 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:456:5+1
L26:

    // abort($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:456:5+1
    assume {:print "$at(2,19415,19416)"} true;
    $abort_code := $t20;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::generate_improved_metadata [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:396:5+2684
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_generate_improved_metadata$verify(_$t0: int, _$t1: int) returns ($ret0: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata)
{
    // declare local variables
    var $t2: int;
    var $t3: $1_string_String;
    var $t4: int;
    var $t5: Vec (Vec (int));
    var $t6: $1_string_String;
    var $t7: Vec (Vec (int));
    var $t8: int;
    var $t9: Vec (Vec (int));
    var $t10: int;
    var $t11: Vec (Vec (int));
    var $t12: Vec (Vec (int));
    var $t13: Vec (Vec (int));
    var $t14: $1_string_String;
    var $t15: Vec (Vec (int));
    var $t16: $1_string_String;
    var $t17: $1_string_String;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: bool;
    var $t28: Vec (int);
    var $t29: $1_string_String;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t34: int;
    var $t35: Vec (Vec (int));
    var $t36: Vec (int);
    var $t37: $1_string_String;
    var $t38: int;
    var $t39: int;
    var $t40: int;
    var $t41: int;
    var $t42: int;
    var $t43: Vec (Vec (int));
    var $t44: int;
    var $t45: int;
    var $t46: int;
    var $t47: int;
    var $t48: bv64;
    var $t49: Vec (Vec (int));
    var $t50: bv64;
    var $t51: bv64;
    var $t52: int;
    var $t53: int;
    var $t54: bv64;
    var $t55: Vec (Vec (int));
    var $t56: bv64;
    var $t57: bv64;
    var $t58: Vec (Vec (int));
    var $t59: Vec (int);
    var $t60: $1_string_String;
    var $t61: Vec (Vec (int));
    var $t62: Vec (int);
    var $t63: $1_string_String;
    var $t64: Vec (Vec (int));
    var $t65: Vec (int);
    var $t66: $1_string_String;
    var $t67: $Mutation ($1_string_String);
    var $t68: Vec (int);
    var $t69: $1_string_String;
    var $t70: $Mutation ($1_string_String);
    var $t71: $Mutation ($1_string_String);
    var $t72: Vec (int);
    var $t73: $1_string_String;
    var $t74: $Mutation ($1_string_String);
    var $t75: $1_string_String;
    var $t76: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $t77: int;
    var $t78: bool;
    var $t79: Vec (int);
    var $t80: $1_string_String;
    var $t81: int;
    var $t82: bool;
    var $t83: Vec (int);
    var $t84: $1_string_String;
    var $t85: int;
    var $t86: bool;
    var $t87: Vec (int);
    var $t88: $1_string_String;
    var $t89: int;
    var $t90: bool;
    var $t91: Vec (int);
    var $t92: $1_string_String;
    var $t93: int;
    var $t94: bool;
    var $t95: Vec (int);
    var $t96: $1_string_String;
    var $t97: int;
    var $t98: bool;
    var $t99: Vec (int);
    var $t100: $1_string_String;
    var $t101: int;
    var $t102: bool;
    var $t103: Vec (int);
    var $t104: $1_string_String;
    var $t105: int;
    var $t106: bool;
    var $t107: Vec (int);
    var $t108: $1_string_String;
    var $t109: int;
    var $t110: bool;
    var $t111: Vec (int);
    var $t112: $1_string_String;
    var $t113: int;
    var $t114: bool;
    var $t115: Vec (int);
    var $t116: $1_string_String;
    var $t117: int;
    var $t118: bool;
    var $t119: Vec (int);
    var $t120: $1_string_String;
    var $t121: Vec (int);
    var $t122: $1_string_String;
    var $t0: int;
    var $t1: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $temp_0'u64': int;
    var $temp_0'bv64': bv64;
    var $temp_0'vec'vec'u8''': Vec (Vec (int));
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:396:5+1
    assume {:print "$at(2,16732,16733)"} true;
    assume $IsValid'u64'($t0);

    // assume WellFormed($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:396:5+1
    assume $IsValid'u64'($t1);

    // trace_local[seed]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:396:5+1
    assume {:print "$track_local(104,3,0):", $t0} $t0 == $t0;

    // trace_local[token_id]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:396:5+1
    assume {:print "$track_local(104,3,1):", $t1} $t1 == $t1;

    // $t18 := 4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:398:43+1
    assume {:print "$at(2,16928,16929)"} true;
    $t18 := 4;
    assume $IsValid'u8'($t18);

    // $t19 := <<($t1, $t18) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:398:30+15
    call $t19 := $ShlU64($t1, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,16915,16930)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t21 := +($t0, $t19) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:398:23+22
    call $t21 := $AddU64($t0, $t19);
    if ($abort_flag) {
        assume {:print "$at(2,16908,16930)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t22 := 4096 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:398:48+6
    $t22 := 4096;
    assume $IsValid'u64'($t22);

    // $t23 := +($t21, $t22) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:398:23+31
    call $t23 := $AddU64($t21, $t22);
    if ($abort_flag) {
        assume {:print "$at(2,16908,16939)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t24 := 13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:399:35+2
    assume {:print "$at(2,16975,16977)"} true;
    $t24 := 13;
    assume $IsValid'u64'($t24);

    // $t25 := %($t23, $t24) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:399:24+14
    call $t25 := $Mod($t23, $t24);
    if ($abort_flag) {
        assume {:print "$at(2,16964,16978)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[$t5]($t25) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:399:24+14
    assume {:print "$track_local(104,3,2):", $t25} $t25 == $t25;

    // $t26 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:400:48+1
    assume {:print "$at(2,17027,17028)"} true;
    $t26 := 0;
    assume $IsValid'u64'($t26);

    // $t27 := ==($t25, $t26) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:400:36+13
    $t27 := $IsEqual'u64'($t25, $t26);

    // if ($t27) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:400:32+941
    if ($t27) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:401:26+9
    assume {:print "$at(2,17057,17066)"} true;
L1:

    // $t28 := [35, 70, 70, 48, 48, 56, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:401:26+9
    assume {:print "$at(2,17057,17066)"} true;
    $t28 := ConcatVec(MakeVec4(35, 70, 70, 48), MakeVec3(48, 56, 48));
    assume $IsValid'vec'u8''($t28);

    // $t29 := string::utf8($t28) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:401:13+23
    call $t29 := $1_string_utf8($t28);
    if ($abort_flag) {
        assume {:print "$at(2,17044,17067)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t29 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:401:13+23
    $t3 := $t29;

    // trace_local[background_color]($t29) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:401:13+23
    assume {:print "$track_local(104,3,3):", $t29} $t29 == $t29;

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:430:27+8
    assume {:print "$at(2,18140,18148)"} true;
L4:

    // $t30 := 3571 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:430:38+4
    assume {:print "$at(2,18151,18155)"} true;
    $t30 := 3571;
    assume $IsValid'u64'($t30);

    // $t31 := *($t1, $t30) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:430:26+17
    call $t31 := $MulU64($t1, $t30);
    if ($abort_flag) {
        assume {:print "$at(2,18139,18156)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t32 := 7810 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:430:46+4
    $t32 := 7810;
    assume $IsValid'u64'($t32);

    // $t33 := %($t31, $t32) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:430:26+24
    call $t33 := $Mod($t31, $t32);
    if ($abort_flag) {
        assume {:print "$at(2,18139,18163)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t34 := retro_nft_generator_da::get_shape_index($t33) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:431:27+27
    assume {:print "$at(2,18191,18218)"} true;
    call $t34 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shape_index($t33);
    if ($abort_flag) {
        assume {:print "$at(2,18191,18218)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[$t7]($t34) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:431:27+27
    assume {:print "$track_local(104,3,4):", $t34} $t34 == $t34;

    // $t35 := ["[67, 105, 114, 99, 108, 101]", "[83, 113, 117, 97, 114, 101]", "[84, 114, 105, 97, 110, 103, 108, 101]", "[68, 105, 97, 109, 111, 110, 100]", "[83, 116, 97, 114]", "[80, 101, 110, 116, 97, 103, 111, 110]", "[72, 101, 120, 97, 103, 111, 110]", "[79, 99, 116, 97, 103, 111, 110]", "[67, 114, 111, 115, 115]", "[72, 101, 97, 114, 116]", "[65, 114, 114, 111, 119]", "[83, 112, 105, 114, 97, 108]", "[73, 110, 102, 105, 110, 105, 116, 121]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:432:51+11
    assume {:print "$at(2,18270,18281)"} true;
    $t35 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(ConcatVec(MakeVec4(67, 105, 114, 99), MakeVec2(108, 101)), ConcatVec(MakeVec4(83, 113, 117, 97), MakeVec2(114, 101)), ConcatVec(MakeVec4(84, 114, 105, 97), MakeVec4(110, 103, 108, 101)), ConcatVec(MakeVec4(68, 105, 97, 109), MakeVec3(111, 110, 100))), MakeVec4(MakeVec4(83, 116, 97, 114), ConcatVec(MakeVec4(80, 101, 110, 116), MakeVec4(97, 103, 111, 110)), ConcatVec(MakeVec4(72, 101, 120, 97), MakeVec3(103, 111, 110)), ConcatVec(MakeVec4(79, 99, 116, 97), MakeVec3(103, 111, 110)))), MakeVec4(ConcatVec(MakeVec4(67, 114, 111, 115), MakeVec1(115)), ConcatVec(MakeVec4(72, 101, 97, 114), MakeVec1(116)), ConcatVec(MakeVec4(65, 114, 114, 111), MakeVec1(119)), ConcatVec(MakeVec4(83, 112, 105, 114), MakeVec2(97, 108)))), MakeVec1(ConcatVec(MakeVec4(73, 110, 102, 105), MakeVec4(110, 105, 116, 121))));
    assume $IsValid'vec'vec'u8'''($t35);

    // trace_local[$t73]($t35) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:432:51+11
    assume {:print "$track_local(104,3,5):", $t35} $t35 == $t35;

    // $t36 := vector::borrow<vector<u8>>($t35, $t34) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:432:35+41
    call $t36 := $1_vector_borrow'vec'u8''($t35, $t34);
    if ($abort_flag) {
        assume {:print "$at(2,18254,18295)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t37 := string::utf8($t36) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:432:21+56
    call $t37 := $1_string_utf8($t36);
    if ($abort_flag) {
        assume {:print "$at(2,18240,18296)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[shape]($t37) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:432:21+56
    assume {:print "$track_local(104,3,6):", $t37} $t37 == $t37;

    // $t38 := 16 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:435:50+2
    assume {:print "$at(2,18420,18422)"} true;
    $t38 := 16;
    assume $IsValid'u8'($t38);

    // $t39 := <<($t1, $t38) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:435:37+16
    call $t39 := $ShlU64($t1, $t38);
    if ($abort_flag) {
        assume {:print "$at(2,18407,18423)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t40 := +($t0, $t39) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:435:30+23
    call $t40 := $AddU64($t0, $t39);
    if ($abort_flag) {
        assume {:print "$at(2,18400,18423)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t41 := 12288 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:435:56+6
    $t41 := 12288;
    assume $IsValid'u64'($t41);

    // $t42 := +($t40, $t41) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:435:30+32
    call $t42 := $AddU64($t40, $t41);
    if ($abort_flag) {
        assume {:print "$at(2,18400,18432)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[$t7]($t42) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:435:30+32
    assume {:print "$track_local(104,3,4):", $t42} $t42 == $t42;

    // $t43 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:436:61+17
    assume {:print "$at(2,18494,18511)"} true;
    $t43 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t43);

    // trace_local[$t85]($t43) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:436:61+17
    assume {:print "$track_local(104,3,7):", $t43} $t43 == $t43;

    // $t44 := vector::length<vector<u8>>($t43) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:436:45+34
    call $t44 := $1_vector_length'vec'u8''($t43);
    if ($abort_flag) {
        assume {:print "$at(2,18478,18512)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t45 := %($t42, $t44) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:436:27+53
    call $t45 := $Mod($t42, $t44);
    if ($abort_flag) {
        assume {:print "$at(2,18460,18513)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[$t16]($t45) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:436:27+53
    assume {:print "$track_local(104,3,8):", $t45} $t45 == $t45;

    // $t46 := 1000003 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:437:58+7
    assume {:print "$at(2,18572,18579)"} true;
    $t46 := 1000003;
    assume $IsValid'u64'($t46);

    // $t47 := *($t1, $t46) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:437:46+20
    call $t47 := $MulU64($t1, $t46);
    if ($abort_flag) {
        assume {:print "$at(2,18560,18580)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t48 := ^($t42, $t47) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:437:28+39
    call $t48 := $XorBv64($int2bv.64($t42), $int2bv.64($t47));

    // $t49 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:437:86+17
    $t49 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t49);

    // trace_local[$t94]($t49) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:437:86+17
    assume {:print "$track_local(104,3,9):", $t49} $t49 == $t49;

    // $t50 := vector::length<vector<u8>>($t49) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:437:70+34
    call $t50 := $int2bv64($1_vector_$length'vec'bv8''($t49));
    call $t50 := $1_vector_$length'vec'bv8''($t49);
    if ($abort_flag) {
        assume {:print "$at(2,18584,18618)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t51 := %($t48, $t50) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:437:27+78
    call $t51 := $ModBv64($t48, $t50);
    if ($abort_flag) {
        assume {:print "$at(2,18541,18619)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[$t83]($t51) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:437:27+78
    assume {:print "$track_local(104,3,10):", $t51} $t51 == $t51;

    // $t52 := 2000003 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:438:58+7
    assume {:print "$at(2,18678,18685)"} true;
    $t52 := 2000003;
    assume $IsValid'u64'($t52);

    // $t53 := *($t1, $t52) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:438:46+20
    call $t53 := $MulU64($t1, $t52);
    if ($abort_flag) {
        assume {:print "$at(2,18666,18686)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t54 := ^($t42, $t53) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:438:28+39
    call $t54 := $XorBv64($int2bv.64($t42), $int2bv.64($t53));

    // $t55 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:438:86+17
    $t55 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t55);

    // trace_local[$t103]($t55) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:438:86+17
    assume {:print "$track_local(104,3,11):", $t55} $t55 == $t55;

    // $t56 := vector::length<vector<u8>>($t55) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:438:70+34
    call $t56 := $int2bv64($1_vector_$length'vec'bv8''($t55));
    call $t56 := $1_vector_$length'vec'bv8''($t55);
    if ($abort_flag) {
        assume {:print "$at(2,18690,18724)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t57 := %($t54, $t56) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:438:27+78
    call $t57 := $ModBv64($t54, $t56);
    if ($abort_flag) {
        assume {:print "$at(2,18647,18725)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[$t7]($t57) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:438:27+78
    assume {:print "$track_local(104,3,4):", $t57} $t57 == $t57;

    // $t58 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:440:51+17
    assume {:print "$at(2,18786,18803)"} true;
    $t58 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t58);

    // trace_local[$t108]($t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:440:51+17
    assume {:print "$track_local(104,3,12):", $t58} $t58 == $t58;

    // $t59 := vector::borrow<vector<u8>>($t58, $t45) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:440:35+47
    call $t59 := $1_vector_borrow'vec'u8''($t58, $t45);
    if ($abort_flag) {
        assume {:print "$at(2,18770,18817)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t60 := string::utf8($t59) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:440:21+62
    call $t60 := $1_string_utf8($t59);
    if ($abort_flag) {
        assume {:print "$at(2,18756,18818)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t61 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:441:51+17
    assume {:print "$at(2,18870,18887)"} true;
    $t61 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t61);

    // trace_local[$t113]($t61) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:441:51+17
    assume {:print "$track_local(104,3,13):", $t61} $t61 == $t61;

    // $t62 := vector::borrow<vector<u8>>($t61, $t51) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:441:35+47
    call $t62 := $1_vector_borrow'vec'u8''($t61, $bv2int.64($t51));
    if ($abort_flag) {
        assume {:print "$at(2,18854,18901)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t63 := string::utf8($t62) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:441:21+62
    call $t63 := $1_string_utf8($t62);
    if ($abort_flag) {
        assume {:print "$at(2,18840,18902)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[word2]($t63) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:441:21+62
    assume {:print "$track_local(104,3,14):", $t63} $t63 == $t63;

    // $t64 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:442:51+17
    assume {:print "$at(2,18954,18971)"} true;
    $t64 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t64);

    // trace_local[$t118]($t64) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:442:51+17
    assume {:print "$track_local(104,3,15):", $t64} $t64 == $t64;

    // $t65 := vector::borrow<vector<u8>>($t64, $t57) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:442:35+47
    call $t65 := $1_vector_borrow'vec'u8''($t64, $bv2int.64($t57));
    if ($abort_flag) {
        assume {:print "$at(2,18938,18985)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t66 := string::utf8($t65) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:442:21+62
    call $t66 := $1_string_utf8($t65);
    if ($abort_flag) {
        assume {:print "$at(2,18924,18986)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // trace_local[word3]($t66) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:442:21+62
    assume {:print "$track_local(104,3,16):", $t66} $t66 == $t66;

    // $t17 := $t60 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:444:32+5
    assume {:print "$at(2,19028,19033)"} true;
    $t17 := $t60;

    // trace_local[word_combination]($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:444:32+5
    assume {:print "$track_local(104,3,17):", $t17} $t17 == $t17;

    // $t67 := borrow_local($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:445:24+21
    assume {:print "$at(2,19058,19079)"} true;
    $t67 := $Mutation($Local(17), EmptyVec(), $t17);

    // $t68 := [32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:445:60+4
    $t68 := MakeVec1(32);
    assume $IsValid'vec'u8''($t68);

    // $t69 := string::utf8($t68) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:445:47+18
    call $t69 := $1_string_utf8($t68);
    if ($abort_flag) {
        assume {:print "$at(2,19081,19099)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // string::append($t67, $t69) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:445:9+57
    call $t67 := $1_string_append($t67, $t69);
    if ($abort_flag) {
        assume {:print "$at(2,19043,19100)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // write_back[LocalRoot($t17)@]($t67) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:445:9+57
    $t17 := $Dereference($t67);

    // trace_local[word_combination]($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:445:9+57
    assume {:print "$track_local(104,3,17):", $t17} $t17 == $t17;

    // $t70 := borrow_local($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:446:24+21
    assume {:print "$at(2,19125,19146)"} true;
    $t70 := $Mutation($Local(17), EmptyVec(), $t17);

    // string::append($t70, $t63) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:446:9+44
    call $t70 := $1_string_append($t70, $t63);
    if ($abort_flag) {
        assume {:print "$at(2,19110,19154)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // write_back[LocalRoot($t17)@]($t70) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:446:9+44
    $t17 := $Dereference($t70);

    // trace_local[word_combination]($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:446:9+44
    assume {:print "$track_local(104,3,17):", $t17} $t17 == $t17;

    // $t71 := borrow_local($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:447:24+21
    assume {:print "$at(2,19179,19200)"} true;
    $t71 := $Mutation($Local(17), EmptyVec(), $t17);

    // $t72 := [32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:447:60+4
    $t72 := MakeVec1(32);
    assume $IsValid'vec'u8''($t72);

    // $t73 := string::utf8($t72) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:447:47+18
    call $t73 := $1_string_utf8($t72);
    if ($abort_flag) {
        assume {:print "$at(2,19202,19220)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // string::append($t71, $t73) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:447:9+57
    call $t71 := $1_string_append($t71, $t73);
    if ($abort_flag) {
        assume {:print "$at(2,19164,19221)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // write_back[LocalRoot($t17)@]($t71) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:447:9+57
    $t17 := $Dereference($t71);

    // trace_local[word_combination]($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:447:9+57
    assume {:print "$track_local(104,3,17):", $t17} $t17 == $t17;

    // $t74 := borrow_local($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:448:24+21
    assume {:print "$at(2,19246,19267)"} true;
    $t74 := $Mutation($Local(17), EmptyVec(), $t17);

    // string::append($t74, $t66) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:448:9+44
    call $t74 := $1_string_append($t74, $t66);
    if ($abort_flag) {
        assume {:print "$at(2,19231,19275)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // write_back[LocalRoot($t17)@]($t74) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:448:9+44
    $t17 := $Dereference($t74);

    // trace_local[word_combination]($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:448:9+44
    assume {:print "$track_local(104,3,17):", $t17} $t17 == $t17;

    // $t75 := move($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:453:13+16
    assume {:print "$at(2,19361,19377)"} true;
    $t75 := $t17;

    // $t76 := pack 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata($t3, $t37, $t75, $t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:450:9+124
    assume {:print "$at(2,19286,19410)"} true;
    $t76 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata($t3, $t37, $t75, $t1);

    // trace_return[0]($t76) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:396:75+2614
    assume {:print "$at(2,16802,19416)"} true;
    assume {:print "$track_return(104,3,0):", $t76} $t76 == $t76;

    // goto L25 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:396:75+2614
    goto L25;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:402:20+8
    assume {:print "$at(2,17087,17095)"} true;
L0:

    // $t77 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:402:32+1
    assume {:print "$at(2,17099,17100)"} true;
    $t77 := 1;
    assume $IsValid'u64'($t77);

    // $t78 := ==($t25, $t77) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:402:20+13
    $t78 := $IsEqual'u64'($t25, $t77);

    // if ($t78) goto L3 else goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:402:16+869
    if ($t78) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:403:26+13
    assume {:print "$at(2,17129,17142)"} true;
L3:

    // $t79 := [35, 48, 48, 56, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:403:26+13
    assume {:print "$at(2,17129,17142)"} true;
    $t79 := ConcatVec(MakeVec4(35, 48, 48, 56), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t79);

    // $t80 := string::utf8($t79) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:403:13+27
    call $t80 := $1_string_utf8($t79);
    if ($abort_flag) {
        assume {:print "$at(2,17116,17143)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t80 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:403:13+27
    $t3 := $t80;

    // trace_local[background_color]($t80) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:403:13+27
    assume {:print "$track_local(104,3,3):", $t80} $t80 == $t80;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:403:13+27
    goto L4;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:404:20+8
    assume {:print "$at(2,17163,17171)"} true;
L2:

    // $t81 := 2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:404:32+1
    assume {:print "$at(2,17175,17176)"} true;
    $t81 := 2;
    assume $IsValid'u64'($t81);

    // $t82 := ==($t25, $t81) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:404:20+13
    $t82 := $IsEqual'u64'($t25, $t81);

    // if ($t82) goto L6 else goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:404:16+793
    if ($t82) { goto L6; } else { goto L5; }

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:405:26+12
    assume {:print "$at(2,17205,17217)"} true;
L6:

    // $t83 := [35, 56, 48, 48, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:405:26+12
    assume {:print "$at(2,17205,17217)"} true;
    $t83 := ConcatVec(MakeVec4(35, 56, 48, 48), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t83);

    // $t84 := string::utf8($t83) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:405:13+26
    call $t84 := $1_string_utf8($t83);
    if ($abort_flag) {
        assume {:print "$at(2,17192,17218)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t84 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:405:13+26
    $t3 := $t84;

    // trace_local[background_color]($t84) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:405:13+26
    assume {:print "$track_local(104,3,3):", $t84} $t84 == $t84;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:405:13+26
    goto L4;

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:406:20+8
    assume {:print "$at(2,17238,17246)"} true;
L5:

    // $t85 := 3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:406:32+1
    assume {:print "$at(2,17250,17251)"} true;
    $t85 := 3;
    assume $IsValid'u64'($t85);

    // $t86 := ==($t25, $t85) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:406:20+13
    $t86 := $IsEqual'u64'($t25, $t85);

    // if ($t86) goto L8 else goto L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:406:16+718
    if ($t86) { goto L8; } else { goto L7; }

    // label L8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:407:26+11
    assume {:print "$at(2,17280,17291)"} true;
L8:

    // $t87 := [35, 48, 48, 70, 70, 56, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:407:26+11
    assume {:print "$at(2,17280,17291)"} true;
    $t87 := ConcatVec(MakeVec4(35, 48, 48, 70), MakeVec3(70, 56, 48));
    assume $IsValid'vec'u8''($t87);

    // $t88 := string::utf8($t87) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:407:13+25
    call $t88 := $1_string_utf8($t87);
    if ($abort_flag) {
        assume {:print "$at(2,17267,17292)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t88 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:407:13+25
    $t3 := $t88;

    // trace_local[background_color]($t88) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:407:13+25
    assume {:print "$track_local(104,3,3):", $t88} $t88 == $t88;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:407:13+25
    goto L4;

    // label L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:408:20+8
    assume {:print "$at(2,17312,17320)"} true;
L7:

    // $t89 := 4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:408:32+1
    assume {:print "$at(2,17324,17325)"} true;
    $t89 := 4;
    assume $IsValid'u64'($t89);

    // $t90 := ==($t25, $t89) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:408:20+13
    $t90 := $IsEqual'u64'($t25, $t89);

    // if ($t90) goto L10 else goto L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:408:16+644
    if ($t90) { goto L10; } else { goto L9; }

    // label L10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:409:26+13
    assume {:print "$at(2,17354,17367)"} true;
L10:

    // $t91 := [35, 70, 70, 56, 48, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:409:26+13
    assume {:print "$at(2,17354,17367)"} true;
    $t91 := ConcatVec(MakeVec4(35, 70, 70, 56), MakeVec3(48, 48, 48));
    assume $IsValid'vec'u8''($t91);

    // $t92 := string::utf8($t91) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:409:13+27
    call $t92 := $1_string_utf8($t91);
    if ($abort_flag) {
        assume {:print "$at(2,17341,17368)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t92 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:409:13+27
    $t3 := $t92;

    // trace_local[background_color]($t92) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:409:13+27
    assume {:print "$track_local(104,3,3):", $t92} $t92 == $t92;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:409:13+27
    goto L4;

    // label L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:410:20+8
    assume {:print "$at(2,17388,17396)"} true;
L9:

    // $t93 := 5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:410:32+1
    assume {:print "$at(2,17400,17401)"} true;
    $t93 := 5;
    assume $IsValid'u64'($t93);

    // $t94 := ==($t25, $t93) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:410:20+13
    $t94 := $IsEqual'u64'($t25, $t93);

    // if ($t94) goto L12 else goto L11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:410:16+568
    if ($t94) { goto L12; } else { goto L11; }

    // label L12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:411:26+11
    assume {:print "$at(2,17430,17441)"} true;
L12:

    // $t95 := [35, 70, 70, 70, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:411:26+11
    assume {:print "$at(2,17430,17441)"} true;
    $t95 := ConcatVec(MakeVec4(35, 70, 70, 70), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t95);

    // $t96 := string::utf8($t95) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:411:13+25
    call $t96 := $1_string_utf8($t95);
    if ($abort_flag) {
        assume {:print "$at(2,17417,17442)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t96 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:411:13+25
    $t3 := $t96;

    // trace_local[background_color]($t96) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:411:13+25
    assume {:print "$track_local(104,3,3):", $t96} $t96 == $t96;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:411:13+25
    goto L4;

    // label L11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:412:20+8
    assume {:print "$at(2,17462,17470)"} true;
L11:

    // $t97 := 6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:412:32+1
    assume {:print "$at(2,17474,17475)"} true;
    $t97 := 6;
    assume $IsValid'u64'($t97);

    // $t98 := ==($t25, $t97) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:412:20+13
    $t98 := $IsEqual'u64'($t25, $t97);

    // if ($t98) goto L14 else goto L13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:412:16+494
    if ($t98) { goto L14; } else { goto L13; }

    // label L14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:413:26+11
    assume {:print "$at(2,17504,17515)"} true;
L14:

    // $t99 := [35, 70, 70, 48, 48, 52, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:413:26+11
    assume {:print "$at(2,17504,17515)"} true;
    $t99 := ConcatVec(MakeVec4(35, 70, 70, 48), MakeVec3(48, 52, 48));
    assume $IsValid'vec'u8''($t99);

    // $t100 := string::utf8($t99) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:413:13+25
    call $t100 := $1_string_utf8($t99);
    if ($abort_flag) {
        assume {:print "$at(2,17491,17516)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t100 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:413:13+25
    $t3 := $t100;

    // trace_local[background_color]($t100) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:413:13+25
    assume {:print "$track_local(104,3,3):", $t100} $t100 == $t100;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:413:13+25
    goto L4;

    // label L13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:414:20+8
    assume {:print "$at(2,17536,17544)"} true;
L13:

    // $t101 := 7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:414:32+1
    assume {:print "$at(2,17548,17549)"} true;
    $t101 := 7;
    assume $IsValid'u64'($t101);

    // $t102 := ==($t25, $t101) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:414:20+13
    $t102 := $IsEqual'u64'($t25, $t101);

    // if ($t102) goto L16 else goto L15 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:414:16+420
    if ($t102) { goto L16; } else { goto L15; }

    // label L16 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:415:26+11
    assume {:print "$at(2,17578,17589)"} true;
L16:

    // $t103 := [35, 48, 48, 70, 70, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:415:26+11
    assume {:print "$at(2,17578,17589)"} true;
    $t103 := ConcatVec(MakeVec4(35, 48, 48, 70), MakeVec3(70, 70, 70));
    assume $IsValid'vec'u8''($t103);

    // $t104 := string::utf8($t103) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:415:13+25
    call $t104 := $1_string_utf8($t103);
    if ($abort_flag) {
        assume {:print "$at(2,17565,17590)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t104 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:415:13+25
    $t3 := $t104;

    // trace_local[background_color]($t104) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:415:13+25
    assume {:print "$track_local(104,3,3):", $t104} $t104 == $t104;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:415:13+25
    goto L4;

    // label L15 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:416:20+8
    assume {:print "$at(2,17610,17618)"} true;
L15:

    // $t105 := 8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:416:32+1
    assume {:print "$at(2,17622,17623)"} true;
    $t105 := 8;
    assume $IsValid'u64'($t105);

    // $t106 := ==($t25, $t105) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:416:20+13
    $t106 := $IsEqual'u64'($t25, $t105);

    // if ($t106) goto L18 else goto L17 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:416:16+346
    if ($t106) { goto L18; } else { goto L17; }

    // label L18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:417:26+9
    assume {:print "$at(2,17652,17661)"} true;
L18:

    // $t107 := [35, 70, 70, 52, 48, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:417:26+9
    assume {:print "$at(2,17652,17661)"} true;
    $t107 := ConcatVec(MakeVec4(35, 70, 70, 52), MakeVec3(48, 48, 48));
    assume $IsValid'vec'u8''($t107);

    // $t108 := string::utf8($t107) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:417:13+23
    call $t108 := $1_string_utf8($t107);
    if ($abort_flag) {
        assume {:print "$at(2,17639,17662)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t108 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:417:13+23
    $t3 := $t108;

    // trace_local[background_color]($t108) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:417:13+23
    assume {:print "$track_local(104,3,3):", $t108} $t108 == $t108;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:417:13+23
    goto L4;

    // label L17 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:418:20+8
    assume {:print "$at(2,17682,17690)"} true;
L17:

    // $t109 := 9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:418:32+1
    assume {:print "$at(2,17694,17695)"} true;
    $t109 := 9;
    assume $IsValid'u64'($t109);

    // $t110 := ==($t25, $t109) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:418:20+13
    $t110 := $IsEqual'u64'($t25, $t109);

    // if ($t110) goto L20 else goto L19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:418:16+274
    if ($t110) { goto L20; } else { goto L19; }

    // label L20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:419:26+9
    assume {:print "$at(2,17724,17733)"} true;
L20:

    // $t111 := [35, 56, 48, 70, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:419:26+9
    assume {:print "$at(2,17724,17733)"} true;
    $t111 := ConcatVec(MakeVec4(35, 56, 48, 70), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t111);

    // $t112 := string::utf8($t111) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:419:13+23
    call $t112 := $1_string_utf8($t111);
    if ($abort_flag) {
        assume {:print "$at(2,17711,17734)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t112 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:419:13+23
    $t3 := $t112;

    // trace_local[background_color]($t112) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:419:13+23
    assume {:print "$track_local(104,3,3):", $t112} $t112 == $t112;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:419:13+23
    goto L4;

    // label L19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:420:20+8
    assume {:print "$at(2,17754,17762)"} true;
L19:

    // $t113 := 10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:420:32+2
    assume {:print "$at(2,17766,17768)"} true;
    $t113 := 10;
    assume $IsValid'u64'($t113);

    // $t114 := ==($t25, $t113) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:420:20+14
    $t114 := $IsEqual'u64'($t25, $t113);

    // if ($t114) goto L22 else goto L21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:420:16+202
    if ($t114) { goto L22; } else { goto L21; }

    // label L22 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:421:26+11
    assume {:print "$at(2,17797,17808)"} true;
L22:

    // $t115 := [35, 52, 48, 48, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:421:26+11
    assume {:print "$at(2,17797,17808)"} true;
    $t115 := ConcatVec(MakeVec4(35, 52, 48, 48), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t115);

    // $t116 := string::utf8($t115) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:421:13+25
    call $t116 := $1_string_utf8($t115);
    if ($abort_flag) {
        assume {:print "$at(2,17784,17809)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t116 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:421:13+25
    $t3 := $t116;

    // trace_local[background_color]($t116) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:421:13+25
    assume {:print "$track_local(104,3,3):", $t116} $t116 == $t116;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:421:13+25
    goto L4;

    // label L21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:422:20+8
    assume {:print "$at(2,17829,17837)"} true;
L21:

    // $t117 := 11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:422:32+2
    assume {:print "$at(2,17841,17843)"} true;
    $t117 := 11;
    assume $IsValid'u64'($t117);

    // $t118 := ==($t25, $t117) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:422:20+14
    $t118 := $IsEqual'u64'($t25, $t117);

    // if ($t118) goto L24 else goto L23 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:422:16+127
    if ($t118) { goto L24; } else { goto L23; }

    // label L24 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:423:26+13
    assume {:print "$at(2,17872,17885)"} true;
L24:

    // $t119 := [35, 67, 48, 67, 48, 67, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:423:26+13
    assume {:print "$at(2,17872,17885)"} true;
    $t119 := ConcatVec(MakeVec4(35, 67, 48, 67), MakeVec3(48, 67, 48));
    assume $IsValid'vec'u8''($t119);

    // $t120 := string::utf8($t119) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:423:13+27
    call $t120 := $1_string_utf8($t119);
    if ($abort_flag) {
        assume {:print "$at(2,17859,17886)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t120 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:423:13+27
    $t3 := $t120;

    // trace_local[background_color]($t120) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:423:13+27
    assume {:print "$track_local(104,3,3):", $t120} $t120 == $t120;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:423:13+27
    goto L4;

    // label L23 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:425:26+12
    assume {:print "$at(2,17929,17941)"} true;
L23:

    // $t121 := [35, 70, 70, 66, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:425:26+12
    assume {:print "$at(2,17929,17941)"} true;
    $t121 := ConcatVec(MakeVec4(35, 70, 70, 66), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t121);

    // $t122 := string::utf8($t121) on_abort goto L26 with $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:425:13+26
    call $t122 := $1_string_utf8($t121);
    if ($abort_flag) {
        assume {:print "$at(2,17916,17942)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(104,3):", $t20} $t20 == $t20;
        goto L26;
    }

    // $t3 := $t122 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:425:13+26
    $t3 := $t122;

    // trace_local[background_color]($t122) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:425:13+26
    assume {:print "$track_local(104,3,3):", $t122} $t122 == $t122;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:425:13+26
    goto L4;

    // label L25 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:456:5+1
    assume {:print "$at(2,19415,19416)"} true;
L25:

    // return $t76 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:456:5+1
    assume {:print "$at(2,19415,19416)"} true;
    $ret0 := $t76;
    return;

    // label L26 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:456:5+1
L26:

    // abort($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:456:5+1
    assume {:print "$at(2,19415,19416)"} true;
    $abort_code := $t20;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::generate_random_metadata [baseline] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:459:5+2592
procedure {:inline 1} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_generate_random_metadata(_$t0: int, _$t1: int) returns ($ret0: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata)
{
    // declare local variables
    var $t2: int;
    var $t3: $1_string_String;
    var $t4: int;
    var $t5: Vec (Vec (int));
    var $t6: $1_string_String;
    var $t7: Vec (Vec (int));
    var $t8: int;
    var $t9: Vec (Vec (int));
    var $t10: int;
    var $t11: Vec (Vec (int));
    var $t12: Vec (Vec (int));
    var $t13: $1_string_String;
    var $t14: Vec (Vec (int));
    var $t15: Vec (Vec (int));
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: Vec (int);
    var $t27: $1_string_String;
    var $t28: int;
    var $t29: int;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: Vec (Vec (int));
    var $t34: Vec (int);
    var $t35: $1_string_String;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: int;
    var $t40: int;
    var $t41: Vec (Vec (int));
    var $t42: int;
    var $t43: int;
    var $t44: int;
    var $t45: int;
    var $t46: bv64;
    var $t47: Vec (Vec (int));
    var $t48: bv64;
    var $t49: bv64;
    var $t50: int;
    var $t51: int;
    var $t52: bv64;
    var $t53: Vec (Vec (int));
    var $t54: bv64;
    var $t55: bv64;
    var $t56: Vec (Vec (int));
    var $t57: Vec (int);
    var $t58: $Mutation ($1_string_String);
    var $t59: Vec (int);
    var $t60: $1_string_String;
    var $t61: $Mutation ($1_string_String);
    var $t62: Vec (Vec (int));
    var $t63: Vec (int);
    var $t64: $1_string_String;
    var $t65: $Mutation ($1_string_String);
    var $t66: Vec (int);
    var $t67: $1_string_String;
    var $t68: $Mutation ($1_string_String);
    var $t69: Vec (Vec (int));
    var $t70: Vec (int);
    var $t71: $1_string_String;
    var $t72: $1_string_String;
    var $t73: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $t74: int;
    var $t75: bool;
    var $t76: Vec (int);
    var $t77: $1_string_String;
    var $t78: int;
    var $t79: bool;
    var $t80: Vec (int);
    var $t81: $1_string_String;
    var $t82: int;
    var $t83: bool;
    var $t84: Vec (int);
    var $t85: $1_string_String;
    var $t86: int;
    var $t87: bool;
    var $t88: Vec (int);
    var $t89: $1_string_String;
    var $t90: int;
    var $t91: bool;
    var $t92: Vec (int);
    var $t93: $1_string_String;
    var $t94: int;
    var $t95: bool;
    var $t96: Vec (int);
    var $t97: $1_string_String;
    var $t98: int;
    var $t99: bool;
    var $t100: Vec (int);
    var $t101: $1_string_String;
    var $t102: int;
    var $t103: bool;
    var $t104: Vec (int);
    var $t105: $1_string_String;
    var $t106: int;
    var $t107: bool;
    var $t108: Vec (int);
    var $t109: $1_string_String;
    var $t110: int;
    var $t111: bool;
    var $t112: Vec (int);
    var $t113: $1_string_String;
    var $t114: int;
    var $t115: bool;
    var $t116: Vec (int);
    var $t117: $1_string_String;
    var $t118: Vec (int);
    var $t119: $1_string_String;
    var $t0: int;
    var $t1: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $temp_0'u64': int;
    var $temp_0'bv64': bv64;
    var $temp_0'vec'vec'u8''': Vec (Vec (int));
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[seed]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:459:5+1
    assume {:print "$at(2,19492,19493)"} true;
    assume {:print "$track_local(104,4,0):", $t0} $t0 == $t0;

    // trace_local[token_id]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:459:5+1
    assume {:print "$track_local(104,4,1):", $t1} $t1 == $t1;

    // $t16 := 4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:461:43+1
    assume {:print "$at(2,19686,19687)"} true;
    $t16 := 4;
    assume $IsValid'u8'($t16);

    // $t17 := <<($t1, $t16) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:461:30+15
    call $t17 := $ShlU64($t1, $t16);
    if ($abort_flag) {
        assume {:print "$at(2,19673,19688)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t19 := +($t0, $t17) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:461:23+22
    call $t19 := $AddU64($t0, $t17);
    if ($abort_flag) {
        assume {:print "$at(2,19666,19688)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t20 := 4096 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:461:48+6
    $t20 := 4096;
    assume $IsValid'u64'($t20);

    // $t21 := +($t19, $t20) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:461:23+31
    call $t21 := $AddU64($t19, $t20);
    if ($abort_flag) {
        assume {:print "$at(2,19666,19697)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t22 := 13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:462:35+2
    assume {:print "$at(2,19733,19735)"} true;
    $t22 := 13;
    assume $IsValid'u64'($t22);

    // $t23 := %($t21, $t22) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:462:24+14
    call $t23 := $Mod($t21, $t22);
    if ($abort_flag) {
        assume {:print "$at(2,19722,19736)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // trace_local[$t5]($t23) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:462:24+14
    assume {:print "$track_local(104,4,2):", $t23} $t23 == $t23;

    // $t24 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:463:48+1
    assume {:print "$at(2,19785,19786)"} true;
    $t24 := 0;
    assume $IsValid'u64'($t24);

    // $t25 := ==($t23, $t24) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:463:36+13
    $t25 := $IsEqual'u64'($t23, $t24);

    // if ($t25) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:463:32+941
    if ($t25) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:464:26+9
    assume {:print "$at(2,19815,19824)"} true;
L1:

    // $t26 := [35, 70, 70, 48, 48, 56, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:464:26+9
    assume {:print "$at(2,19815,19824)"} true;
    $t26 := ConcatVec(MakeVec4(35, 70, 70, 48), MakeVec3(48, 56, 48));
    assume $IsValid'vec'u8''($t26);

    // $t27 := string::utf8($t26) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:464:13+23
    call $t27 := $1_string_utf8($t26);
    if ($abort_flag) {
        assume {:print "$at(2,19802,19825)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t27 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:464:13+23
    $t3 := $t27;

    // trace_local[background_color]($t27) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:464:13+23
    assume {:print "$track_local(104,4,3):", $t27} $t27 == $t27;

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:493:27+8
    assume {:print "$at(2,20898,20906)"} true;
L4:

    // $t28 := 3571 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:493:38+4
    assume {:print "$at(2,20909,20913)"} true;
    $t28 := 3571;
    assume $IsValid'u64'($t28);

    // $t29 := *($t1, $t28) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:493:26+17
    call $t29 := $MulU64($t1, $t28);
    if ($abort_flag) {
        assume {:print "$at(2,20897,20914)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t30 := 7810 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:493:46+4
    $t30 := 7810;
    assume $IsValid'u64'($t30);

    // $t31 := %($t29, $t30) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:493:26+24
    call $t31 := $Mod($t29, $t30);
    if ($abort_flag) {
        assume {:print "$at(2,20897,20921)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t32 := retro_nft_generator_da::get_shape_index($t31) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:494:27+27
    assume {:print "$at(2,20949,20976)"} true;
    call $t32 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shape_index($t31);
    if ($abort_flag) {
        assume {:print "$at(2,20949,20976)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // trace_local[$t7]($t32) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:494:27+27
    assume {:print "$track_local(104,4,4):", $t32} $t32 == $t32;

    // $t33 := ["[67, 105, 114, 99, 108, 101]", "[83, 113, 117, 97, 114, 101]", "[84, 114, 105, 97, 110, 103, 108, 101]", "[68, 105, 97, 109, 111, 110, 100]", "[83, 116, 97, 114]", "[80, 101, 110, 116, 97, 103, 111, 110]", "[72, 101, 120, 97, 103, 111, 110]", "[79, 99, 116, 97, 103, 111, 110]", "[67, 114, 111, 115, 115]", "[72, 101, 97, 114, 116]", "[65, 114, 114, 111, 119]", "[83, 112, 105, 114, 97, 108]", "[73, 110, 102, 105, 110, 105, 116, 121]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:495:51+11
    assume {:print "$at(2,21028,21039)"} true;
    $t33 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(ConcatVec(MakeVec4(67, 105, 114, 99), MakeVec2(108, 101)), ConcatVec(MakeVec4(83, 113, 117, 97), MakeVec2(114, 101)), ConcatVec(MakeVec4(84, 114, 105, 97), MakeVec4(110, 103, 108, 101)), ConcatVec(MakeVec4(68, 105, 97, 109), MakeVec3(111, 110, 100))), MakeVec4(MakeVec4(83, 116, 97, 114), ConcatVec(MakeVec4(80, 101, 110, 116), MakeVec4(97, 103, 111, 110)), ConcatVec(MakeVec4(72, 101, 120, 97), MakeVec3(103, 111, 110)), ConcatVec(MakeVec4(79, 99, 116, 97), MakeVec3(103, 111, 110)))), MakeVec4(ConcatVec(MakeVec4(67, 114, 111, 115), MakeVec1(115)), ConcatVec(MakeVec4(72, 101, 97, 114), MakeVec1(116)), ConcatVec(MakeVec4(65, 114, 114, 111), MakeVec1(119)), ConcatVec(MakeVec4(83, 112, 105, 114), MakeVec2(97, 108)))), MakeVec1(ConcatVec(MakeVec4(73, 110, 102, 105), MakeVec4(110, 105, 116, 121))));
    assume $IsValid'vec'vec'u8'''($t33);

    // trace_local[$t73]($t33) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:495:51+11
    assume {:print "$track_local(104,4,5):", $t33} $t33 == $t33;

    // $t34 := vector::borrow<vector<u8>>($t33, $t32) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:495:35+41
    call $t34 := $1_vector_borrow'vec'u8''($t33, $t32);
    if ($abort_flag) {
        assume {:print "$at(2,21012,21053)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t35 := string::utf8($t34) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:495:21+56
    call $t35 := $1_string_utf8($t34);
    if ($abort_flag) {
        assume {:print "$at(2,20998,21054)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // trace_local[shape]($t35) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:495:21+56
    assume {:print "$track_local(104,4,6):", $t35} $t35 == $t35;

    // $t36 := 16 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:498:50+2
    assume {:print "$at(2,21178,21180)"} true;
    $t36 := 16;
    assume $IsValid'u8'($t36);

    // $t37 := <<($t1, $t36) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:498:37+16
    call $t37 := $ShlU64($t1, $t36);
    if ($abort_flag) {
        assume {:print "$at(2,21165,21181)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t38 := +($t0, $t37) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:498:30+23
    call $t38 := $AddU64($t0, $t37);
    if ($abort_flag) {
        assume {:print "$at(2,21158,21181)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t39 := 12288 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:498:56+6
    $t39 := 12288;
    assume $IsValid'u64'($t39);

    // $t40 := +($t38, $t39) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:498:30+32
    call $t40 := $AddU64($t38, $t39);
    if ($abort_flag) {
        assume {:print "$at(2,21158,21190)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // trace_local[$t7]($t40) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:498:30+32
    assume {:print "$track_local(104,4,4):", $t40} $t40 == $t40;

    // $t41 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:499:61+17
    assume {:print "$at(2,21252,21269)"} true;
    $t41 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t41);

    // trace_local[$t85]($t41) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:499:61+17
    assume {:print "$track_local(104,4,7):", $t41} $t41 == $t41;

    // $t42 := vector::length<vector<u8>>($t41) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:499:45+34
    call $t42 := $1_vector_length'vec'u8''($t41);
    if ($abort_flag) {
        assume {:print "$at(2,21236,21270)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t43 := %($t40, $t42) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:499:27+53
    call $t43 := $Mod($t40, $t42);
    if ($abort_flag) {
        assume {:print "$at(2,21218,21271)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // trace_local[$t16]($t43) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:499:27+53
    assume {:print "$track_local(104,4,8):", $t43} $t43 == $t43;

    // $t44 := 1000003 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:500:58+7
    assume {:print "$at(2,21330,21337)"} true;
    $t44 := 1000003;
    assume $IsValid'u64'($t44);

    // $t45 := *($t1, $t44) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:500:46+20
    call $t45 := $MulU64($t1, $t44);
    if ($abort_flag) {
        assume {:print "$at(2,21318,21338)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t46 := ^($t40, $t45) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:500:28+39
    call $t46 := $XorBv64($int2bv.64($t40), $int2bv.64($t45));

    // $t47 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:500:86+17
    $t47 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t47);

    // trace_local[$t94]($t47) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:500:86+17
    assume {:print "$track_local(104,4,9):", $t47} $t47 == $t47;

    // $t48 := vector::length<vector<u8>>($t47) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:500:70+34
    call $t48 := $int2bv64($1_vector_$length'vec'bv8''($t47));
    call $t48 := $1_vector_$length'vec'bv8''($t47);
    if ($abort_flag) {
        assume {:print "$at(2,21342,21376)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t49 := %($t46, $t48) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:500:27+78
    call $t49 := $ModBv64($t46, $t48);
    if ($abort_flag) {
        assume {:print "$at(2,21299,21377)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // trace_local[$t83]($t49) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:500:27+78
    assume {:print "$track_local(104,4,10):", $t49} $t49 == $t49;

    // $t50 := 2000003 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:501:58+7
    assume {:print "$at(2,21436,21443)"} true;
    $t50 := 2000003;
    assume $IsValid'u64'($t50);

    // $t51 := *($t1, $t50) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:501:46+20
    call $t51 := $MulU64($t1, $t50);
    if ($abort_flag) {
        assume {:print "$at(2,21424,21444)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t52 := ^($t40, $t51) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:501:28+39
    call $t52 := $XorBv64($int2bv.64($t40), $int2bv.64($t51));

    // $t53 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:501:86+17
    $t53 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t53);

    // trace_local[$t103]($t53) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:501:86+17
    assume {:print "$track_local(104,4,11):", $t53} $t53 == $t53;

    // $t54 := vector::length<vector<u8>>($t53) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:501:70+34
    call $t54 := $int2bv64($1_vector_$length'vec'bv8''($t53));
    call $t54 := $1_vector_$length'vec'bv8''($t53);
    if ($abort_flag) {
        assume {:print "$at(2,21448,21482)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t55 := %($t52, $t54) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:501:27+78
    call $t55 := $ModBv64($t52, $t54);
    if ($abort_flag) {
        assume {:print "$at(2,21405,21483)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // trace_local[$t7]($t55) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:501:27+78
    assume {:print "$track_local(104,4,4):", $t55} $t55 == $t55;

    // $t56 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:503:62+17
    assume {:print "$at(2,21555,21572)"} true;
    $t56 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t56);

    // trace_local[$t108]($t56) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:503:62+17
    assume {:print "$track_local(104,4,12):", $t56} $t56 == $t56;

    // $t57 := vector::borrow<vector<u8>>($t56, $t43) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:503:46+47
    call $t57 := $1_vector_borrow'vec'u8''($t56, $t43);
    if ($abort_flag) {
        assume {:print "$at(2,21539,21586)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t13 := string::utf8($t57) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:503:32+62
    call $t13 := $1_string_utf8($t57);
    if ($abort_flag) {
        assume {:print "$at(2,21525,21587)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // trace_local[word_combination]($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:503:32+62
    assume {:print "$track_local(104,4,13):", $t13} $t13 == $t13;

    // $t58 := borrow_local($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:504:24+21
    assume {:print "$at(2,21612,21633)"} true;
    $t58 := $Mutation($Local(13), EmptyVec(), $t13);

    // $t59 := [32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:504:60+4
    $t59 := MakeVec1(32);
    assume $IsValid'vec'u8''($t59);

    // $t60 := string::utf8($t59) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:504:47+18
    call $t60 := $1_string_utf8($t59);
    if ($abort_flag) {
        assume {:print "$at(2,21635,21653)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // string::append($t58, $t60) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:504:9+57
    call $t58 := $1_string_append($t58, $t60);
    if ($abort_flag) {
        assume {:print "$at(2,21597,21654)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // write_back[LocalRoot($t13)@]($t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:504:9+57
    $t13 := $Dereference($t58);

    // trace_local[word_combination]($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:504:9+57
    assume {:print "$track_local(104,4,13):", $t13} $t13 == $t13;

    // $t61 := borrow_local($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:505:24+21
    assume {:print "$at(2,21679,21700)"} true;
    $t61 := $Mutation($Local(13), EmptyVec(), $t13);

    // $t62 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:505:77+17
    $t62 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t62);

    // trace_local[$t117]($t62) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:505:77+17
    assume {:print "$track_local(104,4,14):", $t62} $t62 == $t62;

    // $t63 := vector::borrow<vector<u8>>($t62, $t49) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:505:61+47
    call $t63 := $1_vector_borrow'vec'u8''($t62, $bv2int.64($t49));
    if ($abort_flag) {
        assume {:print "$at(2,21716,21763)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t64 := string::utf8($t63) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:505:47+62
    call $t64 := $1_string_utf8($t63);
    if ($abort_flag) {
        assume {:print "$at(2,21702,21764)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // string::append($t61, $t64) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:505:9+101
    call $t61 := $1_string_append($t61, $t64);
    if ($abort_flag) {
        assume {:print "$at(2,21664,21765)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // write_back[LocalRoot($t13)@]($t61) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:505:9+101
    $t13 := $Dereference($t61);

    // trace_local[word_combination]($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:505:9+101
    assume {:print "$track_local(104,4,13):", $t13} $t13 == $t13;

    // $t65 := borrow_local($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:506:24+21
    assume {:print "$at(2,21790,21811)"} true;
    $t65 := $Mutation($Local(13), EmptyVec(), $t13);

    // $t66 := [32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:506:60+4
    $t66 := MakeVec1(32);
    assume $IsValid'vec'u8''($t66);

    // $t67 := string::utf8($t66) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:506:47+18
    call $t67 := $1_string_utf8($t66);
    if ($abort_flag) {
        assume {:print "$at(2,21813,21831)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // string::append($t65, $t67) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:506:9+57
    call $t65 := $1_string_append($t65, $t67);
    if ($abort_flag) {
        assume {:print "$at(2,21775,21832)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // write_back[LocalRoot($t13)@]($t65) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:506:9+57
    $t13 := $Dereference($t65);

    // trace_local[word_combination]($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:506:9+57
    assume {:print "$track_local(104,4,13):", $t13} $t13 == $t13;

    // $t68 := borrow_local($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:507:24+21
    assume {:print "$at(2,21857,21878)"} true;
    $t68 := $Mutation($Local(13), EmptyVec(), $t13);

    // $t69 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:507:77+17
    $t69 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t69);

    // trace_local[$t126]($t69) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:507:77+17
    assume {:print "$track_local(104,4,15):", $t69} $t69 == $t69;

    // $t70 := vector::borrow<vector<u8>>($t69, $t55) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:507:61+47
    call $t70 := $1_vector_borrow'vec'u8''($t69, $bv2int.64($t55));
    if ($abort_flag) {
        assume {:print "$at(2,21894,21941)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t71 := string::utf8($t70) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:507:47+62
    call $t71 := $1_string_utf8($t70);
    if ($abort_flag) {
        assume {:print "$at(2,21880,21942)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // string::append($t68, $t71) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:507:9+101
    call $t68 := $1_string_append($t68, $t71);
    if ($abort_flag) {
        assume {:print "$at(2,21842,21943)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // write_back[LocalRoot($t13)@]($t68) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:507:9+101
    $t13 := $Dereference($t68);

    // trace_local[word_combination]($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:507:9+101
    assume {:print "$track_local(104,4,13):", $t13} $t13 == $t13;

    // $t72 := move($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:512:13+16
    assume {:print "$at(2,22029,22045)"} true;
    $t72 := $t13;

    // $t73 := pack 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata($t3, $t35, $t72, $t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:509:9+124
    assume {:print "$at(2,21954,22078)"} true;
    $t73 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata($t3, $t35, $t72, $t1);

    // trace_return[0]($t73) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:459:73+2524
    assume {:print "$at(2,19560,22084)"} true;
    assume {:print "$track_return(104,4,0):", $t73} $t73 == $t73;

    // goto L25 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:459:73+2524
    goto L25;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:465:20+8
    assume {:print "$at(2,19845,19853)"} true;
L0:

    // $t74 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:465:32+1
    assume {:print "$at(2,19857,19858)"} true;
    $t74 := 1;
    assume $IsValid'u64'($t74);

    // $t75 := ==($t23, $t74) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:465:20+13
    $t75 := $IsEqual'u64'($t23, $t74);

    // if ($t75) goto L3 else goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:465:16+869
    if ($t75) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:466:26+13
    assume {:print "$at(2,19887,19900)"} true;
L3:

    // $t76 := [35, 48, 48, 56, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:466:26+13
    assume {:print "$at(2,19887,19900)"} true;
    $t76 := ConcatVec(MakeVec4(35, 48, 48, 56), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t76);

    // $t77 := string::utf8($t76) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:466:13+27
    call $t77 := $1_string_utf8($t76);
    if ($abort_flag) {
        assume {:print "$at(2,19874,19901)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t77 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:466:13+27
    $t3 := $t77;

    // trace_local[background_color]($t77) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:466:13+27
    assume {:print "$track_local(104,4,3):", $t77} $t77 == $t77;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:466:13+27
    goto L4;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:467:20+8
    assume {:print "$at(2,19921,19929)"} true;
L2:

    // $t78 := 2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:467:32+1
    assume {:print "$at(2,19933,19934)"} true;
    $t78 := 2;
    assume $IsValid'u64'($t78);

    // $t79 := ==($t23, $t78) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:467:20+13
    $t79 := $IsEqual'u64'($t23, $t78);

    // if ($t79) goto L6 else goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:467:16+793
    if ($t79) { goto L6; } else { goto L5; }

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:468:26+12
    assume {:print "$at(2,19963,19975)"} true;
L6:

    // $t80 := [35, 56, 48, 48, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:468:26+12
    assume {:print "$at(2,19963,19975)"} true;
    $t80 := ConcatVec(MakeVec4(35, 56, 48, 48), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t80);

    // $t81 := string::utf8($t80) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:468:13+26
    call $t81 := $1_string_utf8($t80);
    if ($abort_flag) {
        assume {:print "$at(2,19950,19976)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t81 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:468:13+26
    $t3 := $t81;

    // trace_local[background_color]($t81) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:468:13+26
    assume {:print "$track_local(104,4,3):", $t81} $t81 == $t81;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:468:13+26
    goto L4;

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:469:20+8
    assume {:print "$at(2,19996,20004)"} true;
L5:

    // $t82 := 3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:469:32+1
    assume {:print "$at(2,20008,20009)"} true;
    $t82 := 3;
    assume $IsValid'u64'($t82);

    // $t83 := ==($t23, $t82) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:469:20+13
    $t83 := $IsEqual'u64'($t23, $t82);

    // if ($t83) goto L8 else goto L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:469:16+718
    if ($t83) { goto L8; } else { goto L7; }

    // label L8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:470:26+11
    assume {:print "$at(2,20038,20049)"} true;
L8:

    // $t84 := [35, 48, 48, 70, 70, 56, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:470:26+11
    assume {:print "$at(2,20038,20049)"} true;
    $t84 := ConcatVec(MakeVec4(35, 48, 48, 70), MakeVec3(70, 56, 48));
    assume $IsValid'vec'u8''($t84);

    // $t85 := string::utf8($t84) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:470:13+25
    call $t85 := $1_string_utf8($t84);
    if ($abort_flag) {
        assume {:print "$at(2,20025,20050)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t85 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:470:13+25
    $t3 := $t85;

    // trace_local[background_color]($t85) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:470:13+25
    assume {:print "$track_local(104,4,3):", $t85} $t85 == $t85;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:470:13+25
    goto L4;

    // label L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:471:20+8
    assume {:print "$at(2,20070,20078)"} true;
L7:

    // $t86 := 4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:471:32+1
    assume {:print "$at(2,20082,20083)"} true;
    $t86 := 4;
    assume $IsValid'u64'($t86);

    // $t87 := ==($t23, $t86) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:471:20+13
    $t87 := $IsEqual'u64'($t23, $t86);

    // if ($t87) goto L10 else goto L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:471:16+644
    if ($t87) { goto L10; } else { goto L9; }

    // label L10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:472:26+13
    assume {:print "$at(2,20112,20125)"} true;
L10:

    // $t88 := [35, 70, 70, 56, 48, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:472:26+13
    assume {:print "$at(2,20112,20125)"} true;
    $t88 := ConcatVec(MakeVec4(35, 70, 70, 56), MakeVec3(48, 48, 48));
    assume $IsValid'vec'u8''($t88);

    // $t89 := string::utf8($t88) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:472:13+27
    call $t89 := $1_string_utf8($t88);
    if ($abort_flag) {
        assume {:print "$at(2,20099,20126)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t89 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:472:13+27
    $t3 := $t89;

    // trace_local[background_color]($t89) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:472:13+27
    assume {:print "$track_local(104,4,3):", $t89} $t89 == $t89;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:472:13+27
    goto L4;

    // label L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:473:20+8
    assume {:print "$at(2,20146,20154)"} true;
L9:

    // $t90 := 5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:473:32+1
    assume {:print "$at(2,20158,20159)"} true;
    $t90 := 5;
    assume $IsValid'u64'($t90);

    // $t91 := ==($t23, $t90) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:473:20+13
    $t91 := $IsEqual'u64'($t23, $t90);

    // if ($t91) goto L12 else goto L11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:473:16+568
    if ($t91) { goto L12; } else { goto L11; }

    // label L12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:474:26+11
    assume {:print "$at(2,20188,20199)"} true;
L12:

    // $t92 := [35, 70, 70, 70, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:474:26+11
    assume {:print "$at(2,20188,20199)"} true;
    $t92 := ConcatVec(MakeVec4(35, 70, 70, 70), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t92);

    // $t93 := string::utf8($t92) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:474:13+25
    call $t93 := $1_string_utf8($t92);
    if ($abort_flag) {
        assume {:print "$at(2,20175,20200)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t93 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:474:13+25
    $t3 := $t93;

    // trace_local[background_color]($t93) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:474:13+25
    assume {:print "$track_local(104,4,3):", $t93} $t93 == $t93;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:474:13+25
    goto L4;

    // label L11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:475:20+8
    assume {:print "$at(2,20220,20228)"} true;
L11:

    // $t94 := 6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:475:32+1
    assume {:print "$at(2,20232,20233)"} true;
    $t94 := 6;
    assume $IsValid'u64'($t94);

    // $t95 := ==($t23, $t94) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:475:20+13
    $t95 := $IsEqual'u64'($t23, $t94);

    // if ($t95) goto L14 else goto L13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:475:16+494
    if ($t95) { goto L14; } else { goto L13; }

    // label L14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:476:26+11
    assume {:print "$at(2,20262,20273)"} true;
L14:

    // $t96 := [35, 70, 70, 48, 48, 52, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:476:26+11
    assume {:print "$at(2,20262,20273)"} true;
    $t96 := ConcatVec(MakeVec4(35, 70, 70, 48), MakeVec3(48, 52, 48));
    assume $IsValid'vec'u8''($t96);

    // $t97 := string::utf8($t96) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:476:13+25
    call $t97 := $1_string_utf8($t96);
    if ($abort_flag) {
        assume {:print "$at(2,20249,20274)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t97 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:476:13+25
    $t3 := $t97;

    // trace_local[background_color]($t97) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:476:13+25
    assume {:print "$track_local(104,4,3):", $t97} $t97 == $t97;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:476:13+25
    goto L4;

    // label L13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:477:20+8
    assume {:print "$at(2,20294,20302)"} true;
L13:

    // $t98 := 7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:477:32+1
    assume {:print "$at(2,20306,20307)"} true;
    $t98 := 7;
    assume $IsValid'u64'($t98);

    // $t99 := ==($t23, $t98) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:477:20+13
    $t99 := $IsEqual'u64'($t23, $t98);

    // if ($t99) goto L16 else goto L15 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:477:16+420
    if ($t99) { goto L16; } else { goto L15; }

    // label L16 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:478:26+11
    assume {:print "$at(2,20336,20347)"} true;
L16:

    // $t100 := [35, 48, 48, 70, 70, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:478:26+11
    assume {:print "$at(2,20336,20347)"} true;
    $t100 := ConcatVec(MakeVec4(35, 48, 48, 70), MakeVec3(70, 70, 70));
    assume $IsValid'vec'u8''($t100);

    // $t101 := string::utf8($t100) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:478:13+25
    call $t101 := $1_string_utf8($t100);
    if ($abort_flag) {
        assume {:print "$at(2,20323,20348)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t101 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:478:13+25
    $t3 := $t101;

    // trace_local[background_color]($t101) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:478:13+25
    assume {:print "$track_local(104,4,3):", $t101} $t101 == $t101;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:478:13+25
    goto L4;

    // label L15 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:479:20+8
    assume {:print "$at(2,20368,20376)"} true;
L15:

    // $t102 := 8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:479:32+1
    assume {:print "$at(2,20380,20381)"} true;
    $t102 := 8;
    assume $IsValid'u64'($t102);

    // $t103 := ==($t23, $t102) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:479:20+13
    $t103 := $IsEqual'u64'($t23, $t102);

    // if ($t103) goto L18 else goto L17 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:479:16+346
    if ($t103) { goto L18; } else { goto L17; }

    // label L18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:480:26+9
    assume {:print "$at(2,20410,20419)"} true;
L18:

    // $t104 := [35, 70, 70, 52, 48, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:480:26+9
    assume {:print "$at(2,20410,20419)"} true;
    $t104 := ConcatVec(MakeVec4(35, 70, 70, 52), MakeVec3(48, 48, 48));
    assume $IsValid'vec'u8''($t104);

    // $t105 := string::utf8($t104) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:480:13+23
    call $t105 := $1_string_utf8($t104);
    if ($abort_flag) {
        assume {:print "$at(2,20397,20420)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t105 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:480:13+23
    $t3 := $t105;

    // trace_local[background_color]($t105) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:480:13+23
    assume {:print "$track_local(104,4,3):", $t105} $t105 == $t105;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:480:13+23
    goto L4;

    // label L17 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:481:20+8
    assume {:print "$at(2,20440,20448)"} true;
L17:

    // $t106 := 9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:481:32+1
    assume {:print "$at(2,20452,20453)"} true;
    $t106 := 9;
    assume $IsValid'u64'($t106);

    // $t107 := ==($t23, $t106) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:481:20+13
    $t107 := $IsEqual'u64'($t23, $t106);

    // if ($t107) goto L20 else goto L19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:481:16+274
    if ($t107) { goto L20; } else { goto L19; }

    // label L20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:482:26+9
    assume {:print "$at(2,20482,20491)"} true;
L20:

    // $t108 := [35, 56, 48, 70, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:482:26+9
    assume {:print "$at(2,20482,20491)"} true;
    $t108 := ConcatVec(MakeVec4(35, 56, 48, 70), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t108);

    // $t109 := string::utf8($t108) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:482:13+23
    call $t109 := $1_string_utf8($t108);
    if ($abort_flag) {
        assume {:print "$at(2,20469,20492)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t109 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:482:13+23
    $t3 := $t109;

    // trace_local[background_color]($t109) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:482:13+23
    assume {:print "$track_local(104,4,3):", $t109} $t109 == $t109;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:482:13+23
    goto L4;

    // label L19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:483:20+8
    assume {:print "$at(2,20512,20520)"} true;
L19:

    // $t110 := 10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:483:32+2
    assume {:print "$at(2,20524,20526)"} true;
    $t110 := 10;
    assume $IsValid'u64'($t110);

    // $t111 := ==($t23, $t110) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:483:20+14
    $t111 := $IsEqual'u64'($t23, $t110);

    // if ($t111) goto L22 else goto L21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:483:16+202
    if ($t111) { goto L22; } else { goto L21; }

    // label L22 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:484:26+11
    assume {:print "$at(2,20555,20566)"} true;
L22:

    // $t112 := [35, 52, 48, 48, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:484:26+11
    assume {:print "$at(2,20555,20566)"} true;
    $t112 := ConcatVec(MakeVec4(35, 52, 48, 48), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t112);

    // $t113 := string::utf8($t112) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:484:13+25
    call $t113 := $1_string_utf8($t112);
    if ($abort_flag) {
        assume {:print "$at(2,20542,20567)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t113 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:484:13+25
    $t3 := $t113;

    // trace_local[background_color]($t113) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:484:13+25
    assume {:print "$track_local(104,4,3):", $t113} $t113 == $t113;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:484:13+25
    goto L4;

    // label L21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:485:20+8
    assume {:print "$at(2,20587,20595)"} true;
L21:

    // $t114 := 11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:485:32+2
    assume {:print "$at(2,20599,20601)"} true;
    $t114 := 11;
    assume $IsValid'u64'($t114);

    // $t115 := ==($t23, $t114) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:485:20+14
    $t115 := $IsEqual'u64'($t23, $t114);

    // if ($t115) goto L24 else goto L23 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:485:16+127
    if ($t115) { goto L24; } else { goto L23; }

    // label L24 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:486:26+13
    assume {:print "$at(2,20630,20643)"} true;
L24:

    // $t116 := [35, 67, 48, 67, 48, 67, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:486:26+13
    assume {:print "$at(2,20630,20643)"} true;
    $t116 := ConcatVec(MakeVec4(35, 67, 48, 67), MakeVec3(48, 67, 48));
    assume $IsValid'vec'u8''($t116);

    // $t117 := string::utf8($t116) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:486:13+27
    call $t117 := $1_string_utf8($t116);
    if ($abort_flag) {
        assume {:print "$at(2,20617,20644)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t117 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:486:13+27
    $t3 := $t117;

    // trace_local[background_color]($t117) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:486:13+27
    assume {:print "$track_local(104,4,3):", $t117} $t117 == $t117;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:486:13+27
    goto L4;

    // label L23 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:488:26+12
    assume {:print "$at(2,20687,20699)"} true;
L23:

    // $t118 := [35, 70, 70, 66, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:488:26+12
    assume {:print "$at(2,20687,20699)"} true;
    $t118 := ConcatVec(MakeVec4(35, 70, 70, 66), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t118);

    // $t119 := string::utf8($t118) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:488:13+26
    call $t119 := $1_string_utf8($t118);
    if ($abort_flag) {
        assume {:print "$at(2,20674,20700)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t119 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:488:13+26
    $t3 := $t119;

    // trace_local[background_color]($t119) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:488:13+26
    assume {:print "$track_local(104,4,3):", $t119} $t119 == $t119;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:488:13+26
    goto L4;

    // label L25 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:515:5+1
    assume {:print "$at(2,22083,22084)"} true;
L25:

    // return $t73 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:515:5+1
    assume {:print "$at(2,22083,22084)"} true;
    $ret0 := $t73;
    return;

    // label L26 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:515:5+1
L26:

    // abort($t18) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:515:5+1
    assume {:print "$at(2,22083,22084)"} true;
    $abort_code := $t18;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::generate_random_metadata [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:459:5+2592
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_generate_random_metadata$verify(_$t0: int, _$t1: int) returns ($ret0: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata)
{
    // declare local variables
    var $t2: int;
    var $t3: $1_string_String;
    var $t4: int;
    var $t5: Vec (Vec (int));
    var $t6: $1_string_String;
    var $t7: Vec (Vec (int));
    var $t8: int;
    var $t9: Vec (Vec (int));
    var $t10: int;
    var $t11: Vec (Vec (int));
    var $t12: Vec (Vec (int));
    var $t13: $1_string_String;
    var $t14: Vec (Vec (int));
    var $t15: Vec (Vec (int));
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: Vec (int);
    var $t27: $1_string_String;
    var $t28: int;
    var $t29: int;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: Vec (Vec (int));
    var $t34: Vec (int);
    var $t35: $1_string_String;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: int;
    var $t40: int;
    var $t41: Vec (Vec (int));
    var $t42: int;
    var $t43: int;
    var $t44: int;
    var $t45: int;
    var $t46: bv64;
    var $t47: Vec (Vec (int));
    var $t48: bv64;
    var $t49: bv64;
    var $t50: int;
    var $t51: int;
    var $t52: bv64;
    var $t53: Vec (Vec (int));
    var $t54: bv64;
    var $t55: bv64;
    var $t56: Vec (Vec (int));
    var $t57: Vec (int);
    var $t58: $Mutation ($1_string_String);
    var $t59: Vec (int);
    var $t60: $1_string_String;
    var $t61: $Mutation ($1_string_String);
    var $t62: Vec (Vec (int));
    var $t63: Vec (int);
    var $t64: $1_string_String;
    var $t65: $Mutation ($1_string_String);
    var $t66: Vec (int);
    var $t67: $1_string_String;
    var $t68: $Mutation ($1_string_String);
    var $t69: Vec (Vec (int));
    var $t70: Vec (int);
    var $t71: $1_string_String;
    var $t72: $1_string_String;
    var $t73: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $t74: int;
    var $t75: bool;
    var $t76: Vec (int);
    var $t77: $1_string_String;
    var $t78: int;
    var $t79: bool;
    var $t80: Vec (int);
    var $t81: $1_string_String;
    var $t82: int;
    var $t83: bool;
    var $t84: Vec (int);
    var $t85: $1_string_String;
    var $t86: int;
    var $t87: bool;
    var $t88: Vec (int);
    var $t89: $1_string_String;
    var $t90: int;
    var $t91: bool;
    var $t92: Vec (int);
    var $t93: $1_string_String;
    var $t94: int;
    var $t95: bool;
    var $t96: Vec (int);
    var $t97: $1_string_String;
    var $t98: int;
    var $t99: bool;
    var $t100: Vec (int);
    var $t101: $1_string_String;
    var $t102: int;
    var $t103: bool;
    var $t104: Vec (int);
    var $t105: $1_string_String;
    var $t106: int;
    var $t107: bool;
    var $t108: Vec (int);
    var $t109: $1_string_String;
    var $t110: int;
    var $t111: bool;
    var $t112: Vec (int);
    var $t113: $1_string_String;
    var $t114: int;
    var $t115: bool;
    var $t116: Vec (int);
    var $t117: $1_string_String;
    var $t118: Vec (int);
    var $t119: $1_string_String;
    var $t0: int;
    var $t1: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $temp_0'u64': int;
    var $temp_0'bv64': bv64;
    var $temp_0'vec'vec'u8''': Vec (Vec (int));
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:459:5+1
    assume {:print "$at(2,19492,19493)"} true;
    assume $IsValid'u64'($t0);

    // assume WellFormed($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:459:5+1
    assume $IsValid'u64'($t1);

    // trace_local[seed]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:459:5+1
    assume {:print "$track_local(104,4,0):", $t0} $t0 == $t0;

    // trace_local[token_id]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:459:5+1
    assume {:print "$track_local(104,4,1):", $t1} $t1 == $t1;

    // $t16 := 4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:461:43+1
    assume {:print "$at(2,19686,19687)"} true;
    $t16 := 4;
    assume $IsValid'u8'($t16);

    // $t17 := <<($t1, $t16) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:461:30+15
    call $t17 := $ShlU64($t1, $t16);
    if ($abort_flag) {
        assume {:print "$at(2,19673,19688)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t19 := +($t0, $t17) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:461:23+22
    call $t19 := $AddU64($t0, $t17);
    if ($abort_flag) {
        assume {:print "$at(2,19666,19688)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t20 := 4096 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:461:48+6
    $t20 := 4096;
    assume $IsValid'u64'($t20);

    // $t21 := +($t19, $t20) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:461:23+31
    call $t21 := $AddU64($t19, $t20);
    if ($abort_flag) {
        assume {:print "$at(2,19666,19697)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t22 := 13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:462:35+2
    assume {:print "$at(2,19733,19735)"} true;
    $t22 := 13;
    assume $IsValid'u64'($t22);

    // $t23 := %($t21, $t22) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:462:24+14
    call $t23 := $Mod($t21, $t22);
    if ($abort_flag) {
        assume {:print "$at(2,19722,19736)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // trace_local[$t5]($t23) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:462:24+14
    assume {:print "$track_local(104,4,2):", $t23} $t23 == $t23;

    // $t24 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:463:48+1
    assume {:print "$at(2,19785,19786)"} true;
    $t24 := 0;
    assume $IsValid'u64'($t24);

    // $t25 := ==($t23, $t24) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:463:36+13
    $t25 := $IsEqual'u64'($t23, $t24);

    // if ($t25) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:463:32+941
    if ($t25) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:464:26+9
    assume {:print "$at(2,19815,19824)"} true;
L1:

    // $t26 := [35, 70, 70, 48, 48, 56, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:464:26+9
    assume {:print "$at(2,19815,19824)"} true;
    $t26 := ConcatVec(MakeVec4(35, 70, 70, 48), MakeVec3(48, 56, 48));
    assume $IsValid'vec'u8''($t26);

    // $t27 := string::utf8($t26) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:464:13+23
    call $t27 := $1_string_utf8($t26);
    if ($abort_flag) {
        assume {:print "$at(2,19802,19825)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t27 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:464:13+23
    $t3 := $t27;

    // trace_local[background_color]($t27) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:464:13+23
    assume {:print "$track_local(104,4,3):", $t27} $t27 == $t27;

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:493:27+8
    assume {:print "$at(2,20898,20906)"} true;
L4:

    // $t28 := 3571 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:493:38+4
    assume {:print "$at(2,20909,20913)"} true;
    $t28 := 3571;
    assume $IsValid'u64'($t28);

    // $t29 := *($t1, $t28) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:493:26+17
    call $t29 := $MulU64($t1, $t28);
    if ($abort_flag) {
        assume {:print "$at(2,20897,20914)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t30 := 7810 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:493:46+4
    $t30 := 7810;
    assume $IsValid'u64'($t30);

    // $t31 := %($t29, $t30) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:493:26+24
    call $t31 := $Mod($t29, $t30);
    if ($abort_flag) {
        assume {:print "$at(2,20897,20921)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t32 := retro_nft_generator_da::get_shape_index($t31) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:494:27+27
    assume {:print "$at(2,20949,20976)"} true;
    call $t32 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shape_index($t31);
    if ($abort_flag) {
        assume {:print "$at(2,20949,20976)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // trace_local[$t7]($t32) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:494:27+27
    assume {:print "$track_local(104,4,4):", $t32} $t32 == $t32;

    // $t33 := ["[67, 105, 114, 99, 108, 101]", "[83, 113, 117, 97, 114, 101]", "[84, 114, 105, 97, 110, 103, 108, 101]", "[68, 105, 97, 109, 111, 110, 100]", "[83, 116, 97, 114]", "[80, 101, 110, 116, 97, 103, 111, 110]", "[72, 101, 120, 97, 103, 111, 110]", "[79, 99, 116, 97, 103, 111, 110]", "[67, 114, 111, 115, 115]", "[72, 101, 97, 114, 116]", "[65, 114, 114, 111, 119]", "[83, 112, 105, 114, 97, 108]", "[73, 110, 102, 105, 110, 105, 116, 121]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:495:51+11
    assume {:print "$at(2,21028,21039)"} true;
    $t33 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(ConcatVec(MakeVec4(67, 105, 114, 99), MakeVec2(108, 101)), ConcatVec(MakeVec4(83, 113, 117, 97), MakeVec2(114, 101)), ConcatVec(MakeVec4(84, 114, 105, 97), MakeVec4(110, 103, 108, 101)), ConcatVec(MakeVec4(68, 105, 97, 109), MakeVec3(111, 110, 100))), MakeVec4(MakeVec4(83, 116, 97, 114), ConcatVec(MakeVec4(80, 101, 110, 116), MakeVec4(97, 103, 111, 110)), ConcatVec(MakeVec4(72, 101, 120, 97), MakeVec3(103, 111, 110)), ConcatVec(MakeVec4(79, 99, 116, 97), MakeVec3(103, 111, 110)))), MakeVec4(ConcatVec(MakeVec4(67, 114, 111, 115), MakeVec1(115)), ConcatVec(MakeVec4(72, 101, 97, 114), MakeVec1(116)), ConcatVec(MakeVec4(65, 114, 114, 111), MakeVec1(119)), ConcatVec(MakeVec4(83, 112, 105, 114), MakeVec2(97, 108)))), MakeVec1(ConcatVec(MakeVec4(73, 110, 102, 105), MakeVec4(110, 105, 116, 121))));
    assume $IsValid'vec'vec'u8'''($t33);

    // trace_local[$t73]($t33) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:495:51+11
    assume {:print "$track_local(104,4,5):", $t33} $t33 == $t33;

    // $t34 := vector::borrow<vector<u8>>($t33, $t32) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:495:35+41
    call $t34 := $1_vector_borrow'vec'u8''($t33, $t32);
    if ($abort_flag) {
        assume {:print "$at(2,21012,21053)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t35 := string::utf8($t34) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:495:21+56
    call $t35 := $1_string_utf8($t34);
    if ($abort_flag) {
        assume {:print "$at(2,20998,21054)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // trace_local[shape]($t35) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:495:21+56
    assume {:print "$track_local(104,4,6):", $t35} $t35 == $t35;

    // $t36 := 16 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:498:50+2
    assume {:print "$at(2,21178,21180)"} true;
    $t36 := 16;
    assume $IsValid'u8'($t36);

    // $t37 := <<($t1, $t36) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:498:37+16
    call $t37 := $ShlU64($t1, $t36);
    if ($abort_flag) {
        assume {:print "$at(2,21165,21181)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t38 := +($t0, $t37) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:498:30+23
    call $t38 := $AddU64($t0, $t37);
    if ($abort_flag) {
        assume {:print "$at(2,21158,21181)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t39 := 12288 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:498:56+6
    $t39 := 12288;
    assume $IsValid'u64'($t39);

    // $t40 := +($t38, $t39) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:498:30+32
    call $t40 := $AddU64($t38, $t39);
    if ($abort_flag) {
        assume {:print "$at(2,21158,21190)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // trace_local[$t7]($t40) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:498:30+32
    assume {:print "$track_local(104,4,4):", $t40} $t40 == $t40;

    // $t41 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:499:61+17
    assume {:print "$at(2,21252,21269)"} true;
    $t41 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t41);

    // trace_local[$t85]($t41) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:499:61+17
    assume {:print "$track_local(104,4,7):", $t41} $t41 == $t41;

    // $t42 := vector::length<vector<u8>>($t41) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:499:45+34
    call $t42 := $1_vector_length'vec'u8''($t41);
    if ($abort_flag) {
        assume {:print "$at(2,21236,21270)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t43 := %($t40, $t42) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:499:27+53
    call $t43 := $Mod($t40, $t42);
    if ($abort_flag) {
        assume {:print "$at(2,21218,21271)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // trace_local[$t16]($t43) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:499:27+53
    assume {:print "$track_local(104,4,8):", $t43} $t43 == $t43;

    // $t44 := 1000003 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:500:58+7
    assume {:print "$at(2,21330,21337)"} true;
    $t44 := 1000003;
    assume $IsValid'u64'($t44);

    // $t45 := *($t1, $t44) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:500:46+20
    call $t45 := $MulU64($t1, $t44);
    if ($abort_flag) {
        assume {:print "$at(2,21318,21338)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t46 := ^($t40, $t45) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:500:28+39
    call $t46 := $XorBv64($int2bv.64($t40), $int2bv.64($t45));

    // $t47 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:500:86+17
    $t47 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t47);

    // trace_local[$t94]($t47) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:500:86+17
    assume {:print "$track_local(104,4,9):", $t47} $t47 == $t47;

    // $t48 := vector::length<vector<u8>>($t47) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:500:70+34
    call $t48 := $int2bv64($1_vector_$length'vec'bv8''($t47));
    call $t48 := $1_vector_$length'vec'bv8''($t47);
    if ($abort_flag) {
        assume {:print "$at(2,21342,21376)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t49 := %($t46, $t48) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:500:27+78
    call $t49 := $ModBv64($t46, $t48);
    if ($abort_flag) {
        assume {:print "$at(2,21299,21377)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // trace_local[$t83]($t49) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:500:27+78
    assume {:print "$track_local(104,4,10):", $t49} $t49 == $t49;

    // $t50 := 2000003 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:501:58+7
    assume {:print "$at(2,21436,21443)"} true;
    $t50 := 2000003;
    assume $IsValid'u64'($t50);

    // $t51 := *($t1, $t50) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:501:46+20
    call $t51 := $MulU64($t1, $t50);
    if ($abort_flag) {
        assume {:print "$at(2,21424,21444)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t52 := ^($t40, $t51) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:501:28+39
    call $t52 := $XorBv64($int2bv.64($t40), $int2bv.64($t51));

    // $t53 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:501:86+17
    $t53 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t53);

    // trace_local[$t103]($t53) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:501:86+17
    assume {:print "$track_local(104,4,11):", $t53} $t53 == $t53;

    // $t54 := vector::length<vector<u8>>($t53) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:501:70+34
    call $t54 := $int2bv64($1_vector_$length'vec'bv8''($t53));
    call $t54 := $1_vector_$length'vec'bv8''($t53);
    if ($abort_flag) {
        assume {:print "$at(2,21448,21482)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t55 := %($t52, $t54) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:501:27+78
    call $t55 := $ModBv64($t52, $t54);
    if ($abort_flag) {
        assume {:print "$at(2,21405,21483)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // trace_local[$t7]($t55) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:501:27+78
    assume {:print "$track_local(104,4,4):", $t55} $t55 == $t55;

    // $t56 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:503:62+17
    assume {:print "$at(2,21555,21572)"} true;
    $t56 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t56);

    // trace_local[$t108]($t56) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:503:62+17
    assume {:print "$track_local(104,4,12):", $t56} $t56 == $t56;

    // $t57 := vector::borrow<vector<u8>>($t56, $t43) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:503:46+47
    call $t57 := $1_vector_borrow'vec'u8''($t56, $t43);
    if ($abort_flag) {
        assume {:print "$at(2,21539,21586)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t13 := string::utf8($t57) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:503:32+62
    call $t13 := $1_string_utf8($t57);
    if ($abort_flag) {
        assume {:print "$at(2,21525,21587)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // trace_local[word_combination]($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:503:32+62
    assume {:print "$track_local(104,4,13):", $t13} $t13 == $t13;

    // $t58 := borrow_local($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:504:24+21
    assume {:print "$at(2,21612,21633)"} true;
    $t58 := $Mutation($Local(13), EmptyVec(), $t13);

    // $t59 := [32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:504:60+4
    $t59 := MakeVec1(32);
    assume $IsValid'vec'u8''($t59);

    // $t60 := string::utf8($t59) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:504:47+18
    call $t60 := $1_string_utf8($t59);
    if ($abort_flag) {
        assume {:print "$at(2,21635,21653)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // string::append($t58, $t60) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:504:9+57
    call $t58 := $1_string_append($t58, $t60);
    if ($abort_flag) {
        assume {:print "$at(2,21597,21654)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // write_back[LocalRoot($t13)@]($t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:504:9+57
    $t13 := $Dereference($t58);

    // trace_local[word_combination]($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:504:9+57
    assume {:print "$track_local(104,4,13):", $t13} $t13 == $t13;

    // $t61 := borrow_local($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:505:24+21
    assume {:print "$at(2,21679,21700)"} true;
    $t61 := $Mutation($Local(13), EmptyVec(), $t13);

    // $t62 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:505:77+17
    $t62 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t62);

    // trace_local[$t117]($t62) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:505:77+17
    assume {:print "$track_local(104,4,14):", $t62} $t62 == $t62;

    // $t63 := vector::borrow<vector<u8>>($t62, $t49) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:505:61+47
    call $t63 := $1_vector_borrow'vec'u8''($t62, $bv2int.64($t49));
    if ($abort_flag) {
        assume {:print "$at(2,21716,21763)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t64 := string::utf8($t63) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:505:47+62
    call $t64 := $1_string_utf8($t63);
    if ($abort_flag) {
        assume {:print "$at(2,21702,21764)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // string::append($t61, $t64) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:505:9+101
    call $t61 := $1_string_append($t61, $t64);
    if ($abort_flag) {
        assume {:print "$at(2,21664,21765)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // write_back[LocalRoot($t13)@]($t61) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:505:9+101
    $t13 := $Dereference($t61);

    // trace_local[word_combination]($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:505:9+101
    assume {:print "$track_local(104,4,13):", $t13} $t13 == $t13;

    // $t65 := borrow_local($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:506:24+21
    assume {:print "$at(2,21790,21811)"} true;
    $t65 := $Mutation($Local(13), EmptyVec(), $t13);

    // $t66 := [32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:506:60+4
    $t66 := MakeVec1(32);
    assume $IsValid'vec'u8''($t66);

    // $t67 := string::utf8($t66) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:506:47+18
    call $t67 := $1_string_utf8($t66);
    if ($abort_flag) {
        assume {:print "$at(2,21813,21831)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // string::append($t65, $t67) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:506:9+57
    call $t65 := $1_string_append($t65, $t67);
    if ($abort_flag) {
        assume {:print "$at(2,21775,21832)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // write_back[LocalRoot($t13)@]($t65) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:506:9+57
    $t13 := $Dereference($t65);

    // trace_local[word_combination]($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:506:9+57
    assume {:print "$track_local(104,4,13):", $t13} $t13 == $t13;

    // $t68 := borrow_local($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:507:24+21
    assume {:print "$at(2,21857,21878)"} true;
    $t68 := $Mutation($Local(13), EmptyVec(), $t13);

    // $t69 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:507:77+17
    $t69 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t69);

    // trace_local[$t126]($t69) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:507:77+17
    assume {:print "$track_local(104,4,15):", $t69} $t69 == $t69;

    // $t70 := vector::borrow<vector<u8>>($t69, $t55) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:507:61+47
    call $t70 := $1_vector_borrow'vec'u8''($t69, $bv2int.64($t55));
    if ($abort_flag) {
        assume {:print "$at(2,21894,21941)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t71 := string::utf8($t70) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:507:47+62
    call $t71 := $1_string_utf8($t70);
    if ($abort_flag) {
        assume {:print "$at(2,21880,21942)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // string::append($t68, $t71) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:507:9+101
    call $t68 := $1_string_append($t68, $t71);
    if ($abort_flag) {
        assume {:print "$at(2,21842,21943)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // write_back[LocalRoot($t13)@]($t68) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:507:9+101
    $t13 := $Dereference($t68);

    // trace_local[word_combination]($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:507:9+101
    assume {:print "$track_local(104,4,13):", $t13} $t13 == $t13;

    // $t72 := move($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:512:13+16
    assume {:print "$at(2,22029,22045)"} true;
    $t72 := $t13;

    // $t73 := pack 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata($t3, $t35, $t72, $t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:509:9+124
    assume {:print "$at(2,21954,22078)"} true;
    $t73 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata($t3, $t35, $t72, $t1);

    // trace_return[0]($t73) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:459:73+2524
    assume {:print "$at(2,19560,22084)"} true;
    assume {:print "$track_return(104,4,0):", $t73} $t73 == $t73;

    // goto L25 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:459:73+2524
    goto L25;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:465:20+8
    assume {:print "$at(2,19845,19853)"} true;
L0:

    // $t74 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:465:32+1
    assume {:print "$at(2,19857,19858)"} true;
    $t74 := 1;
    assume $IsValid'u64'($t74);

    // $t75 := ==($t23, $t74) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:465:20+13
    $t75 := $IsEqual'u64'($t23, $t74);

    // if ($t75) goto L3 else goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:465:16+869
    if ($t75) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:466:26+13
    assume {:print "$at(2,19887,19900)"} true;
L3:

    // $t76 := [35, 48, 48, 56, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:466:26+13
    assume {:print "$at(2,19887,19900)"} true;
    $t76 := ConcatVec(MakeVec4(35, 48, 48, 56), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t76);

    // $t77 := string::utf8($t76) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:466:13+27
    call $t77 := $1_string_utf8($t76);
    if ($abort_flag) {
        assume {:print "$at(2,19874,19901)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t77 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:466:13+27
    $t3 := $t77;

    // trace_local[background_color]($t77) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:466:13+27
    assume {:print "$track_local(104,4,3):", $t77} $t77 == $t77;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:466:13+27
    goto L4;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:467:20+8
    assume {:print "$at(2,19921,19929)"} true;
L2:

    // $t78 := 2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:467:32+1
    assume {:print "$at(2,19933,19934)"} true;
    $t78 := 2;
    assume $IsValid'u64'($t78);

    // $t79 := ==($t23, $t78) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:467:20+13
    $t79 := $IsEqual'u64'($t23, $t78);

    // if ($t79) goto L6 else goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:467:16+793
    if ($t79) { goto L6; } else { goto L5; }

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:468:26+12
    assume {:print "$at(2,19963,19975)"} true;
L6:

    // $t80 := [35, 56, 48, 48, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:468:26+12
    assume {:print "$at(2,19963,19975)"} true;
    $t80 := ConcatVec(MakeVec4(35, 56, 48, 48), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t80);

    // $t81 := string::utf8($t80) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:468:13+26
    call $t81 := $1_string_utf8($t80);
    if ($abort_flag) {
        assume {:print "$at(2,19950,19976)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t81 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:468:13+26
    $t3 := $t81;

    // trace_local[background_color]($t81) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:468:13+26
    assume {:print "$track_local(104,4,3):", $t81} $t81 == $t81;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:468:13+26
    goto L4;

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:469:20+8
    assume {:print "$at(2,19996,20004)"} true;
L5:

    // $t82 := 3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:469:32+1
    assume {:print "$at(2,20008,20009)"} true;
    $t82 := 3;
    assume $IsValid'u64'($t82);

    // $t83 := ==($t23, $t82) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:469:20+13
    $t83 := $IsEqual'u64'($t23, $t82);

    // if ($t83) goto L8 else goto L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:469:16+718
    if ($t83) { goto L8; } else { goto L7; }

    // label L8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:470:26+11
    assume {:print "$at(2,20038,20049)"} true;
L8:

    // $t84 := [35, 48, 48, 70, 70, 56, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:470:26+11
    assume {:print "$at(2,20038,20049)"} true;
    $t84 := ConcatVec(MakeVec4(35, 48, 48, 70), MakeVec3(70, 56, 48));
    assume $IsValid'vec'u8''($t84);

    // $t85 := string::utf8($t84) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:470:13+25
    call $t85 := $1_string_utf8($t84);
    if ($abort_flag) {
        assume {:print "$at(2,20025,20050)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t85 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:470:13+25
    $t3 := $t85;

    // trace_local[background_color]($t85) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:470:13+25
    assume {:print "$track_local(104,4,3):", $t85} $t85 == $t85;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:470:13+25
    goto L4;

    // label L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:471:20+8
    assume {:print "$at(2,20070,20078)"} true;
L7:

    // $t86 := 4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:471:32+1
    assume {:print "$at(2,20082,20083)"} true;
    $t86 := 4;
    assume $IsValid'u64'($t86);

    // $t87 := ==($t23, $t86) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:471:20+13
    $t87 := $IsEqual'u64'($t23, $t86);

    // if ($t87) goto L10 else goto L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:471:16+644
    if ($t87) { goto L10; } else { goto L9; }

    // label L10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:472:26+13
    assume {:print "$at(2,20112,20125)"} true;
L10:

    // $t88 := [35, 70, 70, 56, 48, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:472:26+13
    assume {:print "$at(2,20112,20125)"} true;
    $t88 := ConcatVec(MakeVec4(35, 70, 70, 56), MakeVec3(48, 48, 48));
    assume $IsValid'vec'u8''($t88);

    // $t89 := string::utf8($t88) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:472:13+27
    call $t89 := $1_string_utf8($t88);
    if ($abort_flag) {
        assume {:print "$at(2,20099,20126)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t89 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:472:13+27
    $t3 := $t89;

    // trace_local[background_color]($t89) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:472:13+27
    assume {:print "$track_local(104,4,3):", $t89} $t89 == $t89;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:472:13+27
    goto L4;

    // label L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:473:20+8
    assume {:print "$at(2,20146,20154)"} true;
L9:

    // $t90 := 5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:473:32+1
    assume {:print "$at(2,20158,20159)"} true;
    $t90 := 5;
    assume $IsValid'u64'($t90);

    // $t91 := ==($t23, $t90) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:473:20+13
    $t91 := $IsEqual'u64'($t23, $t90);

    // if ($t91) goto L12 else goto L11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:473:16+568
    if ($t91) { goto L12; } else { goto L11; }

    // label L12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:474:26+11
    assume {:print "$at(2,20188,20199)"} true;
L12:

    // $t92 := [35, 70, 70, 70, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:474:26+11
    assume {:print "$at(2,20188,20199)"} true;
    $t92 := ConcatVec(MakeVec4(35, 70, 70, 70), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t92);

    // $t93 := string::utf8($t92) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:474:13+25
    call $t93 := $1_string_utf8($t92);
    if ($abort_flag) {
        assume {:print "$at(2,20175,20200)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t93 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:474:13+25
    $t3 := $t93;

    // trace_local[background_color]($t93) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:474:13+25
    assume {:print "$track_local(104,4,3):", $t93} $t93 == $t93;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:474:13+25
    goto L4;

    // label L11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:475:20+8
    assume {:print "$at(2,20220,20228)"} true;
L11:

    // $t94 := 6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:475:32+1
    assume {:print "$at(2,20232,20233)"} true;
    $t94 := 6;
    assume $IsValid'u64'($t94);

    // $t95 := ==($t23, $t94) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:475:20+13
    $t95 := $IsEqual'u64'($t23, $t94);

    // if ($t95) goto L14 else goto L13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:475:16+494
    if ($t95) { goto L14; } else { goto L13; }

    // label L14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:476:26+11
    assume {:print "$at(2,20262,20273)"} true;
L14:

    // $t96 := [35, 70, 70, 48, 48, 52, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:476:26+11
    assume {:print "$at(2,20262,20273)"} true;
    $t96 := ConcatVec(MakeVec4(35, 70, 70, 48), MakeVec3(48, 52, 48));
    assume $IsValid'vec'u8''($t96);

    // $t97 := string::utf8($t96) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:476:13+25
    call $t97 := $1_string_utf8($t96);
    if ($abort_flag) {
        assume {:print "$at(2,20249,20274)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t97 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:476:13+25
    $t3 := $t97;

    // trace_local[background_color]($t97) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:476:13+25
    assume {:print "$track_local(104,4,3):", $t97} $t97 == $t97;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:476:13+25
    goto L4;

    // label L13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:477:20+8
    assume {:print "$at(2,20294,20302)"} true;
L13:

    // $t98 := 7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:477:32+1
    assume {:print "$at(2,20306,20307)"} true;
    $t98 := 7;
    assume $IsValid'u64'($t98);

    // $t99 := ==($t23, $t98) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:477:20+13
    $t99 := $IsEqual'u64'($t23, $t98);

    // if ($t99) goto L16 else goto L15 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:477:16+420
    if ($t99) { goto L16; } else { goto L15; }

    // label L16 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:478:26+11
    assume {:print "$at(2,20336,20347)"} true;
L16:

    // $t100 := [35, 48, 48, 70, 70, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:478:26+11
    assume {:print "$at(2,20336,20347)"} true;
    $t100 := ConcatVec(MakeVec4(35, 48, 48, 70), MakeVec3(70, 70, 70));
    assume $IsValid'vec'u8''($t100);

    // $t101 := string::utf8($t100) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:478:13+25
    call $t101 := $1_string_utf8($t100);
    if ($abort_flag) {
        assume {:print "$at(2,20323,20348)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t101 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:478:13+25
    $t3 := $t101;

    // trace_local[background_color]($t101) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:478:13+25
    assume {:print "$track_local(104,4,3):", $t101} $t101 == $t101;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:478:13+25
    goto L4;

    // label L15 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:479:20+8
    assume {:print "$at(2,20368,20376)"} true;
L15:

    // $t102 := 8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:479:32+1
    assume {:print "$at(2,20380,20381)"} true;
    $t102 := 8;
    assume $IsValid'u64'($t102);

    // $t103 := ==($t23, $t102) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:479:20+13
    $t103 := $IsEqual'u64'($t23, $t102);

    // if ($t103) goto L18 else goto L17 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:479:16+346
    if ($t103) { goto L18; } else { goto L17; }

    // label L18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:480:26+9
    assume {:print "$at(2,20410,20419)"} true;
L18:

    // $t104 := [35, 70, 70, 52, 48, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:480:26+9
    assume {:print "$at(2,20410,20419)"} true;
    $t104 := ConcatVec(MakeVec4(35, 70, 70, 52), MakeVec3(48, 48, 48));
    assume $IsValid'vec'u8''($t104);

    // $t105 := string::utf8($t104) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:480:13+23
    call $t105 := $1_string_utf8($t104);
    if ($abort_flag) {
        assume {:print "$at(2,20397,20420)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t105 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:480:13+23
    $t3 := $t105;

    // trace_local[background_color]($t105) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:480:13+23
    assume {:print "$track_local(104,4,3):", $t105} $t105 == $t105;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:480:13+23
    goto L4;

    // label L17 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:481:20+8
    assume {:print "$at(2,20440,20448)"} true;
L17:

    // $t106 := 9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:481:32+1
    assume {:print "$at(2,20452,20453)"} true;
    $t106 := 9;
    assume $IsValid'u64'($t106);

    // $t107 := ==($t23, $t106) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:481:20+13
    $t107 := $IsEqual'u64'($t23, $t106);

    // if ($t107) goto L20 else goto L19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:481:16+274
    if ($t107) { goto L20; } else { goto L19; }

    // label L20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:482:26+9
    assume {:print "$at(2,20482,20491)"} true;
L20:

    // $t108 := [35, 56, 48, 70, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:482:26+9
    assume {:print "$at(2,20482,20491)"} true;
    $t108 := ConcatVec(MakeVec4(35, 56, 48, 70), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t108);

    // $t109 := string::utf8($t108) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:482:13+23
    call $t109 := $1_string_utf8($t108);
    if ($abort_flag) {
        assume {:print "$at(2,20469,20492)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t109 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:482:13+23
    $t3 := $t109;

    // trace_local[background_color]($t109) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:482:13+23
    assume {:print "$track_local(104,4,3):", $t109} $t109 == $t109;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:482:13+23
    goto L4;

    // label L19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:483:20+8
    assume {:print "$at(2,20512,20520)"} true;
L19:

    // $t110 := 10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:483:32+2
    assume {:print "$at(2,20524,20526)"} true;
    $t110 := 10;
    assume $IsValid'u64'($t110);

    // $t111 := ==($t23, $t110) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:483:20+14
    $t111 := $IsEqual'u64'($t23, $t110);

    // if ($t111) goto L22 else goto L21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:483:16+202
    if ($t111) { goto L22; } else { goto L21; }

    // label L22 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:484:26+11
    assume {:print "$at(2,20555,20566)"} true;
L22:

    // $t112 := [35, 52, 48, 48, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:484:26+11
    assume {:print "$at(2,20555,20566)"} true;
    $t112 := ConcatVec(MakeVec4(35, 52, 48, 48), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t112);

    // $t113 := string::utf8($t112) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:484:13+25
    call $t113 := $1_string_utf8($t112);
    if ($abort_flag) {
        assume {:print "$at(2,20542,20567)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t113 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:484:13+25
    $t3 := $t113;

    // trace_local[background_color]($t113) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:484:13+25
    assume {:print "$track_local(104,4,3):", $t113} $t113 == $t113;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:484:13+25
    goto L4;

    // label L21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:485:20+8
    assume {:print "$at(2,20587,20595)"} true;
L21:

    // $t114 := 11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:485:32+2
    assume {:print "$at(2,20599,20601)"} true;
    $t114 := 11;
    assume $IsValid'u64'($t114);

    // $t115 := ==($t23, $t114) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:485:20+14
    $t115 := $IsEqual'u64'($t23, $t114);

    // if ($t115) goto L24 else goto L23 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:485:16+127
    if ($t115) { goto L24; } else { goto L23; }

    // label L24 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:486:26+13
    assume {:print "$at(2,20630,20643)"} true;
L24:

    // $t116 := [35, 67, 48, 67, 48, 67, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:486:26+13
    assume {:print "$at(2,20630,20643)"} true;
    $t116 := ConcatVec(MakeVec4(35, 67, 48, 67), MakeVec3(48, 67, 48));
    assume $IsValid'vec'u8''($t116);

    // $t117 := string::utf8($t116) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:486:13+27
    call $t117 := $1_string_utf8($t116);
    if ($abort_flag) {
        assume {:print "$at(2,20617,20644)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t117 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:486:13+27
    $t3 := $t117;

    // trace_local[background_color]($t117) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:486:13+27
    assume {:print "$track_local(104,4,3):", $t117} $t117 == $t117;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:486:13+27
    goto L4;

    // label L23 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:488:26+12
    assume {:print "$at(2,20687,20699)"} true;
L23:

    // $t118 := [35, 70, 70, 66, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:488:26+12
    assume {:print "$at(2,20687,20699)"} true;
    $t118 := ConcatVec(MakeVec4(35, 70, 70, 66), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t118);

    // $t119 := string::utf8($t118) on_abort goto L26 with $t18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:488:13+26
    call $t119 := $1_string_utf8($t118);
    if ($abort_flag) {
        assume {:print "$at(2,20674,20700)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(104,4):", $t18} $t18 == $t18;
        goto L26;
    }

    // $t3 := $t119 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:488:13+26
    $t3 := $t119;

    // trace_local[background_color]($t119) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:488:13+26
    assume {:print "$track_local(104,4,3):", $t119} $t119 == $t119;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:488:13+26
    goto L4;

    // label L25 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:515:5+1
    assume {:print "$at(2,22083,22084)"} true;
L25:

    // return $t73 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:515:5+1
    assume {:print "$at(2,22083,22084)"} true;
    $ret0 := $t73;
    return;

    // label L26 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:515:5+1
L26:

    // abort($t18) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:515:5+1
    assume {:print "$at(2,22083,22084)"} true;
    $abort_code := $t18;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::generate_truly_random_metadata [baseline] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:336:5+2464
procedure {:inline 1} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_generate_truly_random_metadata(_$t0: int) returns ($ret0: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_string_String;
    var $t3: int;
    var $t4: Vec (Vec (int));
    var $t5: $1_string_String;
    var $t6: Vec (Vec (int));
    var $t7: Vec (Vec (int));
    var $t8: int;
    var $t9: Vec (Vec (int));
    var $t10: int;
    var $t11: Vec (Vec (int));
    var $t12: Vec (Vec (int));
    var $t13: $1_string_String;
    var $t14: Vec (Vec (int));
    var $t15: $1_string_String;
    var $t16: $1_string_String;
    var $t17: int;
    var $t18: int;
    var $t19: $1_randomness_PerBlockRandomness;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: Vec (int);
    var $t25: $1_string_String;
    var $t26: int;
    var $t27: int;
    var $t28: $1_randomness_PerBlockRandomness;
    var $t29: int;
    var $t30: int;
    var $t31: Vec (Vec (int));
    var $t32: Vec (int);
    var $t33: $1_string_String;
    var $t34: int;
    var $t35: Vec (Vec (int));
    var $t36: int;
    var $t37: $1_randomness_PerBlockRandomness;
    var $t38: int;
    var $t39: int;
    var $t40: Vec (Vec (int));
    var $t41: int;
    var $t42: $1_randomness_PerBlockRandomness;
    var $t43: int;
    var $t44: int;
    var $t45: Vec (Vec (int));
    var $t46: int;
    var $t47: $1_randomness_PerBlockRandomness;
    var $t48: int;
    var $t49: Vec (Vec (int));
    var $t50: Vec (int);
    var $t51: $1_string_String;
    var $t52: Vec (Vec (int));
    var $t53: Vec (int);
    var $t54: $1_string_String;
    var $t55: Vec (Vec (int));
    var $t56: Vec (int);
    var $t57: $1_string_String;
    var $t58: $Mutation ($1_string_String);
    var $t59: Vec (int);
    var $t60: $1_string_String;
    var $t61: $Mutation ($1_string_String);
    var $t62: $Mutation ($1_string_String);
    var $t63: Vec (int);
    var $t64: $1_string_String;
    var $t65: $Mutation ($1_string_String);
    var $t66: $1_string_String;
    var $t67: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $t68: int;
    var $t69: bool;
    var $t70: Vec (int);
    var $t71: $1_string_String;
    var $t72: int;
    var $t73: bool;
    var $t74: Vec (int);
    var $t75: $1_string_String;
    var $t76: int;
    var $t77: bool;
    var $t78: Vec (int);
    var $t79: $1_string_String;
    var $t80: int;
    var $t81: bool;
    var $t82: Vec (int);
    var $t83: $1_string_String;
    var $t84: int;
    var $t85: bool;
    var $t86: Vec (int);
    var $t87: $1_string_String;
    var $t88: int;
    var $t89: bool;
    var $t90: Vec (int);
    var $t91: $1_string_String;
    var $t92: int;
    var $t93: bool;
    var $t94: Vec (int);
    var $t95: $1_string_String;
    var $t96: int;
    var $t97: bool;
    var $t98: Vec (int);
    var $t99: $1_string_String;
    var $t100: int;
    var $t101: bool;
    var $t102: Vec (int);
    var $t103: $1_string_String;
    var $t104: int;
    var $t105: bool;
    var $t106: Vec (int);
    var $t107: $1_string_String;
    var $t108: int;
    var $t109: bool;
    var $t110: Vec (int);
    var $t111: $1_string_String;
    var $t112: Vec (int);
    var $t113: $1_string_String;
    var $t0: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $temp_0'u64': int;
    var $temp_0'vec'vec'u8''': Vec (Vec (int));
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[token_id]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:336:5+1
    assume {:print "$at(2,14167,14168)"} true;
    assume {:print "$track_local(104,5,0):", $t0} $t0 == $t0;

    // $t17 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:338:46+1
    assume {:print "$at(2,14348,14349)"} true;
    $t17 := 0;
    assume $IsValid'u64'($t17);

    // $t18 := 13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:338:49+2
    $t18 := 13;
    assume $IsValid'u64'($t18);

    // assume Identical($t19, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:53:9+62
    assume {:print "$at(193,2086,2148)"} true;
    assume ($t19 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // $t20 := randomness::u64_range($t17, $t18) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:338:24+28
    assume {:print "$at(2,14326,14354)"} true;
    call $t20 := $1_randomness_u64_range($t17, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,14326,14354)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // trace_local[$t3]($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:338:24+28
    assume {:print "$track_local(104,5,1):", $t20} $t20 == $t20;

    // $t22 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:339:48+1
    assume {:print "$at(2,14403,14404)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := ==($t20, $t22) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:339:36+13
    $t23 := $IsEqual'u64'($t20, $t22);

    // if ($t23) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:339:32+941
    if ($t23) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:340:26+9
    assume {:print "$at(2,14433,14442)"} true;
L1:

    // $t24 := [35, 70, 70, 48, 48, 56, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:340:26+9
    assume {:print "$at(2,14433,14442)"} true;
    $t24 := ConcatVec(MakeVec4(35, 70, 70, 48), MakeVec3(48, 56, 48));
    assume $IsValid'vec'u8''($t24);

    // $t25 := string::utf8($t24) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:340:13+23
    call $t25 := $1_string_utf8($t24);
    if ($abort_flag) {
        assume {:print "$at(2,14420,14443)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t25 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:340:13+23
    $t2 := $t25;

    // trace_local[background_color]($t25) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:340:13+23
    assume {:print "$track_local(104,5,2):", $t25} $t25 == $t25;

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:368:48+1
    assume {:print "$at(2,15473,15474)"} true;
L4:

    // $t26 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:368:48+1
    assume {:print "$at(2,15473,15474)"} true;
    $t26 := 0;
    assume $IsValid'u64'($t26);

    // $t27 := 7810 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:368:51+4
    $t27 := 7810;
    assume $IsValid'u64'($t27);

    // assume Identical($t28, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:53:9+62
    assume {:print "$at(193,2086,2148)"} true;
    assume ($t28 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // $t29 := randomness::u64_range($t26, $t27) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:368:26+30
    assume {:print "$at(2,15451,15481)"} true;
    call $t29 := $1_randomness_u64_range($t26, $t27);
    if ($abort_flag) {
        assume {:print "$at(2,15451,15481)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t30 := retro_nft_generator_da::get_shape_index($t29) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:369:27+27
    assume {:print "$at(2,15509,15536)"} true;
    call $t30 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shape_index($t29);
    if ($abort_flag) {
        assume {:print "$at(2,15509,15536)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // trace_local[$t4]($t30) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:369:27+27
    assume {:print "$track_local(104,5,3):", $t30} $t30 == $t30;

    // $t31 := ["[67, 105, 114, 99, 108, 101]", "[83, 113, 117, 97, 114, 101]", "[84, 114, 105, 97, 110, 103, 108, 101]", "[68, 105, 97, 109, 111, 110, 100]", "[83, 116, 97, 114]", "[80, 101, 110, 116, 97, 103, 111, 110]", "[72, 101, 120, 97, 103, 111, 110]", "[79, 99, 116, 97, 103, 111, 110]", "[67, 114, 111, 115, 115]", "[72, 101, 97, 114, 116]", "[65, 114, 114, 111, 119]", "[83, 112, 105, 114, 97, 108]", "[73, 110, 102, 105, 110, 105, 116, 121]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:370:51+11
    assume {:print "$at(2,15588,15599)"} true;
    $t31 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(ConcatVec(MakeVec4(67, 105, 114, 99), MakeVec2(108, 101)), ConcatVec(MakeVec4(83, 113, 117, 97), MakeVec2(114, 101)), ConcatVec(MakeVec4(84, 114, 105, 97), MakeVec4(110, 103, 108, 101)), ConcatVec(MakeVec4(68, 105, 97, 109), MakeVec3(111, 110, 100))), MakeVec4(MakeVec4(83, 116, 97, 114), ConcatVec(MakeVec4(80, 101, 110, 116), MakeVec4(97, 103, 111, 110)), ConcatVec(MakeVec4(72, 101, 120, 97), MakeVec3(103, 111, 110)), ConcatVec(MakeVec4(79, 99, 116, 97), MakeVec3(103, 111, 110)))), MakeVec4(ConcatVec(MakeVec4(67, 114, 111, 115), MakeVec1(115)), ConcatVec(MakeVec4(72, 101, 97, 114), MakeVec1(116)), ConcatVec(MakeVec4(65, 114, 114, 111), MakeVec1(119)), ConcatVec(MakeVec4(83, 112, 105, 114), MakeVec2(97, 108)))), MakeVec1(ConcatVec(MakeVec4(73, 110, 102, 105), MakeVec4(110, 105, 116, 121))));
    assume $IsValid'vec'vec'u8'''($t31);

    // trace_local[$t63]($t31) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:370:51+11
    assume {:print "$track_local(104,5,4):", $t31} $t31 == $t31;

    // $t32 := vector::borrow<vector<u8>>($t31, $t30) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:370:35+41
    call $t32 := $1_vector_borrow'vec'u8''($t31, $t30);
    if ($abort_flag) {
        assume {:print "$at(2,15572,15613)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t33 := string::utf8($t32) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:370:21+56
    call $t33 := $1_string_utf8($t32);
    if ($abort_flag) {
        assume {:print "$at(2,15558,15614)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // trace_local[shape]($t33) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:370:21+56
    assume {:print "$track_local(104,5,5):", $t33} $t33 == $t33;

    // $t34 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:373:49+1
    assume {:print "$at(2,15726,15727)"} true;
    $t34 := 0;
    assume $IsValid'u64'($t34);

    // $t35 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:373:68+17
    $t35 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t35);

    // trace_local[$t68]($t35) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:373:68+17
    assume {:print "$track_local(104,5,6):", $t35} $t35 == $t35;

    // $t36 := vector::length<vector<u8>>($t35) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:373:52+34
    call $t36 := $1_vector_length'vec'u8''($t35);
    if ($abort_flag) {
        assume {:print "$at(2,15729,15763)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // assume Identical($t37, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:53:9+62
    assume {:print "$at(193,2086,2148)"} true;
    assume ($t37 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // $t38 := randomness::u64_range($t34, $t36) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:373:27+60
    assume {:print "$at(2,15704,15764)"} true;
    call $t38 := $1_randomness_u64_range($t34, $t36);
    if ($abort_flag) {
        assume {:print "$at(2,15704,15764)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // trace_local[$t4]($t38) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:373:27+60
    assume {:print "$track_local(104,5,3):", $t38} $t38 == $t38;

    // $t39 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:374:49+1
    assume {:print "$at(2,15814,15815)"} true;
    $t39 := 0;
    assume $IsValid'u64'($t39);

    // $t40 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:374:68+17
    $t40 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t40);

    // trace_local[$t73]($t40) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:374:68+17
    assume {:print "$track_local(104,5,7):", $t40} $t40 == $t40;

    // $t41 := vector::length<vector<u8>>($t40) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:374:52+34
    call $t41 := $1_vector_length'vec'u8''($t40);
    if ($abort_flag) {
        assume {:print "$at(2,15817,15851)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // assume Identical($t42, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:53:9+62
    assume {:print "$at(193,2086,2148)"} true;
    assume ($t42 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // $t43 := randomness::u64_range($t39, $t41) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:374:27+60
    assume {:print "$at(2,15792,15852)"} true;
    call $t43 := $1_randomness_u64_range($t39, $t41);
    if ($abort_flag) {
        assume {:print "$at(2,15792,15852)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // trace_local[$t8]($t43) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:374:27+60
    assume {:print "$track_local(104,5,8):", $t43} $t43 == $t43;

    // $t44 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:375:49+1
    assume {:print "$at(2,15902,15903)"} true;
    $t44 := 0;
    assume $IsValid'u64'($t44);

    // $t45 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:375:68+17
    $t45 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t45);

    // trace_local[$t78]($t45) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:375:68+17
    assume {:print "$track_local(104,5,9):", $t45} $t45 == $t45;

    // $t46 := vector::length<vector<u8>>($t45) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:375:52+34
    call $t46 := $1_vector_length'vec'u8''($t45);
    if ($abort_flag) {
        assume {:print "$at(2,15905,15939)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // assume Identical($t47, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:53:9+62
    assume {:print "$at(193,2086,2148)"} true;
    assume ($t47 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // $t48 := randomness::u64_range($t44, $t46) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:375:27+60
    assume {:print "$at(2,15880,15940)"} true;
    call $t48 := $1_randomness_u64_range($t44, $t46);
    if ($abort_flag) {
        assume {:print "$at(2,15880,15940)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // trace_local[$t71]($t48) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:375:27+60
    assume {:print "$track_local(104,5,10):", $t48} $t48 == $t48;

    // $t49 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:377:51+17
    assume {:print "$at(2,16001,16018)"} true;
    $t49 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t49);

    // trace_local[$t83]($t49) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:377:51+17
    assume {:print "$track_local(104,5,11):", $t49} $t49 == $t49;

    // $t50 := vector::borrow<vector<u8>>($t49, $t38) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:377:35+47
    call $t50 := $1_vector_borrow'vec'u8''($t49, $t38);
    if ($abort_flag) {
        assume {:print "$at(2,15985,16032)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t51 := string::utf8($t50) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:377:21+62
    call $t51 := $1_string_utf8($t50);
    if ($abort_flag) {
        assume {:print "$at(2,15971,16033)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t52 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:378:51+17
    assume {:print "$at(2,16085,16102)"} true;
    $t52 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t52);

    // trace_local[$t88]($t52) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:378:51+17
    assume {:print "$track_local(104,5,12):", $t52} $t52 == $t52;

    // $t53 := vector::borrow<vector<u8>>($t52, $t43) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:378:35+47
    call $t53 := $1_vector_borrow'vec'u8''($t52, $t43);
    if ($abort_flag) {
        assume {:print "$at(2,16069,16116)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t54 := string::utf8($t53) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:378:21+62
    call $t54 := $1_string_utf8($t53);
    if ($abort_flag) {
        assume {:print "$at(2,16055,16117)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // trace_local[word2]($t54) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:378:21+62
    assume {:print "$track_local(104,5,13):", $t54} $t54 == $t54;

    // $t55 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:379:51+17
    assume {:print "$at(2,16169,16186)"} true;
    $t55 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t55);

    // trace_local[$t93]($t55) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:379:51+17
    assume {:print "$track_local(104,5,14):", $t55} $t55 == $t55;

    // $t56 := vector::borrow<vector<u8>>($t55, $t48) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:379:35+47
    call $t56 := $1_vector_borrow'vec'u8''($t55, $t48);
    if ($abort_flag) {
        assume {:print "$at(2,16153,16200)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t57 := string::utf8($t56) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:379:21+62
    call $t57 := $1_string_utf8($t56);
    if ($abort_flag) {
        assume {:print "$at(2,16139,16201)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // trace_local[word3]($t57) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:379:21+62
    assume {:print "$track_local(104,5,15):", $t57} $t57 == $t57;

    // $t16 := $t51 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:381:32+5
    assume {:print "$at(2,16243,16248)"} true;
    $t16 := $t51;

    // trace_local[word_combination]($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:381:32+5
    assume {:print "$track_local(104,5,16):", $t16} $t16 == $t16;

    // $t58 := borrow_local($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:382:24+21
    assume {:print "$at(2,16273,16294)"} true;
    $t58 := $Mutation($Local(16), EmptyVec(), $t16);

    // $t59 := [32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:382:60+4
    $t59 := MakeVec1(32);
    assume $IsValid'vec'u8''($t59);

    // $t60 := string::utf8($t59) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:382:47+18
    call $t60 := $1_string_utf8($t59);
    if ($abort_flag) {
        assume {:print "$at(2,16296,16314)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // string::append($t58, $t60) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:382:9+57
    call $t58 := $1_string_append($t58, $t60);
    if ($abort_flag) {
        assume {:print "$at(2,16258,16315)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // write_back[LocalRoot($t16)@]($t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:382:9+57
    $t16 := $Dereference($t58);

    // trace_local[word_combination]($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:382:9+57
    assume {:print "$track_local(104,5,16):", $t16} $t16 == $t16;

    // $t61 := borrow_local($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:383:24+21
    assume {:print "$at(2,16340,16361)"} true;
    $t61 := $Mutation($Local(16), EmptyVec(), $t16);

    // string::append($t61, $t54) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:383:9+44
    call $t61 := $1_string_append($t61, $t54);
    if ($abort_flag) {
        assume {:print "$at(2,16325,16369)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // write_back[LocalRoot($t16)@]($t61) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:383:9+44
    $t16 := $Dereference($t61);

    // trace_local[word_combination]($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:383:9+44
    assume {:print "$track_local(104,5,16):", $t16} $t16 == $t16;

    // $t62 := borrow_local($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:384:24+21
    assume {:print "$at(2,16394,16415)"} true;
    $t62 := $Mutation($Local(16), EmptyVec(), $t16);

    // $t63 := [32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:384:60+4
    $t63 := MakeVec1(32);
    assume $IsValid'vec'u8''($t63);

    // $t64 := string::utf8($t63) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:384:47+18
    call $t64 := $1_string_utf8($t63);
    if ($abort_flag) {
        assume {:print "$at(2,16417,16435)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // string::append($t62, $t64) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:384:9+57
    call $t62 := $1_string_append($t62, $t64);
    if ($abort_flag) {
        assume {:print "$at(2,16379,16436)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // write_back[LocalRoot($t16)@]($t62) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:384:9+57
    $t16 := $Dereference($t62);

    // trace_local[word_combination]($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:384:9+57
    assume {:print "$track_local(104,5,16):", $t16} $t16 == $t16;

    // $t65 := borrow_local($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:385:24+21
    assume {:print "$at(2,16461,16482)"} true;
    $t65 := $Mutation($Local(16), EmptyVec(), $t16);

    // string::append($t65, $t57) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:385:9+44
    call $t65 := $1_string_append($t65, $t57);
    if ($abort_flag) {
        assume {:print "$at(2,16446,16490)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // write_back[LocalRoot($t16)@]($t65) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:385:9+44
    $t16 := $Dereference($t65);

    // trace_local[word_combination]($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:385:9+44
    assume {:print "$track_local(104,5,16):", $t16} $t16 == $t16;

    // $t66 := move($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:390:13+16
    assume {:print "$at(2,16576,16592)"} true;
    $t66 := $t16;

    // $t67 := pack 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata($t2, $t33, $t66, $t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:387:9+124
    assume {:print "$at(2,16501,16625)"} true;
    $t67 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata($t2, $t33, $t66, $t0);

    // trace_return[0]($t67) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:336:68+2401
    assume {:print "$at(2,14230,16631)"} true;
    assume {:print "$track_return(104,5,0):", $t67} $t67 == $t67;

    // goto L25 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:336:68+2401
    goto L25;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:341:20+8
    assume {:print "$at(2,14463,14471)"} true;
L0:

    // $t68 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:341:32+1
    assume {:print "$at(2,14475,14476)"} true;
    $t68 := 1;
    assume $IsValid'u64'($t68);

    // $t69 := ==($t20, $t68) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:341:20+13
    $t69 := $IsEqual'u64'($t20, $t68);

    // if ($t69) goto L3 else goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:341:16+869
    if ($t69) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:342:26+13
    assume {:print "$at(2,14505,14518)"} true;
L3:

    // $t70 := [35, 48, 48, 56, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:342:26+13
    assume {:print "$at(2,14505,14518)"} true;
    $t70 := ConcatVec(MakeVec4(35, 48, 48, 56), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t70);

    // $t71 := string::utf8($t70) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:342:13+27
    call $t71 := $1_string_utf8($t70);
    if ($abort_flag) {
        assume {:print "$at(2,14492,14519)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t71 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:342:13+27
    $t2 := $t71;

    // trace_local[background_color]($t71) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:342:13+27
    assume {:print "$track_local(104,5,2):", $t71} $t71 == $t71;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:342:13+27
    goto L4;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:343:20+8
    assume {:print "$at(2,14539,14547)"} true;
L2:

    // $t72 := 2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:343:32+1
    assume {:print "$at(2,14551,14552)"} true;
    $t72 := 2;
    assume $IsValid'u64'($t72);

    // $t73 := ==($t20, $t72) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:343:20+13
    $t73 := $IsEqual'u64'($t20, $t72);

    // if ($t73) goto L6 else goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:343:16+793
    if ($t73) { goto L6; } else { goto L5; }

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:344:26+12
    assume {:print "$at(2,14581,14593)"} true;
L6:

    // $t74 := [35, 56, 48, 48, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:344:26+12
    assume {:print "$at(2,14581,14593)"} true;
    $t74 := ConcatVec(MakeVec4(35, 56, 48, 48), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t74);

    // $t75 := string::utf8($t74) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:344:13+26
    call $t75 := $1_string_utf8($t74);
    if ($abort_flag) {
        assume {:print "$at(2,14568,14594)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t75 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:344:13+26
    $t2 := $t75;

    // trace_local[background_color]($t75) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:344:13+26
    assume {:print "$track_local(104,5,2):", $t75} $t75 == $t75;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:344:13+26
    goto L4;

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:345:20+8
    assume {:print "$at(2,14614,14622)"} true;
L5:

    // $t76 := 3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:345:32+1
    assume {:print "$at(2,14626,14627)"} true;
    $t76 := 3;
    assume $IsValid'u64'($t76);

    // $t77 := ==($t20, $t76) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:345:20+13
    $t77 := $IsEqual'u64'($t20, $t76);

    // if ($t77) goto L8 else goto L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:345:16+718
    if ($t77) { goto L8; } else { goto L7; }

    // label L8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:346:26+11
    assume {:print "$at(2,14656,14667)"} true;
L8:

    // $t78 := [35, 48, 48, 70, 70, 56, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:346:26+11
    assume {:print "$at(2,14656,14667)"} true;
    $t78 := ConcatVec(MakeVec4(35, 48, 48, 70), MakeVec3(70, 56, 48));
    assume $IsValid'vec'u8''($t78);

    // $t79 := string::utf8($t78) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:346:13+25
    call $t79 := $1_string_utf8($t78);
    if ($abort_flag) {
        assume {:print "$at(2,14643,14668)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t79 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:346:13+25
    $t2 := $t79;

    // trace_local[background_color]($t79) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:346:13+25
    assume {:print "$track_local(104,5,2):", $t79} $t79 == $t79;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:346:13+25
    goto L4;

    // label L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:347:20+8
    assume {:print "$at(2,14688,14696)"} true;
L7:

    // $t80 := 4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:347:32+1
    assume {:print "$at(2,14700,14701)"} true;
    $t80 := 4;
    assume $IsValid'u64'($t80);

    // $t81 := ==($t20, $t80) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:347:20+13
    $t81 := $IsEqual'u64'($t20, $t80);

    // if ($t81) goto L10 else goto L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:347:16+644
    if ($t81) { goto L10; } else { goto L9; }

    // label L10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:348:26+13
    assume {:print "$at(2,14730,14743)"} true;
L10:

    // $t82 := [35, 70, 70, 56, 48, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:348:26+13
    assume {:print "$at(2,14730,14743)"} true;
    $t82 := ConcatVec(MakeVec4(35, 70, 70, 56), MakeVec3(48, 48, 48));
    assume $IsValid'vec'u8''($t82);

    // $t83 := string::utf8($t82) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:348:13+27
    call $t83 := $1_string_utf8($t82);
    if ($abort_flag) {
        assume {:print "$at(2,14717,14744)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t83 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:348:13+27
    $t2 := $t83;

    // trace_local[background_color]($t83) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:348:13+27
    assume {:print "$track_local(104,5,2):", $t83} $t83 == $t83;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:348:13+27
    goto L4;

    // label L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:349:20+8
    assume {:print "$at(2,14764,14772)"} true;
L9:

    // $t84 := 5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:349:32+1
    assume {:print "$at(2,14776,14777)"} true;
    $t84 := 5;
    assume $IsValid'u64'($t84);

    // $t85 := ==($t20, $t84) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:349:20+13
    $t85 := $IsEqual'u64'($t20, $t84);

    // if ($t85) goto L12 else goto L11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:349:16+568
    if ($t85) { goto L12; } else { goto L11; }

    // label L12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:350:26+11
    assume {:print "$at(2,14806,14817)"} true;
L12:

    // $t86 := [35, 70, 70, 70, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:350:26+11
    assume {:print "$at(2,14806,14817)"} true;
    $t86 := ConcatVec(MakeVec4(35, 70, 70, 70), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t86);

    // $t87 := string::utf8($t86) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:350:13+25
    call $t87 := $1_string_utf8($t86);
    if ($abort_flag) {
        assume {:print "$at(2,14793,14818)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t87 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:350:13+25
    $t2 := $t87;

    // trace_local[background_color]($t87) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:350:13+25
    assume {:print "$track_local(104,5,2):", $t87} $t87 == $t87;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:350:13+25
    goto L4;

    // label L11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:351:20+8
    assume {:print "$at(2,14838,14846)"} true;
L11:

    // $t88 := 6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:351:32+1
    assume {:print "$at(2,14850,14851)"} true;
    $t88 := 6;
    assume $IsValid'u64'($t88);

    // $t89 := ==($t20, $t88) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:351:20+13
    $t89 := $IsEqual'u64'($t20, $t88);

    // if ($t89) goto L14 else goto L13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:351:16+494
    if ($t89) { goto L14; } else { goto L13; }

    // label L14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:352:26+11
    assume {:print "$at(2,14880,14891)"} true;
L14:

    // $t90 := [35, 70, 70, 48, 48, 52, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:352:26+11
    assume {:print "$at(2,14880,14891)"} true;
    $t90 := ConcatVec(MakeVec4(35, 70, 70, 48), MakeVec3(48, 52, 48));
    assume $IsValid'vec'u8''($t90);

    // $t91 := string::utf8($t90) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:352:13+25
    call $t91 := $1_string_utf8($t90);
    if ($abort_flag) {
        assume {:print "$at(2,14867,14892)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t91 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:352:13+25
    $t2 := $t91;

    // trace_local[background_color]($t91) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:352:13+25
    assume {:print "$track_local(104,5,2):", $t91} $t91 == $t91;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:352:13+25
    goto L4;

    // label L13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:353:20+8
    assume {:print "$at(2,14912,14920)"} true;
L13:

    // $t92 := 7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:353:32+1
    assume {:print "$at(2,14924,14925)"} true;
    $t92 := 7;
    assume $IsValid'u64'($t92);

    // $t93 := ==($t20, $t92) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:353:20+13
    $t93 := $IsEqual'u64'($t20, $t92);

    // if ($t93) goto L16 else goto L15 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:353:16+420
    if ($t93) { goto L16; } else { goto L15; }

    // label L16 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:354:26+11
    assume {:print "$at(2,14954,14965)"} true;
L16:

    // $t94 := [35, 48, 48, 70, 70, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:354:26+11
    assume {:print "$at(2,14954,14965)"} true;
    $t94 := ConcatVec(MakeVec4(35, 48, 48, 70), MakeVec3(70, 70, 70));
    assume $IsValid'vec'u8''($t94);

    // $t95 := string::utf8($t94) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:354:13+25
    call $t95 := $1_string_utf8($t94);
    if ($abort_flag) {
        assume {:print "$at(2,14941,14966)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t95 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:354:13+25
    $t2 := $t95;

    // trace_local[background_color]($t95) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:354:13+25
    assume {:print "$track_local(104,5,2):", $t95} $t95 == $t95;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:354:13+25
    goto L4;

    // label L15 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:355:20+8
    assume {:print "$at(2,14986,14994)"} true;
L15:

    // $t96 := 8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:355:32+1
    assume {:print "$at(2,14998,14999)"} true;
    $t96 := 8;
    assume $IsValid'u64'($t96);

    // $t97 := ==($t20, $t96) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:355:20+13
    $t97 := $IsEqual'u64'($t20, $t96);

    // if ($t97) goto L18 else goto L17 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:355:16+346
    if ($t97) { goto L18; } else { goto L17; }

    // label L18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:356:26+9
    assume {:print "$at(2,15028,15037)"} true;
L18:

    // $t98 := [35, 70, 70, 52, 48, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:356:26+9
    assume {:print "$at(2,15028,15037)"} true;
    $t98 := ConcatVec(MakeVec4(35, 70, 70, 52), MakeVec3(48, 48, 48));
    assume $IsValid'vec'u8''($t98);

    // $t99 := string::utf8($t98) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:356:13+23
    call $t99 := $1_string_utf8($t98);
    if ($abort_flag) {
        assume {:print "$at(2,15015,15038)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t99 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:356:13+23
    $t2 := $t99;

    // trace_local[background_color]($t99) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:356:13+23
    assume {:print "$track_local(104,5,2):", $t99} $t99 == $t99;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:356:13+23
    goto L4;

    // label L17 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:357:20+8
    assume {:print "$at(2,15058,15066)"} true;
L17:

    // $t100 := 9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:357:32+1
    assume {:print "$at(2,15070,15071)"} true;
    $t100 := 9;
    assume $IsValid'u64'($t100);

    // $t101 := ==($t20, $t100) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:357:20+13
    $t101 := $IsEqual'u64'($t20, $t100);

    // if ($t101) goto L20 else goto L19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:357:16+274
    if ($t101) { goto L20; } else { goto L19; }

    // label L20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:358:26+9
    assume {:print "$at(2,15100,15109)"} true;
L20:

    // $t102 := [35, 56, 48, 70, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:358:26+9
    assume {:print "$at(2,15100,15109)"} true;
    $t102 := ConcatVec(MakeVec4(35, 56, 48, 70), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t102);

    // $t103 := string::utf8($t102) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:358:13+23
    call $t103 := $1_string_utf8($t102);
    if ($abort_flag) {
        assume {:print "$at(2,15087,15110)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t103 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:358:13+23
    $t2 := $t103;

    // trace_local[background_color]($t103) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:358:13+23
    assume {:print "$track_local(104,5,2):", $t103} $t103 == $t103;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:358:13+23
    goto L4;

    // label L19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:359:20+8
    assume {:print "$at(2,15130,15138)"} true;
L19:

    // $t104 := 10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:359:32+2
    assume {:print "$at(2,15142,15144)"} true;
    $t104 := 10;
    assume $IsValid'u64'($t104);

    // $t105 := ==($t20, $t104) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:359:20+14
    $t105 := $IsEqual'u64'($t20, $t104);

    // if ($t105) goto L22 else goto L21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:359:16+202
    if ($t105) { goto L22; } else { goto L21; }

    // label L22 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:360:26+11
    assume {:print "$at(2,15173,15184)"} true;
L22:

    // $t106 := [35, 52, 48, 48, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:360:26+11
    assume {:print "$at(2,15173,15184)"} true;
    $t106 := ConcatVec(MakeVec4(35, 52, 48, 48), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t106);

    // $t107 := string::utf8($t106) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:360:13+25
    call $t107 := $1_string_utf8($t106);
    if ($abort_flag) {
        assume {:print "$at(2,15160,15185)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t107 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:360:13+25
    $t2 := $t107;

    // trace_local[background_color]($t107) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:360:13+25
    assume {:print "$track_local(104,5,2):", $t107} $t107 == $t107;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:360:13+25
    goto L4;

    // label L21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:361:20+8
    assume {:print "$at(2,15205,15213)"} true;
L21:

    // $t108 := 11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:361:32+2
    assume {:print "$at(2,15217,15219)"} true;
    $t108 := 11;
    assume $IsValid'u64'($t108);

    // $t109 := ==($t20, $t108) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:361:20+14
    $t109 := $IsEqual'u64'($t20, $t108);

    // if ($t109) goto L24 else goto L23 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:361:16+127
    if ($t109) { goto L24; } else { goto L23; }

    // label L24 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:362:26+13
    assume {:print "$at(2,15248,15261)"} true;
L24:

    // $t110 := [35, 67, 48, 67, 48, 67, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:362:26+13
    assume {:print "$at(2,15248,15261)"} true;
    $t110 := ConcatVec(MakeVec4(35, 67, 48, 67), MakeVec3(48, 67, 48));
    assume $IsValid'vec'u8''($t110);

    // $t111 := string::utf8($t110) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:362:13+27
    call $t111 := $1_string_utf8($t110);
    if ($abort_flag) {
        assume {:print "$at(2,15235,15262)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t111 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:362:13+27
    $t2 := $t111;

    // trace_local[background_color]($t111) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:362:13+27
    assume {:print "$track_local(104,5,2):", $t111} $t111 == $t111;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:362:13+27
    goto L4;

    // label L23 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:364:26+12
    assume {:print "$at(2,15305,15317)"} true;
L23:

    // $t112 := [35, 70, 70, 66, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:364:26+12
    assume {:print "$at(2,15305,15317)"} true;
    $t112 := ConcatVec(MakeVec4(35, 70, 70, 66), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t112);

    // $t113 := string::utf8($t112) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:364:13+26
    call $t113 := $1_string_utf8($t112);
    if ($abort_flag) {
        assume {:print "$at(2,15292,15318)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t113 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:364:13+26
    $t2 := $t113;

    // trace_local[background_color]($t113) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:364:13+26
    assume {:print "$track_local(104,5,2):", $t113} $t113 == $t113;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:364:13+26
    goto L4;

    // label L25 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:393:5+1
    assume {:print "$at(2,16630,16631)"} true;
L25:

    // return $t67 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:393:5+1
    assume {:print "$at(2,16630,16631)"} true;
    $ret0 := $t67;
    return;

    // label L26 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:393:5+1
L26:

    // abort($t21) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:393:5+1
    assume {:print "$at(2,16630,16631)"} true;
    $abort_code := $t21;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::generate_truly_random_metadata [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:336:5+2464
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_generate_truly_random_metadata$verify(_$t0: int) returns ($ret0: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_string_String;
    var $t3: int;
    var $t4: Vec (Vec (int));
    var $t5: $1_string_String;
    var $t6: Vec (Vec (int));
    var $t7: Vec (Vec (int));
    var $t8: int;
    var $t9: Vec (Vec (int));
    var $t10: int;
    var $t11: Vec (Vec (int));
    var $t12: Vec (Vec (int));
    var $t13: $1_string_String;
    var $t14: Vec (Vec (int));
    var $t15: $1_string_String;
    var $t16: $1_string_String;
    var $t17: int;
    var $t18: int;
    var $t19: $1_randomness_PerBlockRandomness;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: Vec (int);
    var $t25: $1_string_String;
    var $t26: int;
    var $t27: int;
    var $t28: $1_randomness_PerBlockRandomness;
    var $t29: int;
    var $t30: int;
    var $t31: Vec (Vec (int));
    var $t32: Vec (int);
    var $t33: $1_string_String;
    var $t34: int;
    var $t35: Vec (Vec (int));
    var $t36: int;
    var $t37: $1_randomness_PerBlockRandomness;
    var $t38: int;
    var $t39: int;
    var $t40: Vec (Vec (int));
    var $t41: int;
    var $t42: $1_randomness_PerBlockRandomness;
    var $t43: int;
    var $t44: int;
    var $t45: Vec (Vec (int));
    var $t46: int;
    var $t47: $1_randomness_PerBlockRandomness;
    var $t48: int;
    var $t49: Vec (Vec (int));
    var $t50: Vec (int);
    var $t51: $1_string_String;
    var $t52: Vec (Vec (int));
    var $t53: Vec (int);
    var $t54: $1_string_String;
    var $t55: Vec (Vec (int));
    var $t56: Vec (int);
    var $t57: $1_string_String;
    var $t58: $Mutation ($1_string_String);
    var $t59: Vec (int);
    var $t60: $1_string_String;
    var $t61: $Mutation ($1_string_String);
    var $t62: $Mutation ($1_string_String);
    var $t63: Vec (int);
    var $t64: $1_string_String;
    var $t65: $Mutation ($1_string_String);
    var $t66: $1_string_String;
    var $t67: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $t68: int;
    var $t69: bool;
    var $t70: Vec (int);
    var $t71: $1_string_String;
    var $t72: int;
    var $t73: bool;
    var $t74: Vec (int);
    var $t75: $1_string_String;
    var $t76: int;
    var $t77: bool;
    var $t78: Vec (int);
    var $t79: $1_string_String;
    var $t80: int;
    var $t81: bool;
    var $t82: Vec (int);
    var $t83: $1_string_String;
    var $t84: int;
    var $t85: bool;
    var $t86: Vec (int);
    var $t87: $1_string_String;
    var $t88: int;
    var $t89: bool;
    var $t90: Vec (int);
    var $t91: $1_string_String;
    var $t92: int;
    var $t93: bool;
    var $t94: Vec (int);
    var $t95: $1_string_String;
    var $t96: int;
    var $t97: bool;
    var $t98: Vec (int);
    var $t99: $1_string_String;
    var $t100: int;
    var $t101: bool;
    var $t102: Vec (int);
    var $t103: $1_string_String;
    var $t104: int;
    var $t105: bool;
    var $t106: Vec (int);
    var $t107: $1_string_String;
    var $t108: int;
    var $t109: bool;
    var $t110: Vec (int);
    var $t111: $1_string_String;
    var $t112: Vec (int);
    var $t113: $1_string_String;
    var $t0: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $temp_0'u64': int;
    var $temp_0'vec'vec'u8''': Vec (Vec (int));
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:336:5+1
    assume {:print "$at(2,14167,14168)"} true;
    assume $IsValid'u64'($t0);

    // assume forall $rsc: 0x1::chain_status::GenesisEndMarker: ResourceDomain<0x1::chain_status::GenesisEndMarker>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:336:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: 0x1::randomness::PerBlockRandomness: ResourceDomain<0x1::randomness::PerBlockRandomness>(): And(WellFormed($rsc), Le(Len<vector<u8>>(select option::Option.vec(select randomness::PerBlockRandomness.seed($rsc))), 1)) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:336:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_randomness_PerBlockRandomness_$memory, $a_0)}(var $rsc := $ResourceValue($1_randomness_PerBlockRandomness_$memory, $a_0);
    (($IsValid'$1_randomness_PerBlockRandomness'($rsc) && (LenVec($rsc->$seed->$vec) <= 1)))));

    // assume Implies(chain_status::$is_operating(), exists<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:336:5+2464
    // global invariant at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:6:9+102
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_randomness_PerBlockRandomness_$memory, 1));

    // trace_local[token_id]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:336:5+1
    assume {:print "$track_local(104,5,0):", $t0} $t0 == $t0;

    // $t17 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:338:46+1
    assume {:print "$at(2,14348,14349)"} true;
    $t17 := 0;
    assume $IsValid'u64'($t17);

    // $t18 := 13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:338:49+2
    $t18 := 13;
    assume $IsValid'u64'($t18);

    // assume Identical($t19, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:53:9+62
    assume {:print "$at(193,2086,2148)"} true;
    assume ($t19 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // $t20 := randomness::u64_range($t17, $t18) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:338:24+28
    assume {:print "$at(2,14326,14354)"} true;
    call $t20 := $1_randomness_u64_range($t17, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,14326,14354)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // trace_local[$t3]($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:338:24+28
    assume {:print "$track_local(104,5,1):", $t20} $t20 == $t20;

    // $t22 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:339:48+1
    assume {:print "$at(2,14403,14404)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := ==($t20, $t22) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:339:36+13
    $t23 := $IsEqual'u64'($t20, $t22);

    // if ($t23) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:339:32+941
    if ($t23) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:340:26+9
    assume {:print "$at(2,14433,14442)"} true;
L1:

    // $t24 := [35, 70, 70, 48, 48, 56, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:340:26+9
    assume {:print "$at(2,14433,14442)"} true;
    $t24 := ConcatVec(MakeVec4(35, 70, 70, 48), MakeVec3(48, 56, 48));
    assume $IsValid'vec'u8''($t24);

    // $t25 := string::utf8($t24) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:340:13+23
    call $t25 := $1_string_utf8($t24);
    if ($abort_flag) {
        assume {:print "$at(2,14420,14443)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t25 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:340:13+23
    $t2 := $t25;

    // trace_local[background_color]($t25) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:340:13+23
    assume {:print "$track_local(104,5,2):", $t25} $t25 == $t25;

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:368:48+1
    assume {:print "$at(2,15473,15474)"} true;
L4:

    // $t26 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:368:48+1
    assume {:print "$at(2,15473,15474)"} true;
    $t26 := 0;
    assume $IsValid'u64'($t26);

    // $t27 := 7810 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:368:51+4
    $t27 := 7810;
    assume $IsValid'u64'($t27);

    // assume Identical($t28, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:53:9+62
    assume {:print "$at(193,2086,2148)"} true;
    assume ($t28 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // $t29 := randomness::u64_range($t26, $t27) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:368:26+30
    assume {:print "$at(2,15451,15481)"} true;
    call $t29 := $1_randomness_u64_range($t26, $t27);
    if ($abort_flag) {
        assume {:print "$at(2,15451,15481)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t30 := retro_nft_generator_da::get_shape_index($t29) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:369:27+27
    assume {:print "$at(2,15509,15536)"} true;
    call $t30 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shape_index($t29);
    if ($abort_flag) {
        assume {:print "$at(2,15509,15536)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // trace_local[$t4]($t30) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:369:27+27
    assume {:print "$track_local(104,5,3):", $t30} $t30 == $t30;

    // $t31 := ["[67, 105, 114, 99, 108, 101]", "[83, 113, 117, 97, 114, 101]", "[84, 114, 105, 97, 110, 103, 108, 101]", "[68, 105, 97, 109, 111, 110, 100]", "[83, 116, 97, 114]", "[80, 101, 110, 116, 97, 103, 111, 110]", "[72, 101, 120, 97, 103, 111, 110]", "[79, 99, 116, 97, 103, 111, 110]", "[67, 114, 111, 115, 115]", "[72, 101, 97, 114, 116]", "[65, 114, 114, 111, 119]", "[83, 112, 105, 114, 97, 108]", "[73, 110, 102, 105, 110, 105, 116, 121]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:370:51+11
    assume {:print "$at(2,15588,15599)"} true;
    $t31 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(ConcatVec(MakeVec4(67, 105, 114, 99), MakeVec2(108, 101)), ConcatVec(MakeVec4(83, 113, 117, 97), MakeVec2(114, 101)), ConcatVec(MakeVec4(84, 114, 105, 97), MakeVec4(110, 103, 108, 101)), ConcatVec(MakeVec4(68, 105, 97, 109), MakeVec3(111, 110, 100))), MakeVec4(MakeVec4(83, 116, 97, 114), ConcatVec(MakeVec4(80, 101, 110, 116), MakeVec4(97, 103, 111, 110)), ConcatVec(MakeVec4(72, 101, 120, 97), MakeVec3(103, 111, 110)), ConcatVec(MakeVec4(79, 99, 116, 97), MakeVec3(103, 111, 110)))), MakeVec4(ConcatVec(MakeVec4(67, 114, 111, 115), MakeVec1(115)), ConcatVec(MakeVec4(72, 101, 97, 114), MakeVec1(116)), ConcatVec(MakeVec4(65, 114, 114, 111), MakeVec1(119)), ConcatVec(MakeVec4(83, 112, 105, 114), MakeVec2(97, 108)))), MakeVec1(ConcatVec(MakeVec4(73, 110, 102, 105), MakeVec4(110, 105, 116, 121))));
    assume $IsValid'vec'vec'u8'''($t31);

    // trace_local[$t63]($t31) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:370:51+11
    assume {:print "$track_local(104,5,4):", $t31} $t31 == $t31;

    // $t32 := vector::borrow<vector<u8>>($t31, $t30) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:370:35+41
    call $t32 := $1_vector_borrow'vec'u8''($t31, $t30);
    if ($abort_flag) {
        assume {:print "$at(2,15572,15613)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t33 := string::utf8($t32) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:370:21+56
    call $t33 := $1_string_utf8($t32);
    if ($abort_flag) {
        assume {:print "$at(2,15558,15614)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // trace_local[shape]($t33) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:370:21+56
    assume {:print "$track_local(104,5,5):", $t33} $t33 == $t33;

    // $t34 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:373:49+1
    assume {:print "$at(2,15726,15727)"} true;
    $t34 := 0;
    assume $IsValid'u64'($t34);

    // $t35 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:373:68+17
    $t35 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t35);

    // trace_local[$t68]($t35) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:373:68+17
    assume {:print "$track_local(104,5,6):", $t35} $t35 == $t35;

    // $t36 := vector::length<vector<u8>>($t35) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:373:52+34
    call $t36 := $1_vector_length'vec'u8''($t35);
    if ($abort_flag) {
        assume {:print "$at(2,15729,15763)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // assume Identical($t37, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:53:9+62
    assume {:print "$at(193,2086,2148)"} true;
    assume ($t37 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // $t38 := randomness::u64_range($t34, $t36) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:373:27+60
    assume {:print "$at(2,15704,15764)"} true;
    call $t38 := $1_randomness_u64_range($t34, $t36);
    if ($abort_flag) {
        assume {:print "$at(2,15704,15764)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // trace_local[$t4]($t38) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:373:27+60
    assume {:print "$track_local(104,5,3):", $t38} $t38 == $t38;

    // $t39 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:374:49+1
    assume {:print "$at(2,15814,15815)"} true;
    $t39 := 0;
    assume $IsValid'u64'($t39);

    // $t40 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:374:68+17
    $t40 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t40);

    // trace_local[$t73]($t40) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:374:68+17
    assume {:print "$track_local(104,5,7):", $t40} $t40 == $t40;

    // $t41 := vector::length<vector<u8>>($t40) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:374:52+34
    call $t41 := $1_vector_length'vec'u8''($t40);
    if ($abort_flag) {
        assume {:print "$at(2,15817,15851)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // assume Identical($t42, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:53:9+62
    assume {:print "$at(193,2086,2148)"} true;
    assume ($t42 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // $t43 := randomness::u64_range($t39, $t41) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:374:27+60
    assume {:print "$at(2,15792,15852)"} true;
    call $t43 := $1_randomness_u64_range($t39, $t41);
    if ($abort_flag) {
        assume {:print "$at(2,15792,15852)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // trace_local[$t8]($t43) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:374:27+60
    assume {:print "$track_local(104,5,8):", $t43} $t43 == $t43;

    // $t44 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:375:49+1
    assume {:print "$at(2,15902,15903)"} true;
    $t44 := 0;
    assume $IsValid'u64'($t44);

    // $t45 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:375:68+17
    $t45 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t45);

    // trace_local[$t78]($t45) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:375:68+17
    assume {:print "$track_local(104,5,9):", $t45} $t45 == $t45;

    // $t46 := vector::length<vector<u8>>($t45) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:375:52+34
    call $t46 := $1_vector_length'vec'u8''($t45);
    if ($abort_flag) {
        assume {:print "$at(2,15905,15939)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // assume Identical($t47, global<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:53:9+62
    assume {:print "$at(193,2086,2148)"} true;
    assume ($t47 == $ResourceValue($1_randomness_PerBlockRandomness_$memory, 1));

    // $t48 := randomness::u64_range($t44, $t46) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:375:27+60
    assume {:print "$at(2,15880,15940)"} true;
    call $t48 := $1_randomness_u64_range($t44, $t46);
    if ($abort_flag) {
        assume {:print "$at(2,15880,15940)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // trace_local[$t71]($t48) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:375:27+60
    assume {:print "$track_local(104,5,10):", $t48} $t48 == $t48;

    // $t49 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:377:51+17
    assume {:print "$at(2,16001,16018)"} true;
    $t49 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t49);

    // trace_local[$t83]($t49) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:377:51+17
    assume {:print "$track_local(104,5,11):", $t49} $t49 == $t49;

    // $t50 := vector::borrow<vector<u8>>($t49, $t38) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:377:35+47
    call $t50 := $1_vector_borrow'vec'u8''($t49, $t38);
    if ($abort_flag) {
        assume {:print "$at(2,15985,16032)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t51 := string::utf8($t50) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:377:21+62
    call $t51 := $1_string_utf8($t50);
    if ($abort_flag) {
        assume {:print "$at(2,15971,16033)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t52 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:378:51+17
    assume {:print "$at(2,16085,16102)"} true;
    $t52 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t52);

    // trace_local[$t88]($t52) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:378:51+17
    assume {:print "$track_local(104,5,12):", $t52} $t52 == $t52;

    // $t53 := vector::borrow<vector<u8>>($t52, $t43) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:378:35+47
    call $t53 := $1_vector_borrow'vec'u8''($t52, $t43);
    if ($abort_flag) {
        assume {:print "$at(2,16069,16116)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t54 := string::utf8($t53) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:378:21+62
    call $t54 := $1_string_utf8($t53);
    if ($abort_flag) {
        assume {:print "$at(2,16055,16117)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // trace_local[word2]($t54) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:378:21+62
    assume {:print "$track_local(104,5,13):", $t54} $t54 == $t54;

    // $t55 := ["[78, 69, 79, 78]", "[87, 65, 86, 69]", "[71, 76, 79, 87]", "[66, 69, 65, 77]", "[70, 76, 85, 88]", "[83, 89, 78, 67]", "[71, 82, 73, 68]", "[67, 79, 68, 69]", "[66, 89, 84, 69]", "[72, 65, 67, 75]", "[69, 67, 72, 79]", "[86, 73, 66, 69]", "[78, 79, 86, 65]", "[90, 69, 84, 65]", "[65, 80, 69, 88]", "[67, 79, 82, 69]", "[69, 68, 71, 69]", "[70, 76, 79, 87]", "[72, 89, 80, 69]", "[73, 82, 73, 83]", "[74, 65, 68, 69]", "[75, 73, 76, 79]", "[76, 79, 79, 80]", "[77, 65, 90, 69]", "[78, 69, 88, 84]", "[79, 77, 78, 73]", "[80, 65, 67, 69]", "[81, 85, 65, 68]", "[82, 65, 86, 69]", "[83, 65, 71, 69]", "[84, 69, 67, 72]", "[85, 78, 73, 84]", "[86, 79, 73, 68]", "[87, 65, 82, 80]", "[88, 82, 65, 89]", "[89, 65, 82, 78]", "[90, 79, 79, 77]", "[66, 79, 76, 84]", "[67, 65, 76, 77]", "[68, 65, 87, 78]", "[70, 85, 82, 89]", "[71, 65, 84, 69]", "[72, 69, 82, 79]", "[73, 67, 79, 78]", "[74, 65, 67, 75]", "[75, 73, 67, 75]", "[76, 79, 67, 75]", "[77, 69, 67, 72]", "[78, 79, 68, 69]", "[79, 80, 69, 78]", "[80, 69, 65, 75]", "[81, 85, 73, 84]", "[82, 73, 83, 75]", "[83, 76, 73, 77]", "[84, 65, 78, 75]", "[85, 83, 69, 82]", "[86, 69, 82, 89]", "[87, 73, 76, 68]", "[88, 66, 79, 88]", "[89, 69, 65, 82]", "[90, 69, 82, 79]", "[65, 84, 79, 77]", "[66, 76, 85, 69]", "[67, 72, 73, 80]", "[68, 65, 84, 65]", "[69, 80, 73, 67]", "[70, 65, 83, 84]", "[71, 79, 76, 68]", "[72, 65, 82, 68]", "[73, 84, 69, 77]", "[74, 79, 76, 84]", "[75, 69, 69, 80]", "[76, 79, 65, 68]", "[77, 69, 71, 65]", "[78, 65, 78, 79]", "[79, 80, 65, 76]", "[80, 76, 85, 71]", "[81, 85, 73, 90]", "[82, 85, 83, 72]", "[83, 79, 85, 76]", "[84, 73, 68, 69]", "[85, 66, 69, 82]", "[86, 79, 76, 84]", "[87, 73, 83, 69]", "[79, 88, 69, 78]", "[89, 79, 71, 73]", "[90, 73, 78, 67]", "[65, 76, 84, 79]", "[66, 69, 84, 65]", "[67, 85, 82, 69]", "[68, 85, 78, 69]", "[69, 67, 72, 79]", "[70, 73, 82, 69]", "[71, 85, 82, 85]", "[72, 79, 80, 69]", "[73, 67, 79, 78]", "[74, 85, 77, 80]", "[75, 73, 78, 71]", "[76, 73, 79, 78]", "[77, 73, 78, 84]", "[78, 79, 86, 65]", "[79, 78, 89, 88]", "[80, 85, 82, 69]", "[81, 85, 73, 84]"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:379:51+17
    assume {:print "$at(2,16169,16186)"} true;
    $t55 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(MakeVec4(78, 69, 79, 78), MakeVec4(87, 65, 86, 69), MakeVec4(71, 76, 79, 87), MakeVec4(66, 69, 65, 77)), MakeVec4(MakeVec4(70, 76, 85, 88), MakeVec4(83, 89, 78, 67), MakeVec4(71, 82, 73, 68), MakeVec4(67, 79, 68, 69))), MakeVec4(MakeVec4(66, 89, 84, 69), MakeVec4(72, 65, 67, 75), MakeVec4(69, 67, 72, 79), MakeVec4(86, 73, 66, 69))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(90, 69, 84, 65), MakeVec4(65, 80, 69, 88), MakeVec4(67, 79, 82, 69))), MakeVec4(MakeVec4(69, 68, 71, 69), MakeVec4(70, 76, 79, 87), MakeVec4(72, 89, 80, 69), MakeVec4(73, 82, 73, 83))), MakeVec4(MakeVec4(74, 65, 68, 69), MakeVec4(75, 73, 76, 79), MakeVec4(76, 79, 79, 80), MakeVec4(77, 65, 90, 69))), MakeVec4(MakeVec4(78, 69, 88, 84), MakeVec4(79, 77, 78, 73), MakeVec4(80, 65, 67, 69), MakeVec4(81, 85, 65, 68))), MakeVec4(MakeVec4(82, 65, 86, 69), MakeVec4(83, 65, 71, 69), MakeVec4(84, 69, 67, 72), MakeVec4(85, 78, 73, 84))), MakeVec4(MakeVec4(86, 79, 73, 68), MakeVec4(87, 65, 82, 80), MakeVec4(88, 82, 65, 89), MakeVec4(89, 65, 82, 78))), MakeVec4(MakeVec4(90, 79, 79, 77), MakeVec4(66, 79, 76, 84), MakeVec4(67, 65, 76, 77), MakeVec4(68, 65, 87, 78))), MakeVec4(MakeVec4(70, 85, 82, 89), MakeVec4(71, 65, 84, 69), MakeVec4(72, 69, 82, 79), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 65, 67, 75), MakeVec4(75, 73, 67, 75), MakeVec4(76, 79, 67, 75), MakeVec4(77, 69, 67, 72))), MakeVec4(MakeVec4(78, 79, 68, 69), MakeVec4(79, 80, 69, 78), MakeVec4(80, 69, 65, 75), MakeVec4(81, 85, 73, 84))), MakeVec4(MakeVec4(82, 73, 83, 75), MakeVec4(83, 76, 73, 77), MakeVec4(84, 65, 78, 75), MakeVec4(85, 83, 69, 82))), MakeVec4(MakeVec4(86, 69, 82, 89), MakeVec4(87, 73, 76, 68), MakeVec4(88, 66, 79, 88), MakeVec4(89, 69, 65, 82))), MakeVec4(MakeVec4(90, 69, 82, 79), MakeVec4(65, 84, 79, 77), MakeVec4(66, 76, 85, 69), MakeVec4(67, 72, 73, 80))), MakeVec4(MakeVec4(68, 65, 84, 65), MakeVec4(69, 80, 73, 67), MakeVec4(70, 65, 83, 84), MakeVec4(71, 79, 76, 68))), MakeVec4(MakeVec4(72, 65, 82, 68), MakeVec4(73, 84, 69, 77), MakeVec4(74, 79, 76, 84), MakeVec4(75, 69, 69, 80))), MakeVec4(MakeVec4(76, 79, 65, 68), MakeVec4(77, 69, 71, 65), MakeVec4(78, 65, 78, 79), MakeVec4(79, 80, 65, 76))), MakeVec4(MakeVec4(80, 76, 85, 71), MakeVec4(81, 85, 73, 90), MakeVec4(82, 85, 83, 72), MakeVec4(83, 79, 85, 76))), MakeVec4(MakeVec4(84, 73, 68, 69), MakeVec4(85, 66, 69, 82), MakeVec4(86, 79, 76, 84), MakeVec4(87, 73, 83, 69))), MakeVec4(MakeVec4(79, 88, 69, 78), MakeVec4(89, 79, 71, 73), MakeVec4(90, 73, 78, 67), MakeVec4(65, 76, 84, 79))), MakeVec4(MakeVec4(66, 69, 84, 65), MakeVec4(67, 85, 82, 69), MakeVec4(68, 85, 78, 69), MakeVec4(69, 67, 72, 79))), MakeVec4(MakeVec4(70, 73, 82, 69), MakeVec4(71, 85, 82, 85), MakeVec4(72, 79, 80, 69), MakeVec4(73, 67, 79, 78))), MakeVec4(MakeVec4(74, 85, 77, 80), MakeVec4(75, 73, 78, 71), MakeVec4(76, 73, 79, 78), MakeVec4(77, 73, 78, 84))), MakeVec4(MakeVec4(78, 79, 86, 65), MakeVec4(79, 78, 89, 88), MakeVec4(80, 85, 82, 69), MakeVec4(81, 85, 73, 84)));
    assume $IsValid'vec'vec'u8'''($t55);

    // trace_local[$t93]($t55) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:379:51+17
    assume {:print "$track_local(104,5,14):", $t55} $t55 == $t55;

    // $t56 := vector::borrow<vector<u8>>($t55, $t48) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:379:35+47
    call $t56 := $1_vector_borrow'vec'u8''($t55, $t48);
    if ($abort_flag) {
        assume {:print "$at(2,16153,16200)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t57 := string::utf8($t56) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:379:21+62
    call $t57 := $1_string_utf8($t56);
    if ($abort_flag) {
        assume {:print "$at(2,16139,16201)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // trace_local[word3]($t57) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:379:21+62
    assume {:print "$track_local(104,5,15):", $t57} $t57 == $t57;

    // $t16 := $t51 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:381:32+5
    assume {:print "$at(2,16243,16248)"} true;
    $t16 := $t51;

    // trace_local[word_combination]($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:381:32+5
    assume {:print "$track_local(104,5,16):", $t16} $t16 == $t16;

    // $t58 := borrow_local($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:382:24+21
    assume {:print "$at(2,16273,16294)"} true;
    $t58 := $Mutation($Local(16), EmptyVec(), $t16);

    // $t59 := [32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:382:60+4
    $t59 := MakeVec1(32);
    assume $IsValid'vec'u8''($t59);

    // $t60 := string::utf8($t59) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:382:47+18
    call $t60 := $1_string_utf8($t59);
    if ($abort_flag) {
        assume {:print "$at(2,16296,16314)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // string::append($t58, $t60) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:382:9+57
    call $t58 := $1_string_append($t58, $t60);
    if ($abort_flag) {
        assume {:print "$at(2,16258,16315)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // write_back[LocalRoot($t16)@]($t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:382:9+57
    $t16 := $Dereference($t58);

    // trace_local[word_combination]($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:382:9+57
    assume {:print "$track_local(104,5,16):", $t16} $t16 == $t16;

    // $t61 := borrow_local($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:383:24+21
    assume {:print "$at(2,16340,16361)"} true;
    $t61 := $Mutation($Local(16), EmptyVec(), $t16);

    // string::append($t61, $t54) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:383:9+44
    call $t61 := $1_string_append($t61, $t54);
    if ($abort_flag) {
        assume {:print "$at(2,16325,16369)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // write_back[LocalRoot($t16)@]($t61) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:383:9+44
    $t16 := $Dereference($t61);

    // trace_local[word_combination]($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:383:9+44
    assume {:print "$track_local(104,5,16):", $t16} $t16 == $t16;

    // $t62 := borrow_local($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:384:24+21
    assume {:print "$at(2,16394,16415)"} true;
    $t62 := $Mutation($Local(16), EmptyVec(), $t16);

    // $t63 := [32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:384:60+4
    $t63 := MakeVec1(32);
    assume $IsValid'vec'u8''($t63);

    // $t64 := string::utf8($t63) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:384:47+18
    call $t64 := $1_string_utf8($t63);
    if ($abort_flag) {
        assume {:print "$at(2,16417,16435)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // string::append($t62, $t64) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:384:9+57
    call $t62 := $1_string_append($t62, $t64);
    if ($abort_flag) {
        assume {:print "$at(2,16379,16436)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // write_back[LocalRoot($t16)@]($t62) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:384:9+57
    $t16 := $Dereference($t62);

    // trace_local[word_combination]($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:384:9+57
    assume {:print "$track_local(104,5,16):", $t16} $t16 == $t16;

    // $t65 := borrow_local($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:385:24+21
    assume {:print "$at(2,16461,16482)"} true;
    $t65 := $Mutation($Local(16), EmptyVec(), $t16);

    // string::append($t65, $t57) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:385:9+44
    call $t65 := $1_string_append($t65, $t57);
    if ($abort_flag) {
        assume {:print "$at(2,16446,16490)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // write_back[LocalRoot($t16)@]($t65) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:385:9+44
    $t16 := $Dereference($t65);

    // trace_local[word_combination]($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:385:9+44
    assume {:print "$track_local(104,5,16):", $t16} $t16 == $t16;

    // $t66 := move($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:390:13+16
    assume {:print "$at(2,16576,16592)"} true;
    $t66 := $t16;

    // $t67 := pack 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata($t2, $t33, $t66, $t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:387:9+124
    assume {:print "$at(2,16501,16625)"} true;
    $t67 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata($t2, $t33, $t66, $t0);

    // trace_return[0]($t67) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:336:68+2401
    assume {:print "$at(2,14230,16631)"} true;
    assume {:print "$track_return(104,5,0):", $t67} $t67 == $t67;

    // goto L25 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:336:68+2401
    goto L25;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:341:20+8
    assume {:print "$at(2,14463,14471)"} true;
L0:

    // $t68 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:341:32+1
    assume {:print "$at(2,14475,14476)"} true;
    $t68 := 1;
    assume $IsValid'u64'($t68);

    // $t69 := ==($t20, $t68) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:341:20+13
    $t69 := $IsEqual'u64'($t20, $t68);

    // if ($t69) goto L3 else goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:341:16+869
    if ($t69) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:342:26+13
    assume {:print "$at(2,14505,14518)"} true;
L3:

    // $t70 := [35, 48, 48, 56, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:342:26+13
    assume {:print "$at(2,14505,14518)"} true;
    $t70 := ConcatVec(MakeVec4(35, 48, 48, 56), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t70);

    // $t71 := string::utf8($t70) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:342:13+27
    call $t71 := $1_string_utf8($t70);
    if ($abort_flag) {
        assume {:print "$at(2,14492,14519)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t71 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:342:13+27
    $t2 := $t71;

    // trace_local[background_color]($t71) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:342:13+27
    assume {:print "$track_local(104,5,2):", $t71} $t71 == $t71;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:342:13+27
    goto L4;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:343:20+8
    assume {:print "$at(2,14539,14547)"} true;
L2:

    // $t72 := 2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:343:32+1
    assume {:print "$at(2,14551,14552)"} true;
    $t72 := 2;
    assume $IsValid'u64'($t72);

    // $t73 := ==($t20, $t72) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:343:20+13
    $t73 := $IsEqual'u64'($t20, $t72);

    // if ($t73) goto L6 else goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:343:16+793
    if ($t73) { goto L6; } else { goto L5; }

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:344:26+12
    assume {:print "$at(2,14581,14593)"} true;
L6:

    // $t74 := [35, 56, 48, 48, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:344:26+12
    assume {:print "$at(2,14581,14593)"} true;
    $t74 := ConcatVec(MakeVec4(35, 56, 48, 48), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t74);

    // $t75 := string::utf8($t74) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:344:13+26
    call $t75 := $1_string_utf8($t74);
    if ($abort_flag) {
        assume {:print "$at(2,14568,14594)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t75 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:344:13+26
    $t2 := $t75;

    // trace_local[background_color]($t75) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:344:13+26
    assume {:print "$track_local(104,5,2):", $t75} $t75 == $t75;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:344:13+26
    goto L4;

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:345:20+8
    assume {:print "$at(2,14614,14622)"} true;
L5:

    // $t76 := 3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:345:32+1
    assume {:print "$at(2,14626,14627)"} true;
    $t76 := 3;
    assume $IsValid'u64'($t76);

    // $t77 := ==($t20, $t76) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:345:20+13
    $t77 := $IsEqual'u64'($t20, $t76);

    // if ($t77) goto L8 else goto L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:345:16+718
    if ($t77) { goto L8; } else { goto L7; }

    // label L8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:346:26+11
    assume {:print "$at(2,14656,14667)"} true;
L8:

    // $t78 := [35, 48, 48, 70, 70, 56, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:346:26+11
    assume {:print "$at(2,14656,14667)"} true;
    $t78 := ConcatVec(MakeVec4(35, 48, 48, 70), MakeVec3(70, 56, 48));
    assume $IsValid'vec'u8''($t78);

    // $t79 := string::utf8($t78) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:346:13+25
    call $t79 := $1_string_utf8($t78);
    if ($abort_flag) {
        assume {:print "$at(2,14643,14668)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t79 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:346:13+25
    $t2 := $t79;

    // trace_local[background_color]($t79) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:346:13+25
    assume {:print "$track_local(104,5,2):", $t79} $t79 == $t79;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:346:13+25
    goto L4;

    // label L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:347:20+8
    assume {:print "$at(2,14688,14696)"} true;
L7:

    // $t80 := 4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:347:32+1
    assume {:print "$at(2,14700,14701)"} true;
    $t80 := 4;
    assume $IsValid'u64'($t80);

    // $t81 := ==($t20, $t80) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:347:20+13
    $t81 := $IsEqual'u64'($t20, $t80);

    // if ($t81) goto L10 else goto L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:347:16+644
    if ($t81) { goto L10; } else { goto L9; }

    // label L10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:348:26+13
    assume {:print "$at(2,14730,14743)"} true;
L10:

    // $t82 := [35, 70, 70, 56, 48, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:348:26+13
    assume {:print "$at(2,14730,14743)"} true;
    $t82 := ConcatVec(MakeVec4(35, 70, 70, 56), MakeVec3(48, 48, 48));
    assume $IsValid'vec'u8''($t82);

    // $t83 := string::utf8($t82) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:348:13+27
    call $t83 := $1_string_utf8($t82);
    if ($abort_flag) {
        assume {:print "$at(2,14717,14744)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t83 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:348:13+27
    $t2 := $t83;

    // trace_local[background_color]($t83) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:348:13+27
    assume {:print "$track_local(104,5,2):", $t83} $t83 == $t83;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:348:13+27
    goto L4;

    // label L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:349:20+8
    assume {:print "$at(2,14764,14772)"} true;
L9:

    // $t84 := 5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:349:32+1
    assume {:print "$at(2,14776,14777)"} true;
    $t84 := 5;
    assume $IsValid'u64'($t84);

    // $t85 := ==($t20, $t84) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:349:20+13
    $t85 := $IsEqual'u64'($t20, $t84);

    // if ($t85) goto L12 else goto L11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:349:16+568
    if ($t85) { goto L12; } else { goto L11; }

    // label L12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:350:26+11
    assume {:print "$at(2,14806,14817)"} true;
L12:

    // $t86 := [35, 70, 70, 70, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:350:26+11
    assume {:print "$at(2,14806,14817)"} true;
    $t86 := ConcatVec(MakeVec4(35, 70, 70, 70), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t86);

    // $t87 := string::utf8($t86) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:350:13+25
    call $t87 := $1_string_utf8($t86);
    if ($abort_flag) {
        assume {:print "$at(2,14793,14818)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t87 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:350:13+25
    $t2 := $t87;

    // trace_local[background_color]($t87) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:350:13+25
    assume {:print "$track_local(104,5,2):", $t87} $t87 == $t87;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:350:13+25
    goto L4;

    // label L11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:351:20+8
    assume {:print "$at(2,14838,14846)"} true;
L11:

    // $t88 := 6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:351:32+1
    assume {:print "$at(2,14850,14851)"} true;
    $t88 := 6;
    assume $IsValid'u64'($t88);

    // $t89 := ==($t20, $t88) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:351:20+13
    $t89 := $IsEqual'u64'($t20, $t88);

    // if ($t89) goto L14 else goto L13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:351:16+494
    if ($t89) { goto L14; } else { goto L13; }

    // label L14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:352:26+11
    assume {:print "$at(2,14880,14891)"} true;
L14:

    // $t90 := [35, 70, 70, 48, 48, 52, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:352:26+11
    assume {:print "$at(2,14880,14891)"} true;
    $t90 := ConcatVec(MakeVec4(35, 70, 70, 48), MakeVec3(48, 52, 48));
    assume $IsValid'vec'u8''($t90);

    // $t91 := string::utf8($t90) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:352:13+25
    call $t91 := $1_string_utf8($t90);
    if ($abort_flag) {
        assume {:print "$at(2,14867,14892)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t91 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:352:13+25
    $t2 := $t91;

    // trace_local[background_color]($t91) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:352:13+25
    assume {:print "$track_local(104,5,2):", $t91} $t91 == $t91;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:352:13+25
    goto L4;

    // label L13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:353:20+8
    assume {:print "$at(2,14912,14920)"} true;
L13:

    // $t92 := 7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:353:32+1
    assume {:print "$at(2,14924,14925)"} true;
    $t92 := 7;
    assume $IsValid'u64'($t92);

    // $t93 := ==($t20, $t92) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:353:20+13
    $t93 := $IsEqual'u64'($t20, $t92);

    // if ($t93) goto L16 else goto L15 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:353:16+420
    if ($t93) { goto L16; } else { goto L15; }

    // label L16 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:354:26+11
    assume {:print "$at(2,14954,14965)"} true;
L16:

    // $t94 := [35, 48, 48, 70, 70, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:354:26+11
    assume {:print "$at(2,14954,14965)"} true;
    $t94 := ConcatVec(MakeVec4(35, 48, 48, 70), MakeVec3(70, 70, 70));
    assume $IsValid'vec'u8''($t94);

    // $t95 := string::utf8($t94) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:354:13+25
    call $t95 := $1_string_utf8($t94);
    if ($abort_flag) {
        assume {:print "$at(2,14941,14966)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t95 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:354:13+25
    $t2 := $t95;

    // trace_local[background_color]($t95) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:354:13+25
    assume {:print "$track_local(104,5,2):", $t95} $t95 == $t95;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:354:13+25
    goto L4;

    // label L15 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:355:20+8
    assume {:print "$at(2,14986,14994)"} true;
L15:

    // $t96 := 8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:355:32+1
    assume {:print "$at(2,14998,14999)"} true;
    $t96 := 8;
    assume $IsValid'u64'($t96);

    // $t97 := ==($t20, $t96) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:355:20+13
    $t97 := $IsEqual'u64'($t20, $t96);

    // if ($t97) goto L18 else goto L17 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:355:16+346
    if ($t97) { goto L18; } else { goto L17; }

    // label L18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:356:26+9
    assume {:print "$at(2,15028,15037)"} true;
L18:

    // $t98 := [35, 70, 70, 52, 48, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:356:26+9
    assume {:print "$at(2,15028,15037)"} true;
    $t98 := ConcatVec(MakeVec4(35, 70, 70, 52), MakeVec3(48, 48, 48));
    assume $IsValid'vec'u8''($t98);

    // $t99 := string::utf8($t98) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:356:13+23
    call $t99 := $1_string_utf8($t98);
    if ($abort_flag) {
        assume {:print "$at(2,15015,15038)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t99 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:356:13+23
    $t2 := $t99;

    // trace_local[background_color]($t99) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:356:13+23
    assume {:print "$track_local(104,5,2):", $t99} $t99 == $t99;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:356:13+23
    goto L4;

    // label L17 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:357:20+8
    assume {:print "$at(2,15058,15066)"} true;
L17:

    // $t100 := 9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:357:32+1
    assume {:print "$at(2,15070,15071)"} true;
    $t100 := 9;
    assume $IsValid'u64'($t100);

    // $t101 := ==($t20, $t100) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:357:20+13
    $t101 := $IsEqual'u64'($t20, $t100);

    // if ($t101) goto L20 else goto L19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:357:16+274
    if ($t101) { goto L20; } else { goto L19; }

    // label L20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:358:26+9
    assume {:print "$at(2,15100,15109)"} true;
L20:

    // $t102 := [35, 56, 48, 70, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:358:26+9
    assume {:print "$at(2,15100,15109)"} true;
    $t102 := ConcatVec(MakeVec4(35, 56, 48, 70), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t102);

    // $t103 := string::utf8($t102) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:358:13+23
    call $t103 := $1_string_utf8($t102);
    if ($abort_flag) {
        assume {:print "$at(2,15087,15110)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t103 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:358:13+23
    $t2 := $t103;

    // trace_local[background_color]($t103) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:358:13+23
    assume {:print "$track_local(104,5,2):", $t103} $t103 == $t103;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:358:13+23
    goto L4;

    // label L19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:359:20+8
    assume {:print "$at(2,15130,15138)"} true;
L19:

    // $t104 := 10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:359:32+2
    assume {:print "$at(2,15142,15144)"} true;
    $t104 := 10;
    assume $IsValid'u64'($t104);

    // $t105 := ==($t20, $t104) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:359:20+14
    $t105 := $IsEqual'u64'($t20, $t104);

    // if ($t105) goto L22 else goto L21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:359:16+202
    if ($t105) { goto L22; } else { goto L21; }

    // label L22 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:360:26+11
    assume {:print "$at(2,15173,15184)"} true;
L22:

    // $t106 := [35, 52, 48, 48, 48, 70, 70] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:360:26+11
    assume {:print "$at(2,15173,15184)"} true;
    $t106 := ConcatVec(MakeVec4(35, 52, 48, 48), MakeVec3(48, 70, 70));
    assume $IsValid'vec'u8''($t106);

    // $t107 := string::utf8($t106) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:360:13+25
    call $t107 := $1_string_utf8($t106);
    if ($abort_flag) {
        assume {:print "$at(2,15160,15185)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t107 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:360:13+25
    $t2 := $t107;

    // trace_local[background_color]($t107) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:360:13+25
    assume {:print "$track_local(104,5,2):", $t107} $t107 == $t107;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:360:13+25
    goto L4;

    // label L21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:361:20+8
    assume {:print "$at(2,15205,15213)"} true;
L21:

    // $t108 := 11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:361:32+2
    assume {:print "$at(2,15217,15219)"} true;
    $t108 := 11;
    assume $IsValid'u64'($t108);

    // $t109 := ==($t20, $t108) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:361:20+14
    $t109 := $IsEqual'u64'($t20, $t108);

    // if ($t109) goto L24 else goto L23 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:361:16+127
    if ($t109) { goto L24; } else { goto L23; }

    // label L24 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:362:26+13
    assume {:print "$at(2,15248,15261)"} true;
L24:

    // $t110 := [35, 67, 48, 67, 48, 67, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:362:26+13
    assume {:print "$at(2,15248,15261)"} true;
    $t110 := ConcatVec(MakeVec4(35, 67, 48, 67), MakeVec3(48, 67, 48));
    assume $IsValid'vec'u8''($t110);

    // $t111 := string::utf8($t110) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:362:13+27
    call $t111 := $1_string_utf8($t110);
    if ($abort_flag) {
        assume {:print "$at(2,15235,15262)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t111 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:362:13+27
    $t2 := $t111;

    // trace_local[background_color]($t111) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:362:13+27
    assume {:print "$track_local(104,5,2):", $t111} $t111 == $t111;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:362:13+27
    goto L4;

    // label L23 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:364:26+12
    assume {:print "$at(2,15305,15317)"} true;
L23:

    // $t112 := [35, 70, 70, 66, 70, 48, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:364:26+12
    assume {:print "$at(2,15305,15317)"} true;
    $t112 := ConcatVec(MakeVec4(35, 70, 70, 66), MakeVec3(70, 48, 48));
    assume $IsValid'vec'u8''($t112);

    // $t113 := string::utf8($t112) on_abort goto L26 with $t21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:364:13+26
    call $t113 := $1_string_utf8($t112);
    if ($abort_flag) {
        assume {:print "$at(2,15292,15318)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(104,5):", $t21} $t21 == $t21;
        goto L26;
    }

    // $t2 := $t113 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:364:13+26
    $t2 := $t113;

    // trace_local[background_color]($t113) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:364:13+26
    assume {:print "$track_local(104,5,2):", $t113} $t113 == $t113;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:364:13+26
    goto L4;

    // label L25 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:393:5+1
    assume {:print "$at(2,16630,16631)"} true;
L25:

    // return $t67 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:393:5+1
    assume {:print "$at(2,16630,16631)"} true;
    $ret0 := $t67;
    return;

    // label L26 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:393:5+1
L26:

    // abort($t21) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:393:5+1
    assume {:print "$at(2,16630,16631)"} true;
    $abort_code := $t21;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::get_collection_address [baseline] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:687:5+267
procedure {:inline 1} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_collection_address() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection;
    var $t3: $1_object_Object'$4_collection_Collection';
    var $t4: int;
    var $temp_0'address': int;

    // bytecode translation starts here
    // $t0 := retro_nft_generator_da::get_shared_collection_address() on_abort goto L2 with $t1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:688:27+31
    assume {:print "$at(2,29642,29673)"} true;
    call $t0 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shared_collection_address();
    if ($abort_flag) {
        assume {:print "$at(2,29642,29673)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(104,6):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>($t0) on_abort goto L2 with $t1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:689:31+41
    assume {:print "$at(2,29705,29746)"} true;
    if (!$ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,29705,29746)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(104,6):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.collection($t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:690:32+27
    assume {:print "$at(2,29779,29806)"} true;
    $t3 := $t2->$collection;

    // $t4 := object::object_address<0x4::collection::Collection>($t3) on_abort goto L2 with $t1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:690:9+51
    call $t4 := $1_object_object_address'$4_collection_Collection'($t3);
    if ($abort_flag) {
        assume {:print "$at(2,29756,29807)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(104,6):", $t1} $t1 == $t1;
        goto L2;
    }

    // trace_return[0]($t4) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:690:9+51
    assume {:print "$track_return(104,6,0):", $t4} $t4 == $t4;

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:691:5+1
    assume {:print "$at(2,29812,29813)"} true;
L1:

    // return $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:691:5+1
    assume {:print "$at(2,29812,29813)"} true;
    $ret0 := $t4;
    return;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:691:5+1
L2:

    // abort($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:691:5+1
    assume {:print "$at(2,29812,29813)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::get_collection_address [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:687:5+267
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_collection_address$verify() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection;
    var $t3: $1_object_Object'$4_collection_Collection';
    var $t4: int;
    var $temp_0'address': int;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume forall $rsc: 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection: ResourceDomain<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:687:5+1
    assume {:print "$at(2,29546,29547)"} true;
    assume (forall $a_0: int :: {$ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0)}(var $rsc := $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0);
    ($IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'($rsc))));

    // $t0 := retro_nft_generator_da::get_shared_collection_address() on_abort goto L2 with $t1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:688:27+31
    assume {:print "$at(2,29642,29673)"} true;
    call $t0 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shared_collection_address();
    if ($abort_flag) {
        assume {:print "$at(2,29642,29673)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(104,6):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>($t0) on_abort goto L2 with $t1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:689:31+41
    assume {:print "$at(2,29705,29746)"} true;
    if (!$ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,29705,29746)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(104,6):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.collection($t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:690:32+27
    assume {:print "$at(2,29779,29806)"} true;
    $t3 := $t2->$collection;

    // $t4 := object::object_address<0x4::collection::Collection>($t3) on_abort goto L2 with $t1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:690:9+51
    call $t4 := $1_object_object_address'$4_collection_Collection'($t3);
    if ($abort_flag) {
        assume {:print "$at(2,29756,29807)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(104,6):", $t1} $t1 == $t1;
        goto L2;
    }

    // trace_return[0]($t4) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:690:9+51
    assume {:print "$track_return(104,6,0):", $t4} $t4 == $t4;

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:691:5+1
    assume {:print "$at(2,29812,29813)"} true;
L1:

    // return $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:691:5+1
    assume {:print "$at(2,29812,29813)"} true;
    $ret0 := $t4;
    return;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:691:5+1
L2:

    // abort($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:691:5+1
    assume {:print "$at(2,29812,29813)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::get_collection_address_legacy [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:695:5+184
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_collection_address_legacy$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: int;
    var $temp_0'address': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:695:5+1
    assume {:print "$at(2,29882,29883)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection: ResourceDomain<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:695:5+1
    assume (forall $a_0: int :: {$ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0)}(var $rsc := $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0);
    ($IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'($rsc))));

    // trace_local[_collection_creator]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:695:5+1
    assume {:print "$track_local(104,7,0):", $t0} $t0 == $t0;

    // $t1 := retro_nft_generator_da::get_collection_address() on_abort goto L2 with $t2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:697:9+24
    assume {:print "$at(2,30036,30060)"} true;
    call $t1 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_collection_address();
    if ($abort_flag) {
        assume {:print "$at(2,30036,30060)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(104,7):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:697:9+24
    assume {:print "$track_return(104,7,0):", $t1} $t1 == $t1;

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:698:5+1
    assume {:print "$at(2,30065,30066)"} true;
L1:

    // return $t1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:698:5+1
    assume {:print "$at(2,30065,30066)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:698:5+1
L2:

    // abort($t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:698:5+1
    assume {:print "$at(2,30065,30066)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::get_max_supply [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:682:5+59
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_max_supply$verify() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $temp_0'u64': int;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // $t0 := 10000 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:683:9+10
    assume {:print "$at(2,29512,29522)"} true;
    $t0 := 10000;
    assume $IsValid'u64'($t0);

    // trace_return[0]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:683:9+10
    assume {:print "$track_return(104,8,0):", $t0} $t0 == $t0;

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:684:5+1
    assume {:print "$at(2,29527,29528)"} true;
L1:

    // return $t0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:684:5+1
    assume {:print "$at(2,29527,29528)"} true;
    $ret0 := $t0;
    return;

}

// fun retro_nft_generator_da::get_shape_index [baseline] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:518:5+368
procedure {:inline 1} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shape_index(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: Vec (int);
    var $t3: int;
    var $t4: Vec (int);
    var $t5: int;
    var $t6: Vec (int);
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: Vec (int);
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t0: int;
    var $temp_0'u64': int;
    var $temp_0'vec'u64'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[rand]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:518:5+1
    assume {:print "$at(2,22145,22146)"} true;
    assume {:print "$track_local(104,9,0):", $t0} $t0 == $t0;

    // $t5 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:519:17+1
    assume {:print "$at(2,22199,22200)"} true;
    $t5 := 0;
    assume $IsValid'u64'($t5);

    // trace_local[i]($t5) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:519:17+1
    assume {:print "$track_local(104,9,1):", $t5} $t5 == $t5;

    // $t6 := ["2000", "3500", "4625", "5469", "6102", "6577", "6933", "7200", "7400", "7550", "7663", "7747", "7810"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:520:38+22
    assume {:print "$at(2,22239,22261)"} true;
    $t6 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(2000, 3500, 4625, 5469), MakeVec4(6102, 6577, 6933, 7200)), MakeVec4(7400, 7550, 7663, 7747)), MakeVec1(7810));
    assume $IsValid'vec'u64''($t6);

    // trace_local[$t5]($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:520:38+22
    assume {:print "$track_local(104,9,2):", $t6} $t6 == $t6;

    // $t7 := vector::length<u64>($t6) on_abort goto L7 with $t8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:520:22+39
    call $t7 := $1_vector_length'u64'($t6);
    if ($abort_flag) {
        assume {:print "$at(2,22223,22262)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(104,9):", $t8} $t8 == $t8;
        goto L7;
    }

    // trace_local[length]($t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:520:22+39
    assume {:print "$track_local(104,9,3):", $t7} $t7 == $t7;

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume {:print "$at(2,22288,22289)"} true;
L4:

    // $t1 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume {:print "$at(2,22288,22289)"} true;
    havoc $t1;

    // assume WellFormed($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume $IsValid'u64'($t1);

    // $t9 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    havoc $t9;

    // assume WellFormed($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume $IsValid'bool'($t9);

    // $t10 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    havoc $t10;

    // assume WellFormed($t10) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume $IsValid'vec'u64''($t10);

    // $t11 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    havoc $t11;

    // assume WellFormed($t11) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume $IsValid'u64'($t11);

    // $t12 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    havoc $t12;

    // assume WellFormed($t12) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume $IsValid'bool'($t12);

    // $t13 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    havoc $t13;

    // assume WellFormed($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume $IsValid'u64'($t13);

    // $t14 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    havoc $t14;

    // assume WellFormed($t14) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume $IsValid'u64'($t14);

    // trace_local[i]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume {:print "$info(): enter loop, variable(s) i havocked and reassigned"} true;
    assume {:print "$track_local(104,9,1):", $t1} $t1 == $t1;

    // assume Not(AbortFlag()) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume !$abort_flag;

    // $t9 := <($t1, $t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+10
    call $t9 := $Lt($t1, $t7);

    // if ($t9) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:9+163
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:523:17+4
    assume {:print "$at(2,22318,22322)"} true;
L1:

    // $t10 := ["2000", "3500", "4625", "5469", "6102", "6577", "6933", "7200", "7400", "7550", "7663", "7747", "7810"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:523:41+22
    assume {:print "$at(2,22342,22364)"} true;
    $t10 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(2000, 3500, 4625, 5469), MakeVec4(6102, 6577, 6933, 7200)), MakeVec4(7400, 7550, 7663, 7747)), MakeVec1(7810));
    assume $IsValid'vec'u64''($t10);

    // trace_local[$t13]($t10) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:523:41+22
    assume {:print "$track_local(104,9,4):", $t10} $t10 == $t10;

    // $t11 := vector::borrow<u64>($t10, $t1) on_abort goto L7 with $t8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:523:25+42
    call $t11 := $1_vector_borrow'u64'($t10, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,22326,22368)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(104,9):", $t8} $t8 == $t8;
        goto L7;
    }

    // $t12 := <($t0, $t11) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:523:17+50
    call $t12 := $Lt($t0, $t11);

    // if ($t12) goto L3 else goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:523:13+96
    if ($t12) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:524:24+1
    assume {:print "$at(2,22395,22396)"} true;
L3:

    // trace_return[0]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:524:17+8
    assume {:print "$at(2,22388,22396)"} true;
    assume {:print "$track_return(104,9,0):", $t1} $t1 == $t1;

    // $t15 := move($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:524:17+8
    $t15 := $t1;

    // goto L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:524:17+8
    goto L6;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:526:17+1
    assume {:print "$at(2,22428,22429)"} true;
L2:

    // $t13 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:526:21+1
    assume {:print "$at(2,22432,22433)"} true;
    $t13 := 1;
    assume $IsValid'u64'($t13);

    // $t14 := +($t1, $t13) on_abort goto L7 with $t8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:526:17+5
    call $t14 := $AddU64($t1, $t13);
    if ($abort_flag) {
        assume {:print "$at(2,22428,22433)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(104,9):", $t8} $t8 == $t8;
        goto L7;
    }

    // trace_local[i]($t14) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:526:13+9
    assume {:print "$track_local(104,9,1):", $t14} $t14 == $t14;

    // goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:9+163
    assume {:print "$at(2,22281,22444)"} true;
    goto L5;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:530:9+6
    assume {:print "$at(2,22497,22503)"} true;
L0:

    // $t16 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:530:18+1
    assume {:print "$at(2,22506,22507)"} true;
    $t16 := 1;
    assume $IsValid'u64'($t16);

    // $t17 := -($t7, $t16) on_abort goto L7 with $t8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:530:9+10
    call $t17 := $Sub($t7, $t16);
    if ($abort_flag) {
        assume {:print "$at(2,22497,22507)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(104,9):", $t8} $t8 == $t8;
        goto L7;
    }

    // trace_return[0]($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:518:41+332
    assume {:print "$at(2,22181,22513)"} true;
    assume {:print "$track_return(104,9,0):", $t17} $t17 == $t17;

    // $t15 := move($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:518:41+332
    $t15 := $t17;

    // goto L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:518:41+332
    goto L6;

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:530:9+6
    // Loop invariant checking block for the loop started with header: L4
    assume {:print "$at(2,22497,22503)"} true;
L5:

    // stop() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:530:9+6
    assume {:print "$at(2,22497,22503)"} true;
    assume false;
    return;

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:531:5+1
    assume {:print "$at(2,22512,22513)"} true;
L6:

    // return $t15 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:531:5+1
    assume {:print "$at(2,22512,22513)"} true;
    $ret0 := $t15;
    return;

    // label L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:531:5+1
L7:

    // abort($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:531:5+1
    assume {:print "$at(2,22512,22513)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::get_shape_index [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:518:5+368
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shape_index$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: Vec (int);
    var $t3: int;
    var $t4: Vec (int);
    var $t5: int;
    var $t6: Vec (int);
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: Vec (int);
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t0: int;
    var $temp_0'u64': int;
    var $temp_0'vec'u64'': Vec (int);
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:518:5+1
    assume {:print "$at(2,22145,22146)"} true;
    assume $IsValid'u64'($t0);

    // trace_local[rand]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:518:5+1
    assume {:print "$track_local(104,9,0):", $t0} $t0 == $t0;

    // $t5 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:519:17+1
    assume {:print "$at(2,22199,22200)"} true;
    $t5 := 0;
    assume $IsValid'u64'($t5);

    // trace_local[i]($t5) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:519:17+1
    assume {:print "$track_local(104,9,1):", $t5} $t5 == $t5;

    // $t6 := ["2000", "3500", "4625", "5469", "6102", "6577", "6933", "7200", "7400", "7550", "7663", "7747", "7810"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:520:38+22
    assume {:print "$at(2,22239,22261)"} true;
    $t6 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(2000, 3500, 4625, 5469), MakeVec4(6102, 6577, 6933, 7200)), MakeVec4(7400, 7550, 7663, 7747)), MakeVec1(7810));
    assume $IsValid'vec'u64''($t6);

    // trace_local[$t5]($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:520:38+22
    assume {:print "$track_local(104,9,2):", $t6} $t6 == $t6;

    // $t7 := vector::length<u64>($t6) on_abort goto L7 with $t8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:520:22+39
    call $t7 := $1_vector_length'u64'($t6);
    if ($abort_flag) {
        assume {:print "$at(2,22223,22262)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(104,9):", $t8} $t8 == $t8;
        goto L7;
    }

    // trace_local[length]($t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:520:22+39
    assume {:print "$track_local(104,9,3):", $t7} $t7 == $t7;

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume {:print "$at(2,22288,22289)"} true;
L4:

    // $t1 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume {:print "$at(2,22288,22289)"} true;
    havoc $t1;

    // assume WellFormed($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume $IsValid'u64'($t1);

    // $t9 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    havoc $t9;

    // assume WellFormed($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume $IsValid'bool'($t9);

    // $t10 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    havoc $t10;

    // assume WellFormed($t10) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume $IsValid'vec'u64''($t10);

    // $t11 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    havoc $t11;

    // assume WellFormed($t11) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume $IsValid'u64'($t11);

    // $t12 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    havoc $t12;

    // assume WellFormed($t12) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume $IsValid'bool'($t12);

    // $t13 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    havoc $t13;

    // assume WellFormed($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume $IsValid'u64'($t13);

    // $t14 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    havoc $t14;

    // assume WellFormed($t14) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume $IsValid'u64'($t14);

    // trace_local[i]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume {:print "$info(): enter loop, variable(s) i havocked and reassigned"} true;
    assume {:print "$track_local(104,9,1):", $t1} $t1 == $t1;

    // assume Not(AbortFlag()) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+1
    assume !$abort_flag;

    // $t9 := <($t1, $t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:16+10
    call $t9 := $Lt($t1, $t7);

    // if ($t9) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:9+163
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:523:17+4
    assume {:print "$at(2,22318,22322)"} true;
L1:

    // $t10 := ["2000", "3500", "4625", "5469", "6102", "6577", "6933", "7200", "7400", "7550", "7663", "7747", "7810"] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:523:41+22
    assume {:print "$at(2,22342,22364)"} true;
    $t10 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(2000, 3500, 4625, 5469), MakeVec4(6102, 6577, 6933, 7200)), MakeVec4(7400, 7550, 7663, 7747)), MakeVec1(7810));
    assume $IsValid'vec'u64''($t10);

    // trace_local[$t13]($t10) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:523:41+22
    assume {:print "$track_local(104,9,4):", $t10} $t10 == $t10;

    // $t11 := vector::borrow<u64>($t10, $t1) on_abort goto L7 with $t8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:523:25+42
    call $t11 := $1_vector_borrow'u64'($t10, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,22326,22368)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(104,9):", $t8} $t8 == $t8;
        goto L7;
    }

    // $t12 := <($t0, $t11) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:523:17+50
    call $t12 := $Lt($t0, $t11);

    // if ($t12) goto L3 else goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:523:13+96
    if ($t12) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:524:24+1
    assume {:print "$at(2,22395,22396)"} true;
L3:

    // trace_return[0]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:524:17+8
    assume {:print "$at(2,22388,22396)"} true;
    assume {:print "$track_return(104,9,0):", $t1} $t1 == $t1;

    // $t15 := move($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:524:17+8
    $t15 := $t1;

    // goto L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:524:17+8
    goto L6;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:526:17+1
    assume {:print "$at(2,22428,22429)"} true;
L2:

    // $t13 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:526:21+1
    assume {:print "$at(2,22432,22433)"} true;
    $t13 := 1;
    assume $IsValid'u64'($t13);

    // $t14 := +($t1, $t13) on_abort goto L7 with $t8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:526:17+5
    call $t14 := $AddU64($t1, $t13);
    if ($abort_flag) {
        assume {:print "$at(2,22428,22433)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(104,9):", $t8} $t8 == $t8;
        goto L7;
    }

    // trace_local[i]($t14) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:526:13+9
    assume {:print "$track_local(104,9,1):", $t14} $t14 == $t14;

    // goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:522:9+163
    assume {:print "$at(2,22281,22444)"} true;
    goto L5;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:530:9+6
    assume {:print "$at(2,22497,22503)"} true;
L0:

    // $t16 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:530:18+1
    assume {:print "$at(2,22506,22507)"} true;
    $t16 := 1;
    assume $IsValid'u64'($t16);

    // $t17 := -($t7, $t16) on_abort goto L7 with $t8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:530:9+10
    call $t17 := $Sub($t7, $t16);
    if ($abort_flag) {
        assume {:print "$at(2,22497,22507)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(104,9):", $t8} $t8 == $t8;
        goto L7;
    }

    // trace_return[0]($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:518:41+332
    assume {:print "$at(2,22181,22513)"} true;
    assume {:print "$track_return(104,9,0):", $t17} $t17 == $t17;

    // $t15 := move($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:518:41+332
    $t15 := $t17;

    // goto L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:518:41+332
    goto L6;

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:530:9+6
    // Loop invariant checking block for the loop started with header: L4
    assume {:print "$at(2,22497,22503)"} true;
L5:

    // stop() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:530:9+6
    assume {:print "$at(2,22497,22503)"} true;
    assume false;
    return;

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:531:5+1
    assume {:print "$at(2,22512,22513)"} true;
L6:

    // return $t15 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:531:5+1
    assume {:print "$at(2,22512,22513)"} true;
    $ret0 := $t15;
    return;

    // label L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:531:5+1
L7:

    // abort($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:531:5+1
    assume {:print "$at(2,22512,22513)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::get_shape_svg [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:534:5+2761
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shape_svg$verify(_$t0: $1_string_String) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: $1_string_String;
    var $t3: Vec (int);
    var $t4: int;
    var $t5: Vec (int);
    var $t6: bool;
    var $t7: Vec (int);
    var $t8: $1_string_String;
    var $t9: Vec (int);
    var $t10: bool;
    var $t11: Vec (int);
    var $t12: $1_string_String;
    var $t13: Vec (int);
    var $t14: bool;
    var $t15: Vec (int);
    var $t16: $1_string_String;
    var $t17: Vec (int);
    var $t18: bool;
    var $t19: Vec (int);
    var $t20: $1_string_String;
    var $t21: Vec (int);
    var $t22: bool;
    var $t23: Vec (int);
    var $t24: $1_string_String;
    var $t25: Vec (int);
    var $t26: bool;
    var $t27: Vec (int);
    var $t28: $1_string_String;
    var $t29: Vec (int);
    var $t30: bool;
    var $t31: Vec (int);
    var $t32: $1_string_String;
    var $t33: Vec (int);
    var $t34: bool;
    var $t35: Vec (int);
    var $t36: $1_string_String;
    var $t37: Vec (int);
    var $t38: bool;
    var $t39: Vec (int);
    var $t40: $1_string_String;
    var $t41: Vec (int);
    var $t42: bool;
    var $t43: Vec (int);
    var $t44: $1_string_String;
    var $t45: Vec (int);
    var $t46: bool;
    var $t47: Vec (int);
    var $t48: $1_string_String;
    var $t49: Vec (int);
    var $t50: bool;
    var $t51: Vec (int);
    var $t52: $1_string_String;
    var $t53: Vec (int);
    var $t54: bool;
    var $t55: Vec (int);
    var $t56: $1_string_String;
    var $t57: Vec (int);
    var $t58: $1_string_String;
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:534:5+1
    assume {:print "$at(2,22573,22574)"} true;
    assume $IsValid'$1_string_String'($t0);

    // trace_local[shape]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:534:5+1
    assume {:print "$track_local(104,10,0):", $t0} $t0 == $t0;

    // $t3 := string::bytes($t0) on_abort goto L28 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:535:28+21
    assume {:print "$at(2,22643,22664)"} true;
    call $t3 := $1_string_bytes($t0);
    if ($abort_flag) {
        assume {:print "$at(2,22643,22664)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,10):", $t4} $t4 == $t4;
        goto L28;
    }

    // trace_local[shape_bytes]($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:535:27+22
    assume {:print "$track_local(104,10,1):", $t3} $t3 == $t3;

    // $t5 := [67, 105, 114, 99, 108, 101] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:537:28+9
    assume {:print "$at(2,22702,22711)"} true;
    $t5 := ConcatVec(MakeVec4(67, 105, 114, 99), MakeVec2(108, 101));
    assume $IsValid'vec'u8''($t5);

    // $t6 := ==($t3, $t5) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:537:13+24
    $t6 := $IsEqual'vec'u8''($t3, $t5);

    // if ($t6) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:537:9+2645
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:538:26+74
    assume {:print "$at(2,22740,22814)"} true;
L1:

    // $t7 := [60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 50, 48, 48, 34, 32, 99, 121, 61, 34, 50, 48, 48, 34, 32, 114, 61, 34, 54, 48, 34, 32, 102, 105, 108, 108, 61, 34, 119, 104, 105, 116, 101, 34, 32, 111, 112, 97, 99, 105, 116, 121, 61, 34, 48, 46, 57, 34, 47, 62] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:538:26+74
    assume {:print "$at(2,22740,22814)"} true;
    $t7 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(60, 99, 105, 114), MakeVec4(99, 108, 101, 32)), MakeVec4(99, 120, 61, 34)), MakeVec4(50, 48, 48, 34)), MakeVec4(32, 99, 121, 61)), MakeVec4(34, 50, 48, 48)), MakeVec4(34, 32, 114, 61)), MakeVec4(34, 54, 48, 34)), MakeVec4(32, 102, 105, 108)), MakeVec4(108, 61, 34, 119)), MakeVec4(104, 105, 116, 101)), MakeVec4(34, 32, 111, 112)), MakeVec4(97, 99, 105, 116)), MakeVec4(121, 61, 34, 48)), MakeVec4(46, 57, 34, 47)), MakeVec1(62));
    assume $IsValid'vec'u8''($t7);

    // $t8 := string::utf8($t7) on_abort goto L28 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:538:13+88
    call $t8 := $1_string_utf8($t7);
    if ($abort_flag) {
        assume {:print "$at(2,22727,22815)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,10):", $t4} $t4 == $t4;
        goto L28;
    }

    // $t2 := $t8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:538:13+88
    $t2 := $t8;

    // trace_local[return]($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:538:13+88
    assume {:print "$track_local(104,10,2):", $t8} $t8 == $t8;

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:537:9+2645
    assume {:print "$at(2,22683,25328)"} true;
L4:

    // trace_return[0]($t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:537:9+2645
    assume {:print "$at(2,22683,25328)"} true;
    assume {:print "$track_return(104,10,0):", $t2} $t2 == $t2;

    // goto L27 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:537:9+2645
    goto L27;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:539:20+11
    assume {:print "$at(2,22835,22846)"} true;
L0:

    // $t9 := [83, 113, 117, 97, 114, 101] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:539:35+9
    assume {:print "$at(2,22850,22859)"} true;
    $t9 := ConcatVec(MakeVec4(83, 113, 117, 97), MakeVec2(114, 101));
    assume $IsValid'vec'u8''($t9);

    // $t10 := ==($t3, $t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:539:20+24
    $t10 := $IsEqual'vec'u8''($t3, $t9);

    // if ($t10) goto L3 else goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:539:16+2497
    if ($t10) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:540:26+90
    assume {:print "$at(2,22888,22978)"} true;
L3:

    // $t11 := [60, 114, 101, 99, 116, 32, 120, 61, 34, 49, 52, 48, 34, 32, 121, 61, 34, 49, 52, 48, 34, 32, 119, 105, 100, 116, 104, 61, 34, 49, 50, 48, 34, 32, 104, 101, 105, 103, 104, 116, 61, 34, 49, 50, 48, 34, 32, 102, 105, 108, 108, 61, 34, 119, 104, 105, 116, 101, 34, 32, 111, 112, 97, 99, 105, 116, 121, 61, 34, 48, 46, 57, 34, 47, 62] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:540:26+90
    assume {:print "$at(2,22888,22978)"} true;
    $t11 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(60, 114, 101, 99), MakeVec4(116, 32, 120, 61)), MakeVec4(34, 49, 52, 48)), MakeVec4(34, 32, 121, 61)), MakeVec4(34, 49, 52, 48)), MakeVec4(34, 32, 119, 105)), MakeVec4(100, 116, 104, 61)), MakeVec4(34, 49, 50, 48)), MakeVec4(34, 32, 104, 101)), MakeVec4(105, 103, 104, 116)), MakeVec4(61, 34, 49, 50)), MakeVec4(48, 34, 32, 102)), MakeVec4(105, 108, 108, 61)), MakeVec4(34, 119, 104, 105)), MakeVec4(116, 101, 34, 32)), MakeVec4(111, 112, 97, 99)), MakeVec4(105, 116, 121, 61)), MakeVec4(34, 48, 46, 57)), MakeVec3(34, 47, 62));
    assume $IsValid'vec'u8''($t11);

    // $t12 := string::utf8($t11) on_abort goto L28 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:540:13+104
    call $t12 := $1_string_utf8($t11);
    if ($abort_flag) {
        assume {:print "$at(2,22875,22979)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,10):", $t4} $t4 == $t4;
        goto L28;
    }

    // $t2 := $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:540:13+104
    $t2 := $t12;

    // trace_local[return]($t12) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:540:13+104
    assume {:print "$track_local(104,10,2):", $t12} $t12 == $t12;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:540:13+104
    goto L4;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:541:20+11
    assume {:print "$at(2,22999,23010)"} true;
L2:

    // $t13 := [84, 114, 105, 97, 110, 103, 108, 101] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:541:35+11
    assume {:print "$at(2,23014,23025)"} true;
    $t13 := ConcatVec(MakeVec4(84, 114, 105, 97), MakeVec4(110, 103, 108, 101));
    assume $IsValid'vec'u8''($t13);

    // $t14 := ==($t3, $t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:541:20+26
    $t14 := $IsEqual'vec'u8''($t3, $t13);

    // if ($t14) goto L6 else goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:541:16+2333
    if ($t14) { goto L6; } else { goto L5; }

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:542:26+79
    assume {:print "$at(2,23054,23133)"} true;
L6:

    // $t15 := [60, 112, 111, 108, 121, 103, 111, 110, 32, 112, 111, 105, 110, 116, 115, 61, 34, 50, 48, 48, 44, 49, 52, 48, 32, 50, 54, 48, 44, 50, 54, 48, 32, 49, 52, 48, 44, 50, 54, 48, 34, 32, 102, 105, 108, 108, 61, 34, 119, 104, 105, 116, 101, 34, 32, 111, 112, 97, 99, 105, 116, 121, 61, 34, 48, 46, 57, 34, 47, 62] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:542:26+79
    assume {:print "$at(2,23054,23133)"} true;
    $t15 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(60, 112, 111, 108), MakeVec4(121, 103, 111, 110)), MakeVec4(32, 112, 111, 105)), MakeVec4(110, 116, 115, 61)), MakeVec4(34, 50, 48, 48)), MakeVec4(44, 49, 52, 48)), MakeVec4(32, 50, 54, 48)), MakeVec4(44, 50, 54, 48)), MakeVec4(32, 49, 52, 48)), MakeVec4(44, 50, 54, 48)), MakeVec4(34, 32, 102, 105)), MakeVec4(108, 108, 61, 34)), MakeVec4(119, 104, 105, 116)), MakeVec4(101, 34, 32, 111)), MakeVec4(112, 97, 99, 105)), MakeVec4(116, 121, 61, 34)), MakeVec4(48, 46, 57, 34)), MakeVec2(47, 62));
    assume $IsValid'vec'u8''($t15);

    // $t16 := string::utf8($t15) on_abort goto L28 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:542:13+93
    call $t16 := $1_string_utf8($t15);
    if ($abort_flag) {
        assume {:print "$at(2,23041,23134)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,10):", $t4} $t4 == $t4;
        goto L28;
    }

    // $t2 := $t16 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:542:13+93
    $t2 := $t16;

    // trace_local[return]($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:542:13+93
    assume {:print "$track_local(104,10,2):", $t16} $t16 == $t16;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:542:13+93
    goto L4;

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:543:20+11
    assume {:print "$at(2,23154,23165)"} true;
L5:

    // $t17 := [68, 105, 97, 109, 111, 110, 100] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:543:35+10
    assume {:print "$at(2,23169,23179)"} true;
    $t17 := ConcatVec(MakeVec4(68, 105, 97, 109), MakeVec3(111, 110, 100));
    assume $IsValid'vec'u8''($t17);

    // $t18 := ==($t3, $t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:543:20+25
    $t18 := $IsEqual'vec'u8''($t3, $t17);

    // if ($t18) goto L8 else goto L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:543:16+2178
    if ($t18) { goto L8; } else { goto L7; }

    // label L8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:544:26+87
    assume {:print "$at(2,23208,23295)"} true;
L8:

    // $t19 := [60, 112, 111, 108, 121, 103, 111, 110, 32, 112, 111, 105, 110, 116, 115, 61, 34, 50, 48, 48, 44, 49, 52, 48, 32, 50, 54, 48, 44, 50, 48, 48, 32, 50, 48, 48, 44, 50, 54, 48, 32, 49, 52, 48, 44, 50, 48, 48, 34, 32, 102, 105, 108, 108, 61, 34, 119, 104, 105, 116, 101, 34, 32, 111, 112, 97, 99, 105, 116, 121, 61, 34, 48, 46, 57, 34, 47, 62] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:544:26+87
    assume {:print "$at(2,23208,23295)"} true;
    $t19 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(60, 112, 111, 108), MakeVec4(121, 103, 111, 110)), MakeVec4(32, 112, 111, 105)), MakeVec4(110, 116, 115, 61)), MakeVec4(34, 50, 48, 48)), MakeVec4(44, 49, 52, 48)), MakeVec4(32, 50, 54, 48)), MakeVec4(44, 50, 48, 48)), MakeVec4(32, 50, 48, 48)), MakeVec4(44, 50, 54, 48)), MakeVec4(32, 49, 52, 48)), MakeVec4(44, 50, 48, 48)), MakeVec4(34, 32, 102, 105)), MakeVec4(108, 108, 61, 34)), MakeVec4(119, 104, 105, 116)), MakeVec4(101, 34, 32, 111)), MakeVec4(112, 97, 99, 105)), MakeVec4(116, 121, 61, 34)), MakeVec4(48, 46, 57, 34)), MakeVec2(47, 62));
    assume $IsValid'vec'u8''($t19);

    // $t20 := string::utf8($t19) on_abort goto L28 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:544:13+101
    call $t20 := $1_string_utf8($t19);
    if ($abort_flag) {
        assume {:print "$at(2,23195,23296)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,10):", $t4} $t4 == $t4;
        goto L28;
    }

    // $t2 := $t20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:544:13+101
    $t2 := $t20;

    // trace_local[return]($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:544:13+101
    assume {:print "$track_local(104,10,2):", $t20} $t20 == $t20;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:544:13+101
    goto L4;

    // label L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:545:20+11
    assume {:print "$at(2,23316,23327)"} true;
L7:

    // $t21 := [83, 116, 97, 114] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:545:35+7
    assume {:print "$at(2,23331,23338)"} true;
    $t21 := MakeVec4(83, 116, 97, 114);
    assume $IsValid'vec'u8''($t21);

    // $t22 := ==($t3, $t21) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:545:20+22
    $t22 := $IsEqual'vec'u8''($t3, $t21);

    // if ($t22) goto L10 else goto L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:545:16+2016
    if ($t22) { goto L10; } else { goto L9; }

    // label L10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:546:26+135
    assume {:print "$at(2,23367,23502)"} true;
L10:

    // $t23 := [60, 112, 111, 108, 121, 103, 111, 110, 32, 112, 111, 105, 110, 116, 115, 61, 34, 50, 48, 48, 44, 49, 52, 48, 32, 50, 49, 48, 44, 49, 55, 48, 32, 50, 52, 48, 44, 49, 55, 48, 32, 50, 50, 48, 44, 49, 57, 48, 32, 50, 51, 48, 44, 50, 50, 48, 32, 50, 48, 48, 44, 50, 48, 48, 32, 49, 55, 48, 44, 50, 50, 48, 32, 49, 56, 48, 44, 49, 57, 48, 32, 49, 54, 48, 44, 49, 55, 48, 32, 49, 57, 48, 44, 49, 55, 48, 34, 32, 102, 105, 108, 108, 61, 34, 119, 104, 105, 116, 101, 34, 32, 111, 112, 97, 99, 105, 116, 121, 61, 34, 48, 46, 57, 34, 47, 62] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:546:26+135
    assume {:print "$at(2,23367,23502)"} true;
    $t23 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(60, 112, 111, 108), MakeVec4(121, 103, 111, 110)), MakeVec4(32, 112, 111, 105)), MakeVec4(110, 116, 115, 61)), MakeVec4(34, 50, 48, 48)), MakeVec4(44, 49, 52, 48)), MakeVec4(32, 50, 49, 48)), MakeVec4(44, 49, 55, 48)), MakeVec4(32, 50, 52, 48)), MakeVec4(44, 49, 55, 48)), MakeVec4(32, 50, 50, 48)), MakeVec4(44, 49, 57, 48)), MakeVec4(32, 50, 51, 48)), MakeVec4(44, 50, 50, 48)), MakeVec4(32, 50, 48, 48)), MakeVec4(44, 50, 48, 48)), MakeVec4(32, 49, 55, 48)), MakeVec4(44, 50, 50, 48)), MakeVec4(32, 49, 56, 48)), MakeVec4(44, 49, 57, 48)), MakeVec4(32, 49, 54, 48)), MakeVec4(44, 49, 55, 48)), MakeVec4(32, 49, 57, 48)), MakeVec4(44, 49, 55, 48)), MakeVec4(34, 32, 102, 105)), MakeVec4(108, 108, 61, 34)), MakeVec4(119, 104, 105, 116)), MakeVec4(101, 34, 32, 111)), MakeVec4(112, 97, 99, 105)), MakeVec4(116, 121, 61, 34)), MakeVec4(48, 46, 57, 34)), MakeVec2(47, 62));
    assume $IsValid'vec'u8''($t23);

    // $t24 := string::utf8($t23) on_abort goto L28 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:546:13+149
    call $t24 := $1_string_utf8($t23);
    if ($abort_flag) {
        assume {:print "$at(2,23354,23503)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,10):", $t4} $t4 == $t4;
        goto L28;
    }

    // $t2 := $t24 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:546:13+149
    $t2 := $t24;

    // trace_local[return]($t24) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:546:13+149
    assume {:print "$track_local(104,10,2):", $t24} $t24 == $t24;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:546:13+149
    goto L4;

    // label L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:547:20+11
    assume {:print "$at(2,23523,23534)"} true;
L9:

    // $t25 := [80, 101, 110, 116, 97, 103, 111, 110] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:547:35+11
    assume {:print "$at(2,23538,23549)"} true;
    $t25 := ConcatVec(MakeVec4(80, 101, 110, 116), MakeVec4(97, 103, 111, 110));
    assume $IsValid'vec'u8''($t25);

    // $t26 := ==($t3, $t25) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:547:20+26
    $t26 := $IsEqual'vec'u8''($t3, $t25);

    // if ($t26) goto L12 else goto L11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:547:16+1809
    if ($t26) { goto L12; } else { goto L11; }

    // label L12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:548:26+95
    assume {:print "$at(2,23578,23673)"} true;
L12:

    // $t27 := [60, 112, 111, 108, 121, 103, 111, 110, 32, 112, 111, 105, 110, 116, 115, 61, 34, 50, 48, 48, 44, 49, 52, 48, 32, 50, 51, 48, 44, 49, 54, 48, 32, 50, 50, 48, 44, 50, 48, 48, 32, 49, 56, 48, 44, 50, 48, 48, 32, 49, 55, 48, 44, 49, 54, 48, 34, 32, 102, 105, 108, 108, 61, 34, 119, 104, 105, 116, 101, 34, 32, 111, 112, 97, 99, 105, 116, 121, 61, 34, 48, 46, 57, 34, 47, 62] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:548:26+95
    assume {:print "$at(2,23578,23673)"} true;
    $t27 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(60, 112, 111, 108), MakeVec4(121, 103, 111, 110)), MakeVec4(32, 112, 111, 105)), MakeVec4(110, 116, 115, 61)), MakeVec4(34, 50, 48, 48)), MakeVec4(44, 49, 52, 48)), MakeVec4(32, 50, 51, 48)), MakeVec4(44, 49, 54, 48)), MakeVec4(32, 50, 50, 48)), MakeVec4(44, 50, 48, 48)), MakeVec4(32, 49, 56, 48)), MakeVec4(44, 50, 48, 48)), MakeVec4(32, 49, 55, 48)), MakeVec4(44, 49, 54, 48)), MakeVec4(34, 32, 102, 105)), MakeVec4(108, 108, 61, 34)), MakeVec4(119, 104, 105, 116)), MakeVec4(101, 34, 32, 111)), MakeVec4(112, 97, 99, 105)), MakeVec4(116, 121, 61, 34)), MakeVec4(48, 46, 57, 34)), MakeVec2(47, 62));
    assume $IsValid'vec'u8''($t27);

    // $t28 := string::utf8($t27) on_abort goto L28 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:548:13+109
    call $t28 := $1_string_utf8($t27);
    if ($abort_flag) {
        assume {:print "$at(2,23565,23674)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,10):", $t4} $t4 == $t4;
        goto L28;
    }

    // $t2 := $t28 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:548:13+109
    $t2 := $t28;

    // trace_local[return]($t28) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:548:13+109
    assume {:print "$track_local(104,10,2):", $t28} $t28 == $t28;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:548:13+109
    goto L4;

    // label L11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:549:20+11
    assume {:print "$at(2,23694,23705)"} true;
L11:

    // $t29 := [72, 101, 120, 97, 103, 111, 110] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:549:35+10
    assume {:print "$at(2,23709,23719)"} true;
    $t29 := ConcatVec(MakeVec4(72, 101, 120, 97), MakeVec3(103, 111, 110));
    assume $IsValid'vec'u8''($t29);

    // $t30 := ==($t3, $t29) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:549:20+25
    $t30 := $IsEqual'vec'u8''($t3, $t29);

    // if ($t30) goto L14 else goto L13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:549:16+1638
    if ($t30) { goto L14; } else { goto L13; }

    // label L14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:550:26+103
    assume {:print "$at(2,23748,23851)"} true;
L14:

    // $t31 := [60, 112, 111, 108, 121, 103, 111, 110, 32, 112, 111, 105, 110, 116, 115, 61, 34, 50, 48, 48, 44, 49, 52, 48, 32, 50, 51, 48, 44, 49, 54, 48, 32, 50, 51, 48, 44, 50, 48, 48, 32, 50, 48, 48, 44, 50, 50, 48, 32, 49, 55, 48, 44, 50, 48, 48, 32, 49, 55, 48, 44, 49, 54, 48, 34, 32, 102, 105, 108, 108, 61, 34, 119, 104, 105, 116, 101, 34, 32, 111, 112, 97, 99, 105, 116, 121, 61, 34, 48, 46, 57, 34, 47, 62] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:550:26+103
    assume {:print "$at(2,23748,23851)"} true;
    $t31 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(60, 112, 111, 108), MakeVec4(121, 103, 111, 110)), MakeVec4(32, 112, 111, 105)), MakeVec4(110, 116, 115, 61)), MakeVec4(34, 50, 48, 48)), MakeVec4(44, 49, 52, 48)), MakeVec4(32, 50, 51, 48)), MakeVec4(44, 49, 54, 48)), MakeVec4(32, 50, 51, 48)), MakeVec4(44, 50, 48, 48)), MakeVec4(32, 50, 48, 48)), MakeVec4(44, 50, 50, 48)), MakeVec4(32, 49, 55, 48)), MakeVec4(44, 50, 48, 48)), MakeVec4(32, 49, 55, 48)), MakeVec4(44, 49, 54, 48)), MakeVec4(34, 32, 102, 105)), MakeVec4(108, 108, 61, 34)), MakeVec4(119, 104, 105, 116)), MakeVec4(101, 34, 32, 111)), MakeVec4(112, 97, 99, 105)), MakeVec4(116, 121, 61, 34)), MakeVec4(48, 46, 57, 34)), MakeVec2(47, 62));
    assume $IsValid'vec'u8''($t31);

    // $t32 := string::utf8($t31) on_abort goto L28 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:550:13+117
    call $t32 := $1_string_utf8($t31);
    if ($abort_flag) {
        assume {:print "$at(2,23735,23852)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,10):", $t4} $t4 == $t4;
        goto L28;
    }

    // $t2 := $t32 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:550:13+117
    $t2 := $t32;

    // trace_local[return]($t32) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:550:13+117
    assume {:print "$track_local(104,10,2):", $t32} $t32 == $t32;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:550:13+117
    goto L4;

    // label L13 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:551:20+11
    assume {:print "$at(2,23872,23883)"} true;
L13:

    // $t33 := [79, 99, 116, 97, 103, 111, 110] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:551:35+10
    assume {:print "$at(2,23887,23897)"} true;
    $t33 := ConcatVec(MakeVec4(79, 99, 116, 97), MakeVec3(103, 111, 110));
    assume $IsValid'vec'u8''($t33);

    // $t34 := ==($t3, $t33) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:551:20+25
    $t34 := $IsEqual'vec'u8''($t3, $t33);

    // if ($t34) goto L16 else goto L15 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:551:16+1460
    if ($t34) { goto L16; } else { goto L15; }

    // label L16 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:552:26+119
    assume {:print "$at(2,23926,24045)"} true;
L16:

    // $t35 := [60, 112, 111, 108, 121, 103, 111, 110, 32, 112, 111, 105, 110, 116, 115, 61, 34, 49, 56, 48, 44, 49, 52, 53, 32, 50, 50, 48, 44, 49, 52, 53, 32, 50, 51, 53, 44, 49, 54, 48, 32, 50, 51, 53, 44, 50, 48, 48, 32, 50, 50, 48, 44, 50, 49, 53, 32, 49, 56, 48, 44, 50, 49, 53, 32, 49, 54, 53, 44, 50, 48, 48, 32, 49, 54, 53, 44, 49, 54, 48, 34, 32, 102, 105, 108, 108, 61, 34, 119, 104, 105, 116, 101, 34, 32, 111, 112, 97, 99, 105, 116, 121, 61, 34, 48, 46, 57, 34, 47, 62] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:552:26+119
    assume {:print "$at(2,23926,24045)"} true;
    $t35 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(60, 112, 111, 108), MakeVec4(121, 103, 111, 110)), MakeVec4(32, 112, 111, 105)), MakeVec4(110, 116, 115, 61)), MakeVec4(34, 49, 56, 48)), MakeVec4(44, 49, 52, 53)), MakeVec4(32, 50, 50, 48)), MakeVec4(44, 49, 52, 53)), MakeVec4(32, 50, 51, 53)), MakeVec4(44, 49, 54, 48)), MakeVec4(32, 50, 51, 53)), MakeVec4(44, 50, 48, 48)), MakeVec4(32, 50, 50, 48)), MakeVec4(44, 50, 49, 53)), MakeVec4(32, 49, 56, 48)), MakeVec4(44, 50, 49, 53)), MakeVec4(32, 49, 54, 53)), MakeVec4(44, 50, 48, 48)), MakeVec4(32, 49, 54, 53)), MakeVec4(44, 49, 54, 48)), MakeVec4(34, 32, 102, 105)), MakeVec4(108, 108, 61, 34)), MakeVec4(119, 104, 105, 116)), MakeVec4(101, 34, 32, 111)), MakeVec4(112, 97, 99, 105)), MakeVec4(116, 121, 61, 34)), MakeVec4(48, 46, 57, 34)), MakeVec2(47, 62));
    assume $IsValid'vec'u8''($t35);

    // $t36 := string::utf8($t35) on_abort goto L28 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:552:13+133
    call $t36 := $1_string_utf8($t35);
    if ($abort_flag) {
        assume {:print "$at(2,23913,24046)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,10):", $t4} $t4 == $t4;
        goto L28;
    }

    // $t2 := $t36 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:552:13+133
    $t2 := $t36;

    // trace_local[return]($t36) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:552:13+133
    assume {:print "$track_local(104,10,2):", $t36} $t36 == $t36;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:552:13+133
    goto L4;

    // label L15 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:553:20+11
    assume {:print "$at(2,24066,24077)"} true;
L15:

    // $t37 := [67, 114, 111, 115, 115] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:553:35+8
    assume {:print "$at(2,24081,24089)"} true;
    $t37 := ConcatVec(MakeVec4(67, 114, 111, 115), MakeVec1(115));
    assume $IsValid'vec'u8''($t37);

    // $t38 := ==($t3, $t37) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:553:20+23
    $t38 := $IsEqual'vec'u8''($t3, $t37);

    // if ($t38) goto L18 else goto L17 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:553:16+1266
    if ($t38) { goto L18; } else { goto L17; }

    // label L18 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:554:26+151
    assume {:print "$at(2,24118,24269)"} true;
L18:

    // $t39 := [60, 112, 111, 108, 121, 103, 111, 110, 32, 112, 111, 105, 110, 116, 115, 61, 34, 49, 56, 53, 44, 49, 52, 48, 32, 50, 49, 53, 44, 49, 52, 48, 32, 50, 49, 53, 44, 49, 55, 48, 32, 50, 52, 53, 44, 49, 55, 48, 32, 50, 52, 53, 44, 50, 48, 48, 32, 50, 49, 53, 44, 50, 48, 48, 32, 50, 49, 53, 44, 50, 51, 48, 32, 49, 56, 53, 44, 50, 51, 48, 32, 49, 56, 53, 44, 50, 48, 48, 32, 49, 53, 53, 44, 50, 48, 48, 32, 49, 53, 53, 44, 49, 55, 48, 32, 49, 56, 53, 44, 49, 55, 48, 34, 32, 102, 105, 108, 108, 61, 34, 119, 104, 105, 116, 101, 34, 32, 111, 112, 97, 99, 105, 116, 121, 61, 34, 48, 46, 57, 34, 47, 62] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:554:26+151
    assume {:print "$at(2,24118,24269)"} true;
    $t39 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(60, 112, 111, 108), MakeVec4(121, 103, 111, 110)), MakeVec4(32, 112, 111, 105)), MakeVec4(110, 116, 115, 61)), MakeVec4(34, 49, 56, 53)), MakeVec4(44, 49, 52, 48)), MakeVec4(32, 50, 49, 53)), MakeVec4(44, 49, 52, 48)), MakeVec4(32, 50, 49, 53)), MakeVec4(44, 49, 55, 48)), MakeVec4(32, 50, 52, 53)), MakeVec4(44, 49, 55, 48)), MakeVec4(32, 50, 52, 53)), MakeVec4(44, 50, 48, 48)), MakeVec4(32, 50, 49, 53)), MakeVec4(44, 50, 48, 48)), MakeVec4(32, 50, 49, 53)), MakeVec4(44, 50, 51, 48)), MakeVec4(32, 49, 56, 53)), MakeVec4(44, 50, 51, 48)), MakeVec4(32, 49, 56, 53)), MakeVec4(44, 50, 48, 48)), MakeVec4(32, 49, 53, 53)), MakeVec4(44, 50, 48, 48)), MakeVec4(32, 49, 53, 53)), MakeVec4(44, 49, 55, 48)), MakeVec4(32, 49, 56, 53)), MakeVec4(44, 49, 55, 48)), MakeVec4(34, 32, 102, 105)), MakeVec4(108, 108, 61, 34)), MakeVec4(119, 104, 105, 116)), MakeVec4(101, 34, 32, 111)), MakeVec4(112, 97, 99, 105)), MakeVec4(116, 121, 61, 34)), MakeVec4(48, 46, 57, 34)), MakeVec2(47, 62));
    assume $IsValid'vec'u8''($t39);

    // $t40 := string::utf8($t39) on_abort goto L28 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:554:13+165
    call $t40 := $1_string_utf8($t39);
    if ($abort_flag) {
        assume {:print "$at(2,24105,24270)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,10):", $t4} $t4 == $t4;
        goto L28;
    }

    // $t2 := $t40 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:554:13+165
    $t2 := $t40;

    // trace_local[return]($t40) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:554:13+165
    assume {:print "$track_local(104,10,2):", $t40} $t40 == $t40;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:554:13+165
    goto L4;

    // label L17 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:555:20+11
    assume {:print "$at(2,24290,24301)"} true;
L17:

    // $t41 := [72, 101, 97, 114, 116] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:555:35+8
    assume {:print "$at(2,24305,24313)"} true;
    $t41 := ConcatVec(MakeVec4(72, 101, 97, 114), MakeVec1(116));
    assume $IsValid'vec'u8''($t41);

    // $t42 := ==($t3, $t41) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:555:20+23
    $t42 := $IsEqual'vec'u8''($t3, $t41);

    // if ($t42) goto L20 else goto L19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:555:16+1042
    if ($t42) { goto L20; } else { goto L19; }

    // label L20 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:556:26+156
    assume {:print "$at(2,24342,24498)"} true;
L20:

    // $t43 := [60, 112, 97, 116, 104, 32, 100, 61, 34, 77, 50, 48, 48, 44, 49, 54, 48, 32, 67, 49, 57, 48, 44, 49, 53, 48, 32, 49, 55, 53, 44, 49, 53, 48, 32, 49, 55, 48, 44, 49, 54, 53, 32, 67, 49, 54, 53, 44, 49, 56, 48, 32, 49, 56, 53, 44, 50, 48, 48, 32, 50, 48, 48, 44, 50, 50, 48, 32, 67, 50, 49, 53, 44, 50, 48, 48, 32, 50, 51, 53, 44, 49, 56, 48, 32, 50, 51, 48, 44, 49, 54, 53, 32, 67, 50, 50, 53, 44, 49, 53, 48, 32, 50, 49, 48, 44, 49, 53, 48, 32, 50, 48, 48, 44, 49, 54, 48, 34, 32, 102, 105, 108, 108, 61, 34, 119, 104, 105, 116, 101, 34, 32, 111, 112, 97, 99, 105, 116, 121, 61, 34, 48, 46, 57, 34, 47, 62] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:556:26+156
    assume {:print "$at(2,24342,24498)"} true;
    $t43 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(60, 112, 97, 116), MakeVec4(104, 32, 100, 61)), MakeVec4(34, 77, 50, 48)), MakeVec4(48, 44, 49, 54)), MakeVec4(48, 32, 67, 49)), MakeVec4(57, 48, 44, 49)), MakeVec4(53, 48, 32, 49)), MakeVec4(55, 53, 44, 49)), MakeVec4(53, 48, 32, 49)), MakeVec4(55, 48, 44, 49)), MakeVec4(54, 53, 32, 67)), MakeVec4(49, 54, 53, 44)), MakeVec4(49, 56, 48, 32)), MakeVec4(49, 56, 53, 44)), MakeVec4(50, 48, 48, 32)), MakeVec4(50, 48, 48, 44)), MakeVec4(50, 50, 48, 32)), MakeVec4(67, 50, 49, 53)), MakeVec4(44, 50, 48, 48)), MakeVec4(32, 50, 51, 53)), MakeVec4(44, 49, 56, 48)), MakeVec4(32, 50, 51, 48)), MakeVec4(44, 49, 54, 53)), MakeVec4(32, 67, 50, 50)), MakeVec4(53, 44, 49, 53)), MakeVec4(48, 32, 50, 49)), MakeVec4(48, 44, 49, 53)), MakeVec4(48, 32, 50, 48)), MakeVec4(48, 44, 49, 54)), MakeVec4(48, 34, 32, 102)), MakeVec4(105, 108, 108, 61)), MakeVec4(34, 119, 104, 105)), MakeVec4(116, 101, 34, 32)), MakeVec4(111, 112, 97, 99)), MakeVec4(105, 116, 121, 61)), MakeVec4(34, 48, 46, 57)), MakeVec3(34, 47, 62));
    assume $IsValid'vec'u8''($t43);

    // $t44 := string::utf8($t43) on_abort goto L28 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:556:13+170
    call $t44 := $1_string_utf8($t43);
    if ($abort_flag) {
        assume {:print "$at(2,24329,24499)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,10):", $t4} $t4 == $t4;
        goto L28;
    }

    // $t2 := $t44 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:556:13+170
    $t2 := $t44;

    // trace_local[return]($t44) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:556:13+170
    assume {:print "$track_local(104,10,2):", $t44} $t44 == $t44;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:556:13+170
    goto L4;

    // label L19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:557:20+11
    assume {:print "$at(2,24519,24530)"} true;
L19:

    // $t45 := [65, 114, 114, 111, 119] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:557:35+8
    assume {:print "$at(2,24534,24542)"} true;
    $t45 := ConcatVec(MakeVec4(65, 114, 114, 111), MakeVec1(119));
    assume $IsValid'vec'u8''($t45);

    // $t46 := ==($t3, $t45) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:557:20+23
    $t46 := $IsEqual'vec'u8''($t3, $t45);

    // if ($t46) goto L22 else goto L21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:557:16+813
    if ($t46) { goto L22; } else { goto L21; }

    // label L22 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:558:26+111
    assume {:print "$at(2,24571,24682)"} true;
L22:

    // $t47 := [60, 112, 111, 108, 121, 103, 111, 110, 32, 112, 111, 105, 110, 116, 115, 61, 34, 50, 48, 48, 44, 49, 52, 48, 32, 50, 51, 48, 44, 49, 55, 48, 32, 50, 49, 53, 44, 49, 55, 48, 32, 50, 49, 53, 44, 50, 51, 48, 32, 49, 56, 53, 44, 50, 51, 48, 32, 49, 56, 53, 44, 49, 55, 48, 32, 49, 55, 48, 44, 49, 55, 48, 34, 32, 102, 105, 108, 108, 61, 34, 119, 104, 105, 116, 101, 34, 32, 111, 112, 97, 99, 105, 116, 121, 61, 34, 48, 46, 57, 34, 47, 62] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:558:26+111
    assume {:print "$at(2,24571,24682)"} true;
    $t47 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(60, 112, 111, 108), MakeVec4(121, 103, 111, 110)), MakeVec4(32, 112, 111, 105)), MakeVec4(110, 116, 115, 61)), MakeVec4(34, 50, 48, 48)), MakeVec4(44, 49, 52, 48)), MakeVec4(32, 50, 51, 48)), MakeVec4(44, 49, 55, 48)), MakeVec4(32, 50, 49, 53)), MakeVec4(44, 49, 55, 48)), MakeVec4(32, 50, 49, 53)), MakeVec4(44, 50, 51, 48)), MakeVec4(32, 49, 56, 53)), MakeVec4(44, 50, 51, 48)), MakeVec4(32, 49, 56, 53)), MakeVec4(44, 49, 55, 48)), MakeVec4(32, 49, 55, 48)), MakeVec4(44, 49, 55, 48)), MakeVec4(34, 32, 102, 105)), MakeVec4(108, 108, 61, 34)), MakeVec4(119, 104, 105, 116)), MakeVec4(101, 34, 32, 111)), MakeVec4(112, 97, 99, 105)), MakeVec4(116, 121, 61, 34)), MakeVec4(48, 46, 57, 34)), MakeVec2(47, 62));
    assume $IsValid'vec'u8''($t47);

    // $t48 := string::utf8($t47) on_abort goto L28 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:558:13+125
    call $t48 := $1_string_utf8($t47);
    if ($abort_flag) {
        assume {:print "$at(2,24558,24683)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,10):", $t4} $t4 == $t4;
        goto L28;
    }

    // $t2 := $t48 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:558:13+125
    $t2 := $t48;

    // trace_local[return]($t48) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:558:13+125
    assume {:print "$track_local(104,10,2):", $t48} $t48 == $t48;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:558:13+125
    goto L4;

    // label L21 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:559:20+11
    assume {:print "$at(2,24703,24714)"} true;
L21:

    // $t49 := [83, 112, 105, 114, 97, 108] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:559:35+9
    assume {:print "$at(2,24718,24727)"} true;
    $t49 := ConcatVec(MakeVec4(83, 112, 105, 114), MakeVec2(97, 108));
    assume $IsValid'vec'u8''($t49);

    // $t50 := ==($t3, $t49) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:559:20+24
    $t50 := $IsEqual'vec'u8''($t3, $t49);

    // if ($t50) goto L24 else goto L23 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:559:16+629
    if ($t50) { goto L24; } else { goto L23; }

    // label L24 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:560:26+176
    assume {:print "$at(2,24756,24932)"} true;
L24:

    // $t51 := [60, 112, 97, 116, 104, 32, 100, 61, 34, 77, 50, 48, 48, 44, 49, 52, 48, 32, 81, 50, 51, 48, 44, 49, 52, 48, 32, 50, 51, 48, 44, 49, 55, 48, 32, 81, 50, 51, 48, 44, 50, 48, 48, 32, 50, 48, 48, 44, 50, 48, 48, 32, 81, 49, 55, 48, 44, 50, 48, 48, 32, 49, 55, 48, 44, 49, 55, 48, 32, 81, 49, 55, 48, 44, 49, 53, 53, 32, 49, 56, 53, 44, 49, 53, 53, 32, 81, 50, 48, 48, 44, 49, 53, 53, 32, 50, 48, 48, 44, 49, 55, 48, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 119, 104, 105, 116, 101, 34, 32, 115, 116, 114, 111, 107, 101, 45, 119, 105, 100, 116, 104, 61, 34, 54, 34, 32, 102, 105, 108, 108, 61, 34, 110, 111, 110, 101, 34, 32, 111, 112, 97, 99, 105, 116, 121, 61, 34, 48, 46, 57, 34, 47, 62] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:560:26+176
    assume {:print "$at(2,24756,24932)"} true;
    $t51 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(60, 112, 97, 116), MakeVec4(104, 32, 100, 61)), MakeVec4(34, 77, 50, 48)), MakeVec4(48, 44, 49, 52)), MakeVec4(48, 32, 81, 50)), MakeVec4(51, 48, 44, 49)), MakeVec4(52, 48, 32, 50)), MakeVec4(51, 48, 44, 49)), MakeVec4(55, 48, 32, 81)), MakeVec4(50, 51, 48, 44)), MakeVec4(50, 48, 48, 32)), MakeVec4(50, 48, 48, 44)), MakeVec4(50, 48, 48, 32)), MakeVec4(81, 49, 55, 48)), MakeVec4(44, 50, 48, 48)), MakeVec4(32, 49, 55, 48)), MakeVec4(44, 49, 55, 48)), MakeVec4(32, 81, 49, 55)), MakeVec4(48, 44, 49, 53)), MakeVec4(53, 32, 49, 56)), MakeVec4(53, 44, 49, 53)), MakeVec4(53, 32, 81, 50)), MakeVec4(48, 48, 44, 49)), MakeVec4(53, 53, 32, 50)), MakeVec4(48, 48, 44, 49)), MakeVec4(55, 48, 34, 32)), MakeVec4(115, 116, 114, 111)), MakeVec4(107, 101, 61, 34)), MakeVec4(119, 104, 105, 116)), MakeVec4(101, 34, 32, 115)), MakeVec4(116, 114, 111, 107)), MakeVec4(101, 45, 119, 105)), MakeVec4(100, 116, 104, 61)), MakeVec4(34, 54, 34, 32)), MakeVec4(102, 105, 108, 108)), MakeVec4(61, 34, 110, 111)), MakeVec4(110, 101, 34, 32)), MakeVec4(111, 112, 97, 99)), MakeVec4(105, 116, 121, 61)), MakeVec4(34, 48, 46, 57)), MakeVec3(34, 47, 62));
    assume $IsValid'vec'u8''($t51);

    // $t52 := string::utf8($t51) on_abort goto L28 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:560:13+190
    call $t52 := $1_string_utf8($t51);
    if ($abort_flag) {
        assume {:print "$at(2,24743,24933)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,10):", $t4} $t4 == $t4;
        goto L28;
    }

    // $t2 := $t52 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:560:13+190
    $t2 := $t52;

    // trace_local[return]($t52) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:560:13+190
    assume {:print "$track_local(104,10,2):", $t52} $t52 == $t52;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:560:13+190
    goto L4;

    // label L23 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:561:20+11
    assume {:print "$at(2,24953,24964)"} true;
L23:

    // $t53 := [73, 110, 102, 105, 110, 105, 116, 121] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:561:35+11
    assume {:print "$at(2,24968,24979)"} true;
    $t53 := ConcatVec(MakeVec4(73, 110, 102, 105), MakeVec4(110, 105, 116, 121));
    assume $IsValid'vec'u8''($t53);

    // $t54 := ==($t3, $t53) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:561:20+26
    $t54 := $IsEqual'vec'u8''($t3, $t53);

    // if ($t54) goto L26 else goto L25 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:561:16+379
    if ($t54) { goto L26; } else { goto L25; }

    // label L26 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:562:26+159
    assume {:print "$at(2,25008,25167)"} true;
L26:

    // $t55 := [60, 112, 97, 116, 104, 32, 100, 61, 34, 77, 49, 55, 48, 44, 49, 57, 48, 32, 81, 49, 56, 53, 44, 49, 55, 53, 32, 50, 48, 48, 44, 49, 57, 48, 32, 81, 50, 49, 53, 44, 50, 48, 53, 32, 50, 51, 48, 44, 49, 57, 48, 32, 81, 50, 49, 53, 44, 49, 55, 53, 32, 50, 48, 48, 44, 49, 57, 48, 32, 81, 49, 56, 53, 44, 50, 48, 53, 32, 49, 55, 48, 44, 49, 57, 48, 34, 32, 115, 116, 114, 111, 107, 101, 61, 34, 119, 104, 105, 116, 101, 34, 32, 115, 116, 114, 111, 107, 101, 45, 119, 105, 100, 116, 104, 61, 34, 54, 34, 32, 102, 105, 108, 108, 61, 34, 110, 111, 110, 101, 34, 32, 111, 112, 97, 99, 105, 116, 121, 61, 34, 48, 46, 57, 34, 47, 62] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:562:26+159
    assume {:print "$at(2,25008,25167)"} true;
    $t55 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(60, 112, 97, 116), MakeVec4(104, 32, 100, 61)), MakeVec4(34, 77, 49, 55)), MakeVec4(48, 44, 49, 57)), MakeVec4(48, 32, 81, 49)), MakeVec4(56, 53, 44, 49)), MakeVec4(55, 53, 32, 50)), MakeVec4(48, 48, 44, 49)), MakeVec4(57, 48, 32, 81)), MakeVec4(50, 49, 53, 44)), MakeVec4(50, 48, 53, 32)), MakeVec4(50, 51, 48, 44)), MakeVec4(49, 57, 48, 32)), MakeVec4(81, 50, 49, 53)), MakeVec4(44, 49, 55, 53)), MakeVec4(32, 50, 48, 48)), MakeVec4(44, 49, 57, 48)), MakeVec4(32, 81, 49, 56)), MakeVec4(53, 44, 50, 48)), MakeVec4(53, 32, 49, 55)), MakeVec4(48, 44, 49, 57)), MakeVec4(48, 34, 32, 115)), MakeVec4(116, 114, 111, 107)), MakeVec4(101, 61, 34, 119)), MakeVec4(104, 105, 116, 101)), MakeVec4(34, 32, 115, 116)), MakeVec4(114, 111, 107, 101)), MakeVec4(45, 119, 105, 100)), MakeVec4(116, 104, 61, 34)), MakeVec4(54, 34, 32, 102)), MakeVec4(105, 108, 108, 61)), MakeVec4(34, 110, 111, 110)), MakeVec4(101, 34, 32, 111)), MakeVec4(112, 97, 99, 105)), MakeVec4(116, 121, 61, 34)), MakeVec4(48, 46, 57, 34)), MakeVec2(47, 62));
    assume $IsValid'vec'u8''($t55);

    // $t56 := string::utf8($t55) on_abort goto L28 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:562:13+173
    call $t56 := $1_string_utf8($t55);
    if ($abort_flag) {
        assume {:print "$at(2,24995,25168)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,10):", $t4} $t4 == $t4;
        goto L28;
    }

    // $t2 := $t56 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:562:13+173
    $t2 := $t56;

    // trace_local[return]($t56) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:562:13+173
    assume {:print "$track_local(104,10,2):", $t56} $t56 == $t56;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:562:13+173
    goto L4;

    // label L25 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:565:26+74
    assume {:print "$at(2,25243,25317)"} true;
L25:

    // $t57 := [60, 99, 105, 114, 99, 108, 101, 32, 99, 120, 61, 34, 50, 48, 48, 34, 32, 99, 121, 61, 34, 50, 48, 48, 34, 32, 114, 61, 34, 54, 48, 34, 32, 102, 105, 108, 108, 61, 34, 119, 104, 105, 116, 101, 34, 32, 111, 112, 97, 99, 105, 116, 121, 61, 34, 48, 46, 57, 34, 47, 62] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:565:26+74
    assume {:print "$at(2,25243,25317)"} true;
    $t57 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(60, 99, 105, 114), MakeVec4(99, 108, 101, 32)), MakeVec4(99, 120, 61, 34)), MakeVec4(50, 48, 48, 34)), MakeVec4(32, 99, 121, 61)), MakeVec4(34, 50, 48, 48)), MakeVec4(34, 32, 114, 61)), MakeVec4(34, 54, 48, 34)), MakeVec4(32, 102, 105, 108)), MakeVec4(108, 61, 34, 119)), MakeVec4(104, 105, 116, 101)), MakeVec4(34, 32, 111, 112)), MakeVec4(97, 99, 105, 116)), MakeVec4(121, 61, 34, 48)), MakeVec4(46, 57, 34, 47)), MakeVec1(62));
    assume $IsValid'vec'u8''($t57);

    // $t58 := string::utf8($t57) on_abort goto L28 with $t4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:565:13+88
    call $t58 := $1_string_utf8($t57);
    if ($abort_flag) {
        assume {:print "$at(2,25230,25318)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(104,10):", $t4} $t4 == $t4;
        goto L28;
    }

    // $t2 := $t58 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:565:13+88
    $t2 := $t58;

    // trace_local[return]($t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:565:13+88
    assume {:print "$track_local(104,10,2):", $t58} $t58 == $t58;

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:565:13+88
    goto L4;

    // label L27 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:567:5+1
    assume {:print "$at(2,25333,25334)"} true;
L27:

    // return $t2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:567:5+1
    assume {:print "$at(2,25333,25334)"} true;
    $ret0 := $t2;
    return;

    // label L28 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:567:5+1
L28:

    // abort($t4) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:567:5+1
    assume {:print "$at(2,25333,25334)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::get_shared_collection_address [baseline] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:117:5+291
procedure {:inline 1} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shared_collection_address() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: Vec (int);
    var $t3: int;
    var $temp_0'address': int;

    // bytecode translation starts here
    // $t1 := 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:43+10
    assume {:print "$at(2,4966,4976)"} true;
    $t1 := 4348679603955904436682035659858755850927215066954103460520133449234235906859;
    assume $IsValid'address'($t1);

    // trace_local[$t2]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:43+10
    assume {:print "$track_local(104,11,0):", $t1} $t1 == $t1;

    // $t2 := [115, 104, 97, 114, 101, 100, 95, 99, 111, 108, 108, 101, 99, 116, 105, 111, 110, 95, 118, 49] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:55+22
    $t2 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(115, 104, 97, 114), MakeVec4(101, 100, 95, 99)), MakeVec4(111, 108, 108, 101)), MakeVec4(99, 116, 105, 111)), MakeVec4(110, 95, 118, 49));
    assume $IsValid'vec'u8''($t2);

    // $t3 := opaque begin: account::create_resource_address($t1, $t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:9+69

    // assume WellFormed($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:9+69
    assume $IsValid'address'($t3);

    // assume Eq<address>($t3, account::spec_create_resource_address($t1, $t2)) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:9+69
    assume $IsEqual'address'($t3, $1_account_spec_create_resource_address($t1, $t2));

    // assume Neq<address>($t1, $t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:9+69
    assume !$IsEqual'address'($t1, $t3);

    // $t3 := opaque end: account::create_resource_address($t1, $t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:9+69

    // trace_return[0]($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:9+69
    assume {:print "$track_return(104,11,0):", $t3} $t3 == $t3;

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:121:5+1
    assume {:print "$at(2,5006,5007)"} true;
L1:

    // return $t3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:121:5+1
    assume {:print "$at(2,5006,5007)"} true;
    $ret0 := $t3;
    return;

}

// fun retro_nft_generator_da::get_shared_collection_address [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:117:5+291
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shared_collection_address$verify() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: Vec (int);
    var $t3: int;
    var $temp_0'address': int;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // $t1 := 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:43+10
    assume {:print "$at(2,4966,4976)"} true;
    $t1 := 4348679603955904436682035659858755850927215066954103460520133449234235906859;
    assume $IsValid'address'($t1);

    // trace_local[$t2]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:43+10
    assume {:print "$track_local(104,11,0):", $t1} $t1 == $t1;

    // $t2 := [115, 104, 97, 114, 101, 100, 95, 99, 111, 108, 108, 101, 99, 116, 105, 111, 110, 95, 118, 49] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:55+22
    $t2 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(115, 104, 97, 114), MakeVec4(101, 100, 95, 99)), MakeVec4(111, 108, 108, 101)), MakeVec4(99, 116, 105, 111)), MakeVec4(110, 95, 118, 49));
    assume $IsValid'vec'u8''($t2);

    // $t3 := opaque begin: account::create_resource_address($t1, $t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:9+69

    // assume WellFormed($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:9+69
    assume $IsValid'address'($t3);

    // assume Eq<address>($t3, account::spec_create_resource_address($t1, $t2)) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:9+69
    assume $IsEqual'address'($t3, $1_account_spec_create_resource_address($t1, $t2));

    // assume Neq<address>($t1, $t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:9+69
    assume !$IsEqual'address'($t1, $t3);

    // $t3 := opaque end: account::create_resource_address($t1, $t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:9+69

    // trace_return[0]($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:120:9+69
    assume {:print "$track_return(104,11,0):", $t3} $t3 == $t3;

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:121:5+1
    assume {:print "$at(2,5006,5007)"} true;
L1:

    // return $t3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:121:5+1
    assume {:print "$at(2,5006,5007)"} true;
    $ret0 := $t3;
    return;

}

// fun retro_nft_generator_da::get_total_minted [baseline] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:665:5+317
procedure {:inline 1} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_total_minted() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: int;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection;
    var $t7: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t1 := retro_nft_generator_da::get_shared_collection_address() on_abort goto L3 with $t2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:666:27+31
    assume {:print "$at(2,28982,29013)"} true;
    call $t1 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shared_collection_address();
    if ($abort_flag) {
        assume {:print "$at(2,28982,29013)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(104,12):", $t2} $t2 == $t2;
        goto L3;
    }

    // trace_local[shared_addr]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:666:27+31
    assume {:print "$track_local(104,12,0):", $t1} $t1 == $t1;

    // $t3 := exists<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:667:14+34
    assume {:print "$at(2,29028,29062)"} true;
    $t3 := $ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t1);

    // if ($t3) goto L0 else goto L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:667:13+35
    if ($t3) { goto L0; } else { goto L1; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:668:20+1
    assume {:print "$at(2,29085,29086)"} true;
L1:

    // $t4 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:668:20+1
    assume {:print "$at(2,29085,29086)"} true;
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // trace_return[0]($t4) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:668:13+8
    assume {:print "$track_return(104,12,0):", $t4} $t4 == $t4;

    // $t5 := move($t4) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:668:13+8
    $t5 := $t4;

    // goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:668:13+8
    goto L2;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:670:31+41
    assume {:print "$at(2,29128,29169)"} true;
L0:

    // $t6 := get_global<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>($t1) on_abort goto L3 with $t2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:670:31+41
    assume {:print "$at(2,29128,29169)"} true;
    if (!$ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(2,29128,29169)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(104,12):", $t2} $t2 == $t2;
        goto L3;
    }

    // $t7 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.total_minted($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:671:9+28
    assume {:print "$at(2,29179,29207)"} true;
    $t7 := $t6->$total_minted;

    // trace_return[0]($t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:665:63+259
    assume {:print "$at(2,28954,29213)"} true;
    assume {:print "$track_return(104,12,0):", $t7} $t7 == $t7;

    // $t5 := move($t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:665:63+259
    $t5 := $t7;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:672:5+1
    assume {:print "$at(2,29212,29213)"} true;
L2:

    // return $t5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:672:5+1
    assume {:print "$at(2,29212,29213)"} true;
    $ret0 := $t5;
    return;

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:672:5+1
L3:

    // abort($t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:672:5+1
    assume {:print "$at(2,29212,29213)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::get_total_minted [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:665:5+317
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_total_minted$verify() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: int;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection;
    var $t7: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume forall $rsc: 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection: ResourceDomain<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:665:5+1
    assume {:print "$at(2,28896,28897)"} true;
    assume (forall $a_0: int :: {$ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0)}(var $rsc := $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0);
    ($IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'($rsc))));

    // $t1 := retro_nft_generator_da::get_shared_collection_address() on_abort goto L3 with $t2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:666:27+31
    assume {:print "$at(2,28982,29013)"} true;
    call $t1 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shared_collection_address();
    if ($abort_flag) {
        assume {:print "$at(2,28982,29013)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(104,12):", $t2} $t2 == $t2;
        goto L3;
    }

    // trace_local[shared_addr]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:666:27+31
    assume {:print "$track_local(104,12,0):", $t1} $t1 == $t1;

    // $t3 := exists<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:667:14+34
    assume {:print "$at(2,29028,29062)"} true;
    $t3 := $ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t1);

    // if ($t3) goto L0 else goto L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:667:13+35
    if ($t3) { goto L0; } else { goto L1; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:668:20+1
    assume {:print "$at(2,29085,29086)"} true;
L1:

    // $t4 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:668:20+1
    assume {:print "$at(2,29085,29086)"} true;
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // trace_return[0]($t4) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:668:13+8
    assume {:print "$track_return(104,12,0):", $t4} $t4 == $t4;

    // $t5 := move($t4) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:668:13+8
    $t5 := $t4;

    // goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:668:13+8
    goto L2;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:670:31+41
    assume {:print "$at(2,29128,29169)"} true;
L0:

    // $t6 := get_global<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>($t1) on_abort goto L3 with $t2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:670:31+41
    assume {:print "$at(2,29128,29169)"} true;
    if (!$ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(2,29128,29169)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(104,12):", $t2} $t2 == $t2;
        goto L3;
    }

    // $t7 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.total_minted($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:671:9+28
    assume {:print "$at(2,29179,29207)"} true;
    $t7 := $t6->$total_minted;

    // trace_return[0]($t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:665:63+259
    assume {:print "$at(2,28954,29213)"} true;
    assume {:print "$track_return(104,12,0):", $t7} $t7 == $t7;

    // $t5 := move($t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:665:63+259
    $t5 := $t7;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:672:5+1
    assume {:print "$at(2,29212,29213)"} true;
L2:

    // return $t5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:672:5+1
    assume {:print "$at(2,29212,29213)"} true;
    $ret0 := $t5;
    return;

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:672:5+1
L3:

    // abort($t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:672:5+1
    assume {:print "$at(2,29212,29213)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::get_total_minted_legacy [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:676:5+168
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_total_minted_legacy$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:676:5+1
    assume {:print "$at(2,29283,29284)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection: ResourceDomain<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:676:5+1
    assume (forall $a_0: int :: {$ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0)}(var $rsc := $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0);
    ($IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'($rsc))));

    // trace_local[_collection_creator]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:676:5+1
    assume {:print "$track_local(104,13,0):", $t0} $t0 == $t0;

    // $t1 := retro_nft_generator_da::get_total_minted() on_abort goto L2 with $t2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:678:9+18
    assume {:print "$at(2,29427,29445)"} true;
    call $t1 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_total_minted();
    if ($abort_flag) {
        assume {:print "$at(2,29427,29445)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(104,13):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:678:9+18
    assume {:print "$track_return(104,13,0):", $t1} $t1 == $t1;

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:679:5+1
    assume {:print "$at(2,29450,29451)"} true;
L1:

    // return $t1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:679:5+1
    assume {:print "$at(2,29450,29451)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:679:5+1
L2:

    // abort($t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:679:5+1
    assume {:print "$at(2,29450,29451)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::initialize_collection [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:161:5+199
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_initialize_collection$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t0: $signer;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:161:5+1
    assume {:print "$at(2,6489,6490)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: 0x1::features::Features: ResourceDomain<0x1::features::Features>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:161:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: 0x1::permissioned_signer::PermissionStorage: ResourceDomain<0x1::permissioned_signer::PermissionStorage>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:161:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0)}(var $rsc := $ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0);
    ($IsValid'$1_permissioned_signer_PermissionStorage'($rsc))));

    // assume forall $rsc: 0x1::account::Account: ResourceDomain<0x1::account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:161:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($rsc->$rotation_capability_offer->$for->$vec) <= 1) && (LenVec($rsc->$signer_capability_offer->$for->$vec) <= 1))))));

    // assume forall $rsc: 0x1::object::ObjectCore: ResourceDomain<0x1::object::ObjectCore>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:161:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: 0x1::object::Untransferable: ResourceDomain<0x1::object::Untransferable>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:161:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: 0x4::royalty::Royalty: ResourceDomain<0x4::royalty::Royalty>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:161:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: 0x4::collection::ConcurrentSupply: ResourceDomain<0x4::collection::ConcurrentSupply>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:161:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$4_collection_ConcurrentSupply'($rsc))));

    // assume forall $rsc: 0x4::collection::Collection: ResourceDomain<0x4::collection::Collection>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:161:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_Collection_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_Collection_$memory, $a_0);
    ($IsValid'$4_collection_Collection'($rsc))));

    // assume forall $rsc: 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection: ResourceDomain<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:161:5+1
    assume (forall $a_0: int :: {$ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0)}(var $rsc := $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0);
    ($IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'($rsc))));

    // trace_local[user]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:161:5+1
    assume {:print "$track_local(104,14,0):", $t0} $t0 == $t0;

    // retro_nft_generator_da::initialize_shared_collection($t0) on_abort goto L2 with $t1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:163:9+34
    assume {:print "$at(2,6647,6681)"} true;
    call $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_initialize_shared_collection($t0);
    if ($abort_flag) {
        assume {:print "$at(2,6647,6681)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(104,14):", $t1} $t1 == $t1;
        goto L2;
    }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:164:5+1
    assume {:print "$at(2,6687,6688)"} true;
L1:

    // return () at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:164:5+1
    assume {:print "$at(2,6687,6688)"} true;
    return;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:164:5+1
L2:

    // abort($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:164:5+1
    assume {:print "$at(2,6687,6688)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::initialize_shared_collection [baseline] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:124:5+1298
procedure {:inline 1} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_initialize_shared_collection(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: Vec (int);
    var $t3: $1_account_SignerCapability;
    var $t4: $signer;
    var $t5: $1_string_String;
    var $t6: $1_option_Option'$4_royalty_Royalty';
    var $t7: $1_string_String;
    var $t8: $1_string_String;
    var $t9: $1_object_ConstructorRef;
    var $t10: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection;
    var $t11: int;
    var $t12: int;
    var $t13: bool;
    var $t14: Vec (int);
    var $t15: int;
    var $t16: int;
    var $t17: $1_account_Account;
    var $t18: Vec (int);
    var $t19: $signer;
    var $t20: $1_account_SignerCapability;
    var $t21: Vec (int);
    var $t22: $1_string_String;
    var $t23: Vec (int);
    var $t24: $1_string_String;
    var $t25: $1_option_Option'$4_royalty_Royalty';
    var $t26: Vec (int);
    var $t27: $1_string_String;
    var $t28: $1_object_ConstructorRef;
    var $t29: $1_object_Object'$4_collection_Collection';
    var $t30: int;
    var $t31: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection;
    var $t0: $signer;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_option_Option'$4_royalty_Royalty'': $1_option_Option'$4_royalty_Royalty';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[admin]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:124:5+1
    assume {:print "$at(2,5097,5098)"} true;
    assume {:print "$track_local(104,15,0):", $t0} $t0 == $t0;

    // $t11 := retro_nft_generator_da::get_shared_collection_address() on_abort goto L3 with $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:125:27+31
    assume {:print "$at(2,5187,5218)"} true;
    call $t11 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shared_collection_address();
    if ($abort_flag) {
        assume {:print "$at(2,5187,5218)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(104,15):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[shared_addr]($t11) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:125:27+31
    assume {:print "$track_local(104,15,1):", $t11} $t11 == $t11;

    // $t13 := exists<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>($t11) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:128:13+34
    assume {:print "$at(2,5309,5343)"} true;
    $t13 := $ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t11);

    // if ($t13) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:128:9+70
    if ($t13) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:129:13+6
    assume {:print "$at(2,5359,5365)"} true;
L1:

    // goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:129:13+6
    assume {:print "$at(2,5359,5365)"} true;
    goto L2;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:133:48+97
    assume {:print "$at(2,5491,5588)"} true;
L0:

    // $t14 := [115, 104, 97, 114, 101, 100, 95, 99, 111, 108, 108, 101, 99, 116, 105, 111, 110, 95, 118, 49] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:135:13+22
    assume {:print "$at(2,5556,5578)"} true;
    $t14 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(115, 104, 97, 114), MakeVec4(101, 100, 95, 99)), MakeVec4(111, 108, 108, 101)), MakeVec4(99, 116, 105, 111)), MakeVec4(110, 95, 118, 49));
    assume $IsValid'vec'u8''($t14);

    // assume Identical($t15, signer::$address_of($t0)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:601:9+45
    assume {:print "$at(97,30375,30420)"} true;
    assume ($t15 == $1_signer_$address_of($t0));

    // assume Identical($t16, account::spec_create_resource_address($t15, $t14)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:602:9+68
    assume {:print "$at(97,30429,30497)"} true;
    assume ($t16 == $1_account_spec_create_resource_address($t15, $t14));

    // assume Identical($t17, global<0x1::account::Account>($t16)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:676:9+45
    assume {:print "$at(97,33456,33501)"} true;
    assume ($t17 == $ResourceValue($1_account_Account_$memory, $t16));

    // assume Identical($t18, bcs::$to_bytes<address>($t16)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:170:9+45
    assume {:print "$at(97,9092,9137)"} true;
    assume ($t18 == $1_bcs_$to_bytes'address'($t16));

    // ($t19, $t20) := account::create_resource_account($t0, $t14) on_abort goto L3 with $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:133:48+97
    assume {:print "$at(2,5491,5588)"} true;
    call $t19,$t20 := $1_account_create_resource_account($t0, $t14);
    if ($abort_flag) {
        assume {:print "$at(2,5491,5588)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(104,15):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[_resource_cap]($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:133:48+97
    assume {:print "$track_local(104,15,3):", $t20} $t20 == $t20;

    // trace_local[resource_signer]($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:133:48+97
    assume {:print "$track_local(104,15,4):", $t19} $t19 == $t19;

    // trace_local[admin]($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:140:13+16
    assume {:print "$at(2,5779,5795)"} true;
    assume {:print "$track_local(104,15,0):", $t19} $t19 == $t19;

    // $t21 := [65, 32, 99, 111, 108, 108, 101, 99, 116, 105, 111, 110, 32, 111, 102, 32, 114, 97, 110, 100, 111, 109, 108, 121, 32, 103, 101, 110, 101, 114, 97, 116, 101, 100, 32, 114, 101, 116, 114, 111, 32, 56, 48, 115, 32, 115, 116, 121, 108, 101, 32, 78, 70, 84, 115, 32, 119, 105, 116, 104, 32, 117, 110, 105, 113, 117, 101, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 115, 44, 32, 115, 104, 97, 112, 101, 115, 44, 32, 97, 110, 100, 32, 119, 111, 114, 100, 32, 99, 111, 109, 98, 105, 110, 97, 116, 105, 111, 110, 115, 32, 117, 115, 105, 110, 103, 32, 65, 112, 116, 111, 115, 32, 68, 105, 103, 105, 116, 97, 108, 32, 65, 115, 115, 101, 116, 32, 83, 116, 97, 110, 100, 97, 114, 100] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:141:26+22
    assume {:print "$at(2,5822,5844)"} true;
    $t21 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(65, 32, 99, 111), MakeVec4(108, 108, 101, 99)), MakeVec4(116, 105, 111, 110)), MakeVec4(32, 111, 102, 32)), MakeVec4(114, 97, 110, 100)), MakeVec4(111, 109, 108, 121)), MakeVec4(32, 103, 101, 110)), MakeVec4(101, 114, 97, 116)), MakeVec4(101, 100, 32, 114)), MakeVec4(101, 116, 114, 111)), MakeVec4(32, 56, 48, 115)), MakeVec4(32, 115, 116, 121)), MakeVec4(108, 101, 32, 78)), MakeVec4(70, 84, 115, 32)), MakeVec4(119, 105, 116, 104)), MakeVec4(32, 117, 110, 105)), MakeVec4(113, 117, 101, 32)), MakeVec4(98, 97, 99, 107)), MakeVec4(103, 114, 111, 117)), MakeVec4(110, 100, 115, 44)), MakeVec4(32, 115, 104, 97)), MakeVec4(112, 101, 115, 44)), MakeVec4(32, 97, 110, 100)), MakeVec4(32, 119, 111, 114)), MakeVec4(100, 32, 99, 111)), MakeVec4(109, 98, 105, 110)), MakeVec4(97, 116, 105, 111)), MakeVec4(110, 115, 32, 117)), MakeVec4(115, 105, 110, 103)), MakeVec4(32, 65, 112, 116)), MakeVec4(111, 115, 32, 68)), MakeVec4(105, 103, 105, 116)), MakeVec4(97, 108, 32, 65)), MakeVec4(115, 115, 101, 116)), MakeVec4(32, 83, 116, 97)), MakeVec4(110, 100, 97, 114)), MakeVec1(100));
    assume $IsValid'vec'u8''($t21);

    // $t22 := string::utf8($t21) on_abort goto L3 with $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:141:13+36
    call $t22 := $1_string_utf8($t21);
    if ($abort_flag) {
        assume {:print "$at(2,5809,5845)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(104,15):", $t12} $t12 == $t12;
        goto L3;
    }

    // $t23 := [82, 101, 116, 114, 111, 32, 56, 48, 115, 32, 78, 70, 84, 32, 67, 111, 108, 108, 101, 99, 116, 105, 111, 110, 32, 50, 48, 50, 53, 45, 48, 49, 45, 48, 56, 45, 118, 50, 45, 117, 110, 105, 113, 117, 101] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:142:26+15
    assume {:print "$at(2,5872,5887)"} true;
    $t23 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(82, 101, 116, 114), MakeVec4(111, 32, 56, 48)), MakeVec4(115, 32, 78, 70)), MakeVec4(84, 32, 67, 111)), MakeVec4(108, 108, 101, 99)), MakeVec4(116, 105, 111, 110)), MakeVec4(32, 50, 48, 50)), MakeVec4(53, 45, 48, 49)), MakeVec4(45, 48, 56, 45)), MakeVec4(118, 50, 45, 117)), MakeVec4(110, 105, 113, 117)), MakeVec1(101));
    assume $IsValid'vec'u8''($t23);

    // $t24 := string::utf8($t23) on_abort goto L3 with $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:142:13+29
    call $t24 := $1_string_utf8($t23);
    if ($abort_flag) {
        assume {:print "$at(2,5859,5888)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(104,15):", $t12} $t12 == $t12;
        goto L3;
    }

    // $t25 := opaque begin: option::none<0x4::royalty::Royalty>() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:143:13+14
    assume {:print "$at(2,5902,5916)"} true;

    // assume And(WellFormed($t25), Le(Len<0x4::royalty::Royalty>(select option::Option.vec($t25)), 1)) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:143:13+14
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($t25) && (LenVec($t25->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x4::royalty::Royalty>>($t25, option::spec_none<0x4::royalty::Royalty>()) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:143:13+14
    assume $IsEqual'$1_option_Option'$4_royalty_Royalty''($t25, $1_option_spec_none'$4_royalty_Royalty'());

    // $t25 := opaque end: option::none<0x4::royalty::Royalty>() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:143:13+14

    // $t26 := [104, 116, 116, 112, 115, 58, 47, 47, 114, 101, 116, 114, 111, 119, 97, 118, 101, 46, 110, 102, 116, 47, 99, 111, 108, 108, 101, 99, 116, 105, 111, 110, 47, 50, 48, 50, 53, 45, 48, 49, 45, 48, 56, 45, 117, 110, 105, 113, 117, 101] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:144:26+14
    assume {:print "$at(2,5943,5957)"} true;
    $t26 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(104, 116, 116, 112), MakeVec4(115, 58, 47, 47)), MakeVec4(114, 101, 116, 114)), MakeVec4(111, 119, 97, 118)), MakeVec4(101, 46, 110, 102)), MakeVec4(116, 47, 99, 111)), MakeVec4(108, 108, 101, 99)), MakeVec4(116, 105, 111, 110)), MakeVec4(47, 50, 48, 50)), MakeVec4(53, 45, 48, 49)), MakeVec4(45, 48, 56, 45)), MakeVec4(117, 110, 105, 113)), MakeVec2(117, 101));
    assume $IsValid'vec'u8''($t26);

    // $t27 := string::utf8($t26) on_abort goto L3 with $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:144:13+28
    call $t27 := $1_string_utf8($t26);
    if ($abort_flag) {
        assume {:print "$at(2,5930,5958)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(104,15):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[$t14]($t27) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:139:42+242
    assume {:print "$at(2,5726,5968)"} true;
    assume {:print "$track_local(104,15,5):", $t27} $t27 == $t27;

    // trace_local[$t13]($t25) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:139:42+242
    assume {:print "$track_local(104,15,6):", $t25} $t25 == $t25;

    // trace_local[$t11]($t24) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:139:42+242
    assume {:print "$track_local(104,15,7):", $t24} $t24 == $t24;

    // trace_local[$t9]($t22) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:139:42+242
    assume {:print "$track_local(104,15,8):", $t22} $t22 == $t22;

    // $t28 := collection::create_unlimited_collection($t19, $t22, $t24, $t25, $t27) on_abort goto L3 with $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:139:42+242
    call $t28 := $4_collection_create_unlimited_collection($t19, $t22, $t24, $t25, $t27);
    if ($abort_flag) {
        assume {:print "$at(2,5726,5968)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(104,15):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[collection_constructor_ref]($t28) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:139:42+242
    assume {:print "$track_local(104,15,9):", $t28} $t28 == $t28;

    // $t29 := object::object_from_constructor_ref<0x4::collection::Collection>($t28) on_abort goto L3 with $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:147:33+110
    assume {:print "$at(2,6003,6113)"} true;
    call $t29 := $1_object_object_from_constructor_ref'$4_collection_Collection'($t28);
    if ($abort_flag) {
        assume {:print "$at(2,6003,6113)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(104,15):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[admin]($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:152:17+16
    assume {:print "$at(2,6197,6213)"} true;
    assume {:print "$track_local(104,15,0):", $t19} $t19 == $t19;

    // $t30 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:154:27+1
    assume {:print "$at(2,6300,6301)"} true;
    $t30 := 0;
    assume $IsValid'u64'($t30);

    // $t31 := pack 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection($t29, $t30, $t11, $t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:152:35+172
    assume {:print "$at(2,6215,6387)"} true;
    $t31 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection($t29, $t30, $t11, $t20);

    // trace_local[$t19]($t31) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:152:9+199
    assume {:print "$track_local(104,15,10):", $t31} $t31 == $t31;

    // move_to<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>($t31, $t19) on_abort goto L3 with $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:152:9+199
    if ($ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t19->$addr)) {
        call $ExecFailureAbort();
    } else {
        $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory := $ResourceUpdate($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t19->$addr, $t31);
    }
    if ($abort_flag) {
        assume {:print "$at(2,6189,6388)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(104,15):", $t12} $t12 == $t12;
        goto L3;
    }

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:158:5+1
    assume {:print "$at(2,6394,6395)"} true;
L2:

    // return () at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:158:5+1
    assume {:print "$at(2,6394,6395)"} true;
    return;

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:158:5+1
L3:

    // abort($t12) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:158:5+1
    assume {:print "$at(2,6394,6395)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::initialize_shared_collection [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:124:5+1298
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_initialize_shared_collection$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: Vec (int);
    var $t3: $1_account_SignerCapability;
    var $t4: $signer;
    var $t5: $1_string_String;
    var $t6: $1_option_Option'$4_royalty_Royalty';
    var $t7: $1_string_String;
    var $t8: $1_string_String;
    var $t9: $1_object_ConstructorRef;
    var $t10: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection;
    var $t11: int;
    var $t12: int;
    var $t13: bool;
    var $t14: Vec (int);
    var $t15: int;
    var $t16: int;
    var $t17: $1_account_Account;
    var $t18: Vec (int);
    var $t19: $signer;
    var $t20: $1_account_SignerCapability;
    var $t21: Vec (int);
    var $t22: $1_string_String;
    var $t23: Vec (int);
    var $t24: $1_string_String;
    var $t25: $1_option_Option'$4_royalty_Royalty';
    var $t26: Vec (int);
    var $t27: $1_string_String;
    var $t28: $1_object_ConstructorRef;
    var $t29: $1_object_Object'$4_collection_Collection';
    var $t30: int;
    var $t31: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection;
    var $t0: $signer;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_option_Option'$4_royalty_Royalty'': $1_option_Option'$4_royalty_Royalty';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:124:5+1
    assume {:print "$at(2,5097,5098)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: 0x1::features::Features: ResourceDomain<0x1::features::Features>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: 0x1::permissioned_signer::PermissionStorage: ResourceDomain<0x1::permissioned_signer::PermissionStorage>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0)}(var $rsc := $ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0);
    ($IsValid'$1_permissioned_signer_PermissionStorage'($rsc))));

    // assume forall $rsc: 0x1::account::Account: ResourceDomain<0x1::account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($rsc->$rotation_capability_offer->$for->$vec) <= 1) && (LenVec($rsc->$signer_capability_offer->$for->$vec) <= 1))))));

    // assume forall $rsc: 0x1::object::ObjectCore: ResourceDomain<0x1::object::ObjectCore>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: 0x1::object::Untransferable: ResourceDomain<0x1::object::Untransferable>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: 0x4::royalty::Royalty: ResourceDomain<0x4::royalty::Royalty>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: 0x4::collection::ConcurrentSupply: ResourceDomain<0x4::collection::ConcurrentSupply>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$4_collection_ConcurrentSupply'($rsc))));

    // assume forall $rsc: 0x4::collection::Collection: ResourceDomain<0x4::collection::Collection>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_Collection_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_Collection_$memory, $a_0);
    ($IsValid'$4_collection_Collection'($rsc))));

    // assume forall $rsc: 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection: ResourceDomain<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:124:5+1
    assume (forall $a_0: int :: {$ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0)}(var $rsc := $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0);
    ($IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'($rsc))));

    // trace_local[admin]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:124:5+1
    assume {:print "$track_local(104,15,0):", $t0} $t0 == $t0;

    // $t11 := retro_nft_generator_da::get_shared_collection_address() on_abort goto L3 with $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:125:27+31
    assume {:print "$at(2,5187,5218)"} true;
    call $t11 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shared_collection_address();
    if ($abort_flag) {
        assume {:print "$at(2,5187,5218)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(104,15):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[shared_addr]($t11) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:125:27+31
    assume {:print "$track_local(104,15,1):", $t11} $t11 == $t11;

    // $t13 := exists<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>($t11) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:128:13+34
    assume {:print "$at(2,5309,5343)"} true;
    $t13 := $ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t11);

    // if ($t13) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:128:9+70
    if ($t13) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:129:13+6
    assume {:print "$at(2,5359,5365)"} true;
L1:

    // goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:129:13+6
    assume {:print "$at(2,5359,5365)"} true;
    goto L2;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:133:48+97
    assume {:print "$at(2,5491,5588)"} true;
L0:

    // $t14 := [115, 104, 97, 114, 101, 100, 95, 99, 111, 108, 108, 101, 99, 116, 105, 111, 110, 95, 118, 49] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:135:13+22
    assume {:print "$at(2,5556,5578)"} true;
    $t14 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(115, 104, 97, 114), MakeVec4(101, 100, 95, 99)), MakeVec4(111, 108, 108, 101)), MakeVec4(99, 116, 105, 111)), MakeVec4(110, 95, 118, 49));
    assume $IsValid'vec'u8''($t14);

    // assume Identical($t15, signer::$address_of($t0)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:601:9+45
    assume {:print "$at(97,30375,30420)"} true;
    assume ($t15 == $1_signer_$address_of($t0));

    // assume Identical($t16, account::spec_create_resource_address($t15, $t14)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:602:9+68
    assume {:print "$at(97,30429,30497)"} true;
    assume ($t16 == $1_account_spec_create_resource_address($t15, $t14));

    // assume Identical($t17, global<0x1::account::Account>($t16)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:676:9+45
    assume {:print "$at(97,33456,33501)"} true;
    assume ($t17 == $ResourceValue($1_account_Account_$memory, $t16));

    // assume Identical($t18, bcs::$to_bytes<address>($t16)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:170:9+45
    assume {:print "$at(97,9092,9137)"} true;
    assume ($t18 == $1_bcs_$to_bytes'address'($t16));

    // ($t19, $t20) := account::create_resource_account($t0, $t14) on_abort goto L3 with $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:133:48+97
    assume {:print "$at(2,5491,5588)"} true;
    call $t19,$t20 := $1_account_create_resource_account($t0, $t14);
    if ($abort_flag) {
        assume {:print "$at(2,5491,5588)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(104,15):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[_resource_cap]($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:133:48+97
    assume {:print "$track_local(104,15,3):", $t20} $t20 == $t20;

    // trace_local[resource_signer]($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:133:48+97
    assume {:print "$track_local(104,15,4):", $t19} $t19 == $t19;

    // trace_local[admin]($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:140:13+16
    assume {:print "$at(2,5779,5795)"} true;
    assume {:print "$track_local(104,15,0):", $t19} $t19 == $t19;

    // $t21 := [65, 32, 99, 111, 108, 108, 101, 99, 116, 105, 111, 110, 32, 111, 102, 32, 114, 97, 110, 100, 111, 109, 108, 121, 32, 103, 101, 110, 101, 114, 97, 116, 101, 100, 32, 114, 101, 116, 114, 111, 32, 56, 48, 115, 32, 115, 116, 121, 108, 101, 32, 78, 70, 84, 115, 32, 119, 105, 116, 104, 32, 117, 110, 105, 113, 117, 101, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 115, 44, 32, 115, 104, 97, 112, 101, 115, 44, 32, 97, 110, 100, 32, 119, 111, 114, 100, 32, 99, 111, 109, 98, 105, 110, 97, 116, 105, 111, 110, 115, 32, 117, 115, 105, 110, 103, 32, 65, 112, 116, 111, 115, 32, 68, 105, 103, 105, 116, 97, 108, 32, 65, 115, 115, 101, 116, 32, 83, 116, 97, 110, 100, 97, 114, 100] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:141:26+22
    assume {:print "$at(2,5822,5844)"} true;
    $t21 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(65, 32, 99, 111), MakeVec4(108, 108, 101, 99)), MakeVec4(116, 105, 111, 110)), MakeVec4(32, 111, 102, 32)), MakeVec4(114, 97, 110, 100)), MakeVec4(111, 109, 108, 121)), MakeVec4(32, 103, 101, 110)), MakeVec4(101, 114, 97, 116)), MakeVec4(101, 100, 32, 114)), MakeVec4(101, 116, 114, 111)), MakeVec4(32, 56, 48, 115)), MakeVec4(32, 115, 116, 121)), MakeVec4(108, 101, 32, 78)), MakeVec4(70, 84, 115, 32)), MakeVec4(119, 105, 116, 104)), MakeVec4(32, 117, 110, 105)), MakeVec4(113, 117, 101, 32)), MakeVec4(98, 97, 99, 107)), MakeVec4(103, 114, 111, 117)), MakeVec4(110, 100, 115, 44)), MakeVec4(32, 115, 104, 97)), MakeVec4(112, 101, 115, 44)), MakeVec4(32, 97, 110, 100)), MakeVec4(32, 119, 111, 114)), MakeVec4(100, 32, 99, 111)), MakeVec4(109, 98, 105, 110)), MakeVec4(97, 116, 105, 111)), MakeVec4(110, 115, 32, 117)), MakeVec4(115, 105, 110, 103)), MakeVec4(32, 65, 112, 116)), MakeVec4(111, 115, 32, 68)), MakeVec4(105, 103, 105, 116)), MakeVec4(97, 108, 32, 65)), MakeVec4(115, 115, 101, 116)), MakeVec4(32, 83, 116, 97)), MakeVec4(110, 100, 97, 114)), MakeVec1(100));
    assume $IsValid'vec'u8''($t21);

    // $t22 := string::utf8($t21) on_abort goto L3 with $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:141:13+36
    call $t22 := $1_string_utf8($t21);
    if ($abort_flag) {
        assume {:print "$at(2,5809,5845)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(104,15):", $t12} $t12 == $t12;
        goto L3;
    }

    // $t23 := [82, 101, 116, 114, 111, 32, 56, 48, 115, 32, 78, 70, 84, 32, 67, 111, 108, 108, 101, 99, 116, 105, 111, 110, 32, 50, 48, 50, 53, 45, 48, 49, 45, 48, 56, 45, 118, 50, 45, 117, 110, 105, 113, 117, 101] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:142:26+15
    assume {:print "$at(2,5872,5887)"} true;
    $t23 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(82, 101, 116, 114), MakeVec4(111, 32, 56, 48)), MakeVec4(115, 32, 78, 70)), MakeVec4(84, 32, 67, 111)), MakeVec4(108, 108, 101, 99)), MakeVec4(116, 105, 111, 110)), MakeVec4(32, 50, 48, 50)), MakeVec4(53, 45, 48, 49)), MakeVec4(45, 48, 56, 45)), MakeVec4(118, 50, 45, 117)), MakeVec4(110, 105, 113, 117)), MakeVec1(101));
    assume $IsValid'vec'u8''($t23);

    // $t24 := string::utf8($t23) on_abort goto L3 with $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:142:13+29
    call $t24 := $1_string_utf8($t23);
    if ($abort_flag) {
        assume {:print "$at(2,5859,5888)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(104,15):", $t12} $t12 == $t12;
        goto L3;
    }

    // $t25 := opaque begin: option::none<0x4::royalty::Royalty>() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:143:13+14
    assume {:print "$at(2,5902,5916)"} true;

    // assume And(WellFormed($t25), Le(Len<0x4::royalty::Royalty>(select option::Option.vec($t25)), 1)) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:143:13+14
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($t25) && (LenVec($t25->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x4::royalty::Royalty>>($t25, option::spec_none<0x4::royalty::Royalty>()) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:143:13+14
    assume $IsEqual'$1_option_Option'$4_royalty_Royalty''($t25, $1_option_spec_none'$4_royalty_Royalty'());

    // $t25 := opaque end: option::none<0x4::royalty::Royalty>() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:143:13+14

    // $t26 := [104, 116, 116, 112, 115, 58, 47, 47, 114, 101, 116, 114, 111, 119, 97, 118, 101, 46, 110, 102, 116, 47, 99, 111, 108, 108, 101, 99, 116, 105, 111, 110, 47, 50, 48, 50, 53, 45, 48, 49, 45, 48, 56, 45, 117, 110, 105, 113, 117, 101] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:144:26+14
    assume {:print "$at(2,5943,5957)"} true;
    $t26 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(104, 116, 116, 112), MakeVec4(115, 58, 47, 47)), MakeVec4(114, 101, 116, 114)), MakeVec4(111, 119, 97, 118)), MakeVec4(101, 46, 110, 102)), MakeVec4(116, 47, 99, 111)), MakeVec4(108, 108, 101, 99)), MakeVec4(116, 105, 111, 110)), MakeVec4(47, 50, 48, 50)), MakeVec4(53, 45, 48, 49)), MakeVec4(45, 48, 56, 45)), MakeVec4(117, 110, 105, 113)), MakeVec2(117, 101));
    assume $IsValid'vec'u8''($t26);

    // $t27 := string::utf8($t26) on_abort goto L3 with $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:144:13+28
    call $t27 := $1_string_utf8($t26);
    if ($abort_flag) {
        assume {:print "$at(2,5930,5958)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(104,15):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[$t14]($t27) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:139:42+242
    assume {:print "$at(2,5726,5968)"} true;
    assume {:print "$track_local(104,15,5):", $t27} $t27 == $t27;

    // trace_local[$t13]($t25) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:139:42+242
    assume {:print "$track_local(104,15,6):", $t25} $t25 == $t25;

    // trace_local[$t11]($t24) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:139:42+242
    assume {:print "$track_local(104,15,7):", $t24} $t24 == $t24;

    // trace_local[$t9]($t22) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:139:42+242
    assume {:print "$track_local(104,15,8):", $t22} $t22 == $t22;

    // $t28 := collection::create_unlimited_collection($t19, $t22, $t24, $t25, $t27) on_abort goto L3 with $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:139:42+242
    call $t28 := $4_collection_create_unlimited_collection($t19, $t22, $t24, $t25, $t27);
    if ($abort_flag) {
        assume {:print "$at(2,5726,5968)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(104,15):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[collection_constructor_ref]($t28) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:139:42+242
    assume {:print "$track_local(104,15,9):", $t28} $t28 == $t28;

    // $t29 := object::object_from_constructor_ref<0x4::collection::Collection>($t28) on_abort goto L3 with $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:147:33+110
    assume {:print "$at(2,6003,6113)"} true;
    call $t29 := $1_object_object_from_constructor_ref'$4_collection_Collection'($t28);
    if ($abort_flag) {
        assume {:print "$at(2,6003,6113)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(104,15):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[admin]($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:152:17+16
    assume {:print "$at(2,6197,6213)"} true;
    assume {:print "$track_local(104,15,0):", $t19} $t19 == $t19;

    // $t30 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:154:27+1
    assume {:print "$at(2,6300,6301)"} true;
    $t30 := 0;
    assume $IsValid'u64'($t30);

    // $t31 := pack 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection($t29, $t30, $t11, $t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:152:35+172
    assume {:print "$at(2,6215,6387)"} true;
    $t31 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection($t29, $t30, $t11, $t20);

    // trace_local[$t19]($t31) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:152:9+199
    assume {:print "$track_local(104,15,10):", $t31} $t31 == $t31;

    // move_to<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>($t31, $t19) on_abort goto L3 with $t12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:152:9+199
    if ($ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t19->$addr)) {
        call $ExecFailureAbort();
    } else {
        $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory := $ResourceUpdate($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t19->$addr, $t31);
    }
    if ($abort_flag) {
        assume {:print "$at(2,6189,6388)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(104,15):", $t12} $t12 == $t12;
        goto L3;
    }

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:158:5+1
    assume {:print "$at(2,6394,6395)"} true;
L2:

    // return () at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:158:5+1
    assume {:print "$at(2,6394,6395)"} true;
    return;

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:158:5+1
L3:

    // abort($t12) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:158:5+1
    assume {:print "$at(2,6394,6395)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::mint_random_nft [baseline] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+3377
procedure {:inline 1} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_mint_random_nft(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: $Mutation ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection);
    var $t2: int;
    var $t3: int;
    var $t4: Vec (int);
    var $t5: int;
    var $t6: int;
    var $t7: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $t8: $1_string_String;
    var $t9: $1_string_String;
    var $t10: $1_string_String;
    var $t11: $signer;
    var $t12: $1_object_ConstructorRef;
    var $t13: $1_object_TransferRef;
    var $t14: $Mutation ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs);
    var $t15: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData));
    var $t16: int;
    var $t17: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData;
    var $t18: int;
    var $t19: int;
    var $t20: $Mutation ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection);
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: Vec (int);
    var $t29: int;
    var $t30: int;
    var $t31: int;
    var $t32: bool;
    var $t33: int;
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: int;
    var $t40: int;
    var $t41: int;
    var $t42: int;
    var $t43: int;
    var $t44: int;
    var $t45: int;
    var $t46: int;
    var $t47: int;
    var $t48: int;
    var $t49: int;
    var $t50: int;
    var $t51: int;
    var $t52: int;
    var $t53: int;
    var $t54: int;
    var $t55: int;
    var $t56: int;
    var $t57: int;
    var $t58: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $t59: Vec (int);
    var $t60: $Mutation ($1_string_String);
    var $t61: $1_string_String;
    var $t62: Vec (int);
    var $t63: $Mutation ($1_string_String);
    var $t64: $1_string_String;
    var $t65: $Mutation ($1_string_String);
    var $t66: Vec (int);
    var $t67: $1_string_String;
    var $t68: $Mutation ($1_string_String);
    var $t69: $1_string_String;
    var $t70: $Mutation ($1_string_String);
    var $t71: Vec (int);
    var $t72: $1_string_String;
    var $t73: $Mutation ($1_string_String);
    var $t74: $1_string_String;
    var $t75: $1_string_String;
    var $t76: $1_string_String;
    var $t77: $1_string_String;
    var $t78: $1_account_SignerCapability;
    var $t79: int;
    var $t80: $signer;
    var $t81: Vec (int);
    var $t82: $1_string_String;
    var $t83: $1_string_String;
    var $t84: $1_string_String;
    var $t85: $1_option_Option'$4_royalty_Royalty';
    var $t86: $1_object_ConstructorRef;
    var $t87: $1_object_TransferRef;
    var $t88: int;
    var $t89: $1_object_LinearTransferRef;
    var $t90: $1_object_ObjectCore;
    var $t91: int;
    var $t92: int;
    var $t93: int;
    var $t94: $Mutation (int);
    var $t95: bool;
    var $t96: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var $t97: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs;
    var $t98: $Mutation ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs);
    var $t99: int;
    var $t100: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData));
    var $t101: $1_string_String;
    var $t102: $1_string_String;
    var $t103: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData;
    var $t104: int;
    var $t105: int;
    var $t0: $signer;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'': Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[user]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume {:print "$at(2,6785,6786)"} true;
    assume {:print "$track_local(104,16,0):", $t0} $t0 == $t0;

    // $t18 := retro_nft_generator_da::get_shared_collection_address() on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:168:27+31
    assume {:print "$at(2,6894,6925)"} true;
    call $t18 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shared_collection_address();
    if ($abort_flag) {
        assume {:print "$at(2,6894,6925)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t20 := borrow_global<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>($t18) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:169:31+45
    assume {:print "$at(2,6957,7002)"} true;
    if (!$ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t18)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $Mutation($Global($t18), EmptyVec(), $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t18));
    }
    if ($abort_flag) {
        assume {:print "$at(2,6957,7002)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[collection_data]($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:169:31+45
    $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection' := $Dereference($t20);
    assume {:print "$track_local(104,16,1):", $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'} $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection' == $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection';

    // $t21 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.total_minted($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:17+28
    assume {:print "$at(2,7057,7085)"} true;
    $t21 := $Dereference($t20)->$total_minted;

    // $t22 := 10000 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:48+10
    $t22 := 10000;
    assume $IsValid'u64'($t22);

    // $t23 := <($t21, $t22) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:17+41
    call $t23 := $Lt($t21, $t22);

    // if ($t23) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:9+6
    if ($t23) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:175:25+24
    assume {:print "$at(2,7201,7225)"} true;
L1:

    // $t24 := signer::address_of($t0) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:175:25+24
    assume {:print "$at(2,7201,7225)"} true;
    call $t24 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,7201,7225)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[user_addr]($t24) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:175:25+24
    assume {:print "$track_local(104,16,2):", $t24} $t24 == $t24;

    // $t25 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.total_minted($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:177:24+28
    assume {:print "$at(2,7290,7318)"} true;
    $t25 := $Dereference($t20)->$total_minted;

    // $t26 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:177:55+1
    $t26 := 1;
    assume $IsValid'u64'($t26);

    // $t27 := +($t25, $t26) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:177:24+32
    call $t27 := $AddU64($t25, $t26);
    if ($abort_flag) {
        assume {:print "$at(2,7290,7322)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[$t4]($t27) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:177:24+32
    assume {:print "$track_local(104,16,3):", $t27} $t27 == $t27;

    // $t28 := bcs::to_bytes<address>($t24) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:180:26+30
    assume {:print "$at(2,7443,7473)"} true;
    call $t28 := $1_bcs_to_bytes'address'($t24);
    if ($abort_flag) {
        assume {:print "$at(2,7443,7473)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[addr_bytes]($t28) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:180:26+30
    assume {:print "$track_local(104,16,4):", $t28} $t28 == $t28;

    // $t29 := timestamp::now_microseconds() on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:181:28+29
    assume {:print "$at(2,7502,7531)"} true;
    call $t29 := $1_timestamp_now_microseconds();
    if ($abort_flag) {
        assume {:print "$at(2,7502,7531)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[$t6]($t29) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:181:28+29
    assume {:print "$track_local(104,16,5):", $t29} $t29 == $t29;

    // $t30 := vector::length<u8>($t28) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:182:28+27
    assume {:print "$at(2,7560,7587)"} true;
    call $t30 := $1_vector_length'u8'($t28);
    if ($abort_flag) {
        assume {:print "$at(2,7560,7587)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t31 := 4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:182:59+1
    $t31 := 4;
    assume $IsValid'u64'($t31);

    // $t32 := >=($t30, $t31) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:182:28+32
    call $t32 := $Ge($t30, $t31);

    // if ($t32) goto L3 else goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:182:24+330
    if ($t32) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:30+11
    assume {:print "$at(2,7625,7636)"} true;
L3:

    // $t33 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:43+1
    assume {:print "$at(2,7638,7639)"} true;
    $t33 := 0;
    assume $IsValid'u64'($t33);

    // $t34 := vector::borrow<u8>($t28, $t33) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:15+30
    call $t34 := $1_vector_borrow'u8'($t28, $t33);
    if ($abort_flag) {
        assume {:print "$at(2,7610,7640)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t35 := (u64)($t34) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:13+40
    call $t35 := $CastU64($t34);
    if ($abort_flag) {
        assume {:print "$at(2,7608,7648)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t36 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:184:43+1
    assume {:print "$at(2,7693,7694)"} true;
    $t36 := 1;
    assume $IsValid'u64'($t36);

    // $t37 := vector::borrow<u8>($t28, $t36) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:184:15+30
    call $t37 := $1_vector_borrow'u8'($t28, $t36);
    if ($abort_flag) {
        assume {:print "$at(2,7665,7695)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t38 := (u64)($t37) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:184:13+40
    call $t38 := $CastU64($t37);
    if ($abort_flag) {
        assume {:print "$at(2,7663,7703)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t39 := 256 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:184:56+3
    $t39 := 256;
    assume $IsValid'u64'($t39);

    // $t40 := *($t38, $t39) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:184:13+46
    call $t40 := $MulU64($t38, $t39);
    if ($abort_flag) {
        assume {:print "$at(2,7663,7709)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t41 := +($t35, $t40) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:13+101
    assume {:print "$at(2,7608,7709)"} true;
    call $t41 := $AddU64($t35, $t40);
    if ($abort_flag) {
        assume {:print "$at(2,7608,7709)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t42 := 2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:185:43+1
    assume {:print "$at(2,7754,7755)"} true;
    $t42 := 2;
    assume $IsValid'u64'($t42);

    // $t43 := vector::borrow<u8>($t28, $t42) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:185:15+30
    call $t43 := $1_vector_borrow'u8'($t28, $t42);
    if ($abort_flag) {
        assume {:print "$at(2,7726,7756)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t44 := (u64)($t43) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:185:13+40
    call $t44 := $CastU64($t43);
    if ($abort_flag) {
        assume {:print "$at(2,7724,7764)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t45 := 65536 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:185:56+5
    $t45 := 65536;
    assume $IsValid'u64'($t45);

    // $t46 := *($t44, $t45) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:185:13+48
    call $t46 := $MulU64($t44, $t45);
    if ($abort_flag) {
        assume {:print "$at(2,7724,7772)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t47 := +($t41, $t46) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:13+164
    assume {:print "$at(2,7608,7772)"} true;
    call $t47 := $AddU64($t41, $t46);
    if ($abort_flag) {
        assume {:print "$at(2,7608,7772)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t48 := 3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:186:43+1
    assume {:print "$at(2,7817,7818)"} true;
    $t48 := 3;
    assume $IsValid'u64'($t48);

    // $t49 := vector::borrow<u8>($t28, $t48) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:186:15+30
    call $t49 := $1_vector_borrow'u8'($t28, $t48);
    if ($abort_flag) {
        assume {:print "$at(2,7789,7819)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t50 := (u64)($t49) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:186:13+40
    call $t50 := $CastU64($t49);
    if ($abort_flag) {
        assume {:print "$at(2,7787,7827)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t51 := 16777216 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:186:56+8
    $t51 := 16777216;
    assume $IsValid'u64'($t51);

    // $t52 := *($t50, $t51) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:186:13+51
    call $t52 := $MulU64($t50, $t51);
    if ($abort_flag) {
        assume {:print "$at(2,7787,7838)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t53 := +($t47, $t52) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:13+230
    assume {:print "$at(2,7608,7838)"} true;
    call $t53 := $AddU64($t47, $t52);
    if ($abort_flag) {
        assume {:print "$at(2,7608,7838)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t6 := $t53 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:13+230
    $t6 := $t53;

    // trace_local[$t18]($t53) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:13+230
    assume {:print "$track_local(104,16,6):", $t53} $t53 == $t53;

    // label L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:190:20+12
    assume {:print "$at(2,7907,7919)"} true;
L7:

    // $t54 := +($t29, $t6) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:190:20+23
    assume {:print "$at(2,7907,7930)"} true;
    call $t54 := $AddU64($t29, $t6);
    if ($abort_flag) {
        assume {:print "$at(2,7907,7930)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t55 := 12345 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:190:58+5
    $t55 := 12345;
    assume $IsValid'u64'($t55);

    // $t56 := *($t27, $t55) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:190:46+18
    call $t56 := $MulU64($t27, $t55);
    if ($abort_flag) {
        assume {:print "$at(2,7933,7951)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t57 := +($t54, $t56) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:190:20+44
    call $t57 := $AddU64($t54, $t56);
    if ($abort_flag) {
        assume {:print "$at(2,7907,7951)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t58 := retro_nft_generator_da::generate_improved_metadata($t57, $t27) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:191:24+42
    assume {:print "$at(2,7976,8018)"} true;
    call $t58 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_generate_improved_metadata($t57, $t27);
    if ($abort_flag) {
        assume {:print "$at(2,7976,8018)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[metadata]($t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:191:24+42
    assume {:print "$track_local(104,16,7):", $t58} $t58 == $t58;

    // $t59 := [82, 101, 116, 114, 111, 32, 78, 70, 84, 32, 35] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:194:37+14
    assume {:print "$at(2,8108,8122)"} true;
    $t59 := ConcatVec(ConcatVec(MakeVec4(82, 101, 116, 114), MakeVec4(111, 32, 78, 70)), MakeVec3(84, 32, 35));
    assume $IsValid'vec'u8''($t59);

    // $t8 := string::utf8($t59) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:194:24+28
    call $t8 := $1_string_utf8($t59);
    if ($abort_flag) {
        assume {:print "$at(2,8095,8123)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[nft_name]($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:194:24+28
    assume {:print "$track_local(104,16,8):", $t8} $t8 == $t8;

    // $t60 := borrow_local($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:195:24+13
    assume {:print "$at(2,8148,8161)"} true;
    $t60 := $Mutation($Local(8), EmptyVec(), $t8);

    // $t61 := retro_nft_generator_da::to_string($t27) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:195:39+19
    call $t61 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_to_string($t27);
    if ($abort_flag) {
        assume {:print "$at(2,8163,8182)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // string::append($t60, $t61) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:195:9+50
    call $t60 := $1_string_append($t60, $t61);
    if ($abort_flag) {
        assume {:print "$at(2,8133,8183)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // write_back[LocalRoot($t8)@]($t60) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:195:9+50
    $t8 := $Dereference($t60);

    // trace_local[nft_name]($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:195:9+50
    assume {:print "$track_local(104,16,8):", $t8} $t8 == $t8;

    // $t62 := [65, 32, 117, 110, 105, 113, 117, 101, 32, 114, 101, 116, 114, 111, 32, 56, 48, 115, 32, 78, 70, 84, 32, 119, 105, 116, 104, 32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:197:44+31
    assume {:print "$at(2,8237,8268)"} true;
    $t62 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(65, 32, 117, 110), MakeVec4(105, 113, 117, 101)), MakeVec4(32, 114, 101, 116)), MakeVec4(114, 111, 32, 56)), MakeVec4(48, 115, 32, 78)), MakeVec4(70, 84, 32, 119)), MakeVec4(105, 116, 104, 32));
    assume $IsValid'vec'u8''($t62);

    // $t9 := string::utf8($t62) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:197:31+45
    call $t9 := $1_string_utf8($t62);
    if ($abort_flag) {
        assume {:print "$at(2,8224,8269)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[nft_description]($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:197:31+45
    assume {:print "$track_local(104,16,9):", $t9} $t9 == $t9;

    // $t63 := borrow_local($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:198:24+20
    assume {:print "$at(2,8294,8314)"} true;
    $t63 := $Mutation($Local(9), EmptyVec(), $t9);

    // $t64 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>.background_color($t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:198:46+25
    $t64 := $t58->$background_color;

    // string::append($t63, $t64) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:198:9+63
    call $t63 := $1_string_append($t63, $t64);
    if ($abort_flag) {
        assume {:print "$at(2,8279,8342)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // write_back[LocalRoot($t9)@]($t63) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:198:9+63
    $t9 := $Dereference($t63);

    // trace_local[nft_description]($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:198:9+63
    assume {:print "$track_local(104,16,9):", $t9} $t9 == $t9;

    // $t65 := borrow_local($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:199:24+20
    assume {:print "$at(2,8367,8387)"} true;
    $t65 := $Mutation($Local(9), EmptyVec(), $t9);

    // $t66 := [32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 44, 32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:199:59+16
    $t66 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(32, 98, 97, 99), MakeVec4(107, 103, 114, 111)), MakeVec4(117, 110, 100, 44)), MakeVec1(32));
    assume $IsValid'vec'u8''($t66);

    // $t67 := string::utf8($t66) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:199:46+30
    call $t67 := $1_string_utf8($t66);
    if ($abort_flag) {
        assume {:print "$at(2,8389,8419)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // string::append($t65, $t67) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:199:9+68
    call $t65 := $1_string_append($t65, $t67);
    if ($abort_flag) {
        assume {:print "$at(2,8352,8420)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // write_back[LocalRoot($t9)@]($t65) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:199:9+68
    $t9 := $Dereference($t65);

    // trace_local[nft_description]($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:199:9+68
    assume {:print "$track_local(104,16,9):", $t9} $t9 == $t9;

    // $t68 := borrow_local($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:200:24+20
    assume {:print "$at(2,8445,8465)"} true;
    $t68 := $Mutation($Local(9), EmptyVec(), $t9);

    // $t69 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>.shape($t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:200:46+14
    $t69 := $t58->$shape;

    // string::append($t68, $t69) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:200:9+52
    call $t68 := $1_string_append($t68, $t69);
    if ($abort_flag) {
        assume {:print "$at(2,8430,8482)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // write_back[LocalRoot($t9)@]($t68) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:200:9+52
    $t9 := $Dereference($t68);

    // trace_local[nft_description]($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:200:9+52
    assume {:print "$track_local(104,16,9):", $t9} $t9 == $t9;

    // $t70 := borrow_local($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:201:24+20
    assume {:print "$at(2,8507,8527)"} true;
    $t70 := $Mutation($Local(9), EmptyVec(), $t9);

    // $t71 := [32, 115, 104, 97, 112, 101, 44, 32, 97, 110, 100, 32, 99, 121, 98, 101, 114, 112, 117, 110, 107, 32, 119, 111, 114, 100, 115, 58, 32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:201:59+32
    $t71 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(32, 115, 104, 97), MakeVec4(112, 101, 44, 32)), MakeVec4(97, 110, 100, 32)), MakeVec4(99, 121, 98, 101)), MakeVec4(114, 112, 117, 110)), MakeVec4(107, 32, 119, 111)), MakeVec4(114, 100, 115, 58)), MakeVec1(32));
    assume $IsValid'vec'u8''($t71);

    // $t72 := string::utf8($t71) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:201:46+46
    call $t72 := $1_string_utf8($t71);
    if ($abort_flag) {
        assume {:print "$at(2,8529,8575)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // string::append($t70, $t72) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:201:9+84
    call $t70 := $1_string_append($t70, $t72);
    if ($abort_flag) {
        assume {:print "$at(2,8492,8576)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // write_back[LocalRoot($t9)@]($t70) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:201:9+84
    $t9 := $Dereference($t70);

    // trace_local[nft_description]($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:201:9+84
    assume {:print "$track_local(104,16,9):", $t9} $t9 == $t9;

    // $t73 := borrow_local($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:202:24+20
    assume {:print "$at(2,8601,8621)"} true;
    $t73 := $Mutation($Local(9), EmptyVec(), $t9);

    // $t74 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>.word_combination($t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:202:46+25
    $t74 := $t58->$word_combination;

    // string::append($t73, $t74) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:202:9+63
    call $t73 := $1_string_append($t73, $t74);
    if ($abort_flag) {
        assume {:print "$at(2,8586,8649)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // write_back[LocalRoot($t9)@]($t73) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:202:9+63
    $t9 := $Dereference($t73);

    // trace_local[nft_description]($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:202:9+63
    assume {:print "$track_local(104,16,9):", $t9} $t9 == $t9;

    // $t75 := copy($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:204:42+8
    assume {:print "$at(2,8701,8709)"} true;
    $t75 := $t8;

    // $t76 := copy($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:204:52+15
    $t76 := $t9;

    // $t77 := retro_nft_generator_da::create_token_uri($t75, $t76, $t58) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:204:25+53
    call $t77 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_create_token_uri($t75, $t76, $t58);
    if ($abort_flag) {
        assume {:print "$at(2,8684,8737)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[$t60]($t77) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:204:25+53
    assume {:print "$track_local(104,16,10):", $t77} $t77 == $t77;

    // $t78 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.resource_cap($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:207:70+29
    assume {:print "$at(2,8875,8904)"} true;
    $t78 := $Dereference($t20)->$resource_cap;

    // assume Identical($t79, select account::SignerCapability.account<0x1::account::SignerCapability>($t78)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:670:9+30
    assume {:print "$at(97,33278,33308)"} true;
    assume ($t79 == $t78->$account);

    // $t80 := account::create_signer_with_capability($t78) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:207:31+69
    assume {:print "$at(2,8836,8905)"} true;
    call $t80 := $1_account_create_signer_with_capability($t78);
    if ($abort_flag) {
        assume {:print "$at(2,8836,8905)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[resource_signer]($t80) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:207:31+69
    assume {:print "$track_local(104,16,11):", $t80} $t80 == $t80;

    // $t81 := [82, 101, 116, 114, 111, 32, 56, 48, 115, 32, 78, 70, 84, 32, 67, 111, 108, 108, 101, 99, 116, 105, 111, 110, 32, 50, 48, 50, 53, 45, 48, 49, 45, 48, 56, 45, 118, 50, 45, 117, 110, 105, 113, 117, 101] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:210:26+15
    assume {:print "$at(2,9025,9040)"} true;
    $t81 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(82, 101, 116, 114), MakeVec4(111, 32, 56, 48)), MakeVec4(115, 32, 78, 70)), MakeVec4(84, 32, 67, 111)), MakeVec4(108, 108, 101, 99)), MakeVec4(116, 105, 111, 110)), MakeVec4(32, 50, 48, 50)), MakeVec4(53, 45, 48, 49)), MakeVec4(45, 48, 56, 45)), MakeVec4(118, 50, 45, 117)), MakeVec4(110, 105, 113, 117)), MakeVec1(101));
    assume $IsValid'vec'u8''($t81);

    // $t82 := string::utf8($t81) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:210:13+29
    call $t82 := $1_string_utf8($t81);
    if ($abort_flag) {
        assume {:print "$at(2,9012,9041)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t83 := copy($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:211:13+15
    assume {:print "$at(2,9055,9070)"} true;
    $t83 := $t9;

    // $t84 := copy($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:212:13+8
    assume {:print "$at(2,9084,9092)"} true;
    $t84 := $t8;

    // $t85 := opaque begin: option::none<0x4::royalty::Royalty>() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:213:13+14
    assume {:print "$at(2,9106,9120)"} true;

    // assume And(WellFormed($t85), Le(Len<0x4::royalty::Royalty>(select option::Option.vec($t85)), 1)) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:213:13+14
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($t85) && (LenVec($t85->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x4::royalty::Royalty>>($t85, option::spec_none<0x4::royalty::Royalty>()) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:213:13+14
    assume $IsEqual'$1_option_Option'$4_royalty_Royalty''($t85, $1_option_spec_none'$4_royalty_Royalty'());

    // $t85 := opaque end: option::none<0x4::royalty::Royalty>() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:213:13+14

    // $t86 := token::create_named_token($t80, $t82, $t83, $t84, $t85, $t77) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:208:37+210
    assume {:print "$at(2,8943,9153)"} true;
    call $t86 := $4_token_create_named_token($t80, $t82, $t83, $t84, $t85, $t77);
    if ($abort_flag) {
        assume {:print "$at(2,8943,9153)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[token_constructor_ref]($t86) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:208:37+210
    assume {:print "$track_local(104,16,12):", $t86} $t86 == $t86;

    // $t87 := object::generate_transfer_ref($t86) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:218:28+53
    assume {:print "$at(2,9245,9298)"} true;
    call $t87 := $1_object_generate_transfer_ref($t86);
    if ($abort_flag) {
        assume {:print "$at(2,9245,9298)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[transfer_ref]($t87) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:218:28+53
    assume {:print "$track_local(104,16,13):", $t87} $t87 == $t87;

    // assume Identical($t88, select object::ObjectCore.owner<0x1::object::ObjectCore>(global<0x1::object::ObjectCore>(select object::TransferRef.self<0x1::object::TransferRef>($t87)))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:420:9+47
    assume {:print "$at(186,16994,17041)"} true;
    assume ($t88 == $ResourceValue($1_object_ObjectCore_$memory, $t87->$self)->$owner);

    // $t89 := object::generate_linear_transfer_ref($t87) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:219:35+51
    assume {:print "$at(2,9334,9385)"} true;
    call $t89 := $1_object_generate_linear_transfer_ref($t87);
    if ($abort_flag) {
        assume {:print "$at(2,9334,9385)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // assume Identical($t90, global<0x1::object::ObjectCore>(select object::LinearTransferRef.self<0x1::object::LinearTransferRef>($t89))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:429:9+42
    assume {:print "$at(186,17279,17321)"} true;
    assume ($t90 == $ResourceValue($1_object_ObjectCore_$memory, $t89->$self));

    // object::transfer_with_ref($t89, $t24) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:220:9+57
    assume {:print "$at(2,9395,9452)"} true;
    call $1_object_transfer_with_ref($t89, $t24);
    if ($abort_flag) {
        assume {:print "$at(2,9395,9452)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t91 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.total_minted($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:223:40+28
    assume {:print "$at(2,9526,9554)"} true;
    $t91 := $Dereference($t20)->$total_minted;

    // $t92 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:223:71+1
    $t92 := 1;
    assume $IsValid'u64'($t92);

    // $t93 := +($t91, $t92) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:223:40+32
    call $t93 := $AddU64($t91, $t92);
    if ($abort_flag) {
        assume {:print "$at(2,9526,9558)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t94 := borrow_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.total_minted($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:223:9+28
    $t94 := $ChildMutation($t20, 1, $Dereference($t20)->$total_minted);

    // write_ref($t94, $t93) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:223:9+63
    $t94 := $UpdateMutation($t94, $t93);

    // write_back[Reference($t20).total_minted (u64)]($t94) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:223:9+63
    $t20 := $UpdateMutation($t20, $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'_total_minted($Dereference($t20), $Dereference($t94)));

    // write_back[0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection@]($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:223:9+63
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory := $ResourceUpdate($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $GlobalLocationAddress($t20),
        $Dereference($t20));

    // $t95 := exists<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>($t24) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:226:14+27
    assume {:print "$at(2,9629,9656)"} true;
    $t95 := $ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $t24);

    // if ($t95) goto L4 else goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:226:13+28
    if ($t95) { goto L4; } else { goto L5; }

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:227:21+4
    assume {:print "$at(2,9680,9684)"} true;
L5:

    // $t96 := vector::empty<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::TokenData>() on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:228:23+26
    assume {:print "$at(2,9719,9745)"} true;
    call $t96 := $1_vector_empty'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'();
    if ($abort_flag) {
        assume {:print "$at(2,9719,9745)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t97 := pack 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs($t96) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:227:27+74
    assume {:print "$at(2,9686,9760)"} true;
    $t97 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs($t96);

    // move_to<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>($t97, $t0) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:227:13+89
    if ($ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory := $ResourceUpdate($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $t0->$addr, $t97);
    }
    if ($abort_flag) {
        assume {:print "$at(2,9672,9761)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:232:25+38
    assume {:print "$at(2,9799,9837)"} true;
L6:

    // $t98 := borrow_global<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>($t24) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:232:25+38
    assume {:print "$at(2,9799,9837)"} true;
    if (!$ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $t24)) {
        call $ExecFailureAbort();
    } else {
        $t98 := $Mutation($Global($t24), EmptyVec(), $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $t24));
    }
    if ($abort_flag) {
        assume {:print "$at(2,9799,9837)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[user_nfts]($t98) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:232:25+38
    $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs' := $Dereference($t98);
    assume {:print "$track_local(104,16,14):", $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'} $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs' == $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs';

    // $t99 := object::address_from_constructor_ref($t86) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:233:34+60
    assume {:print "$at(2,9872,9932)"} true;
    call $t99 := $1_object_address_from_constructor_ref($t86);
    if ($abort_flag) {
        assume {:print "$at(2,9872,9932)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t100 := borrow_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>.nfts($t98) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:234:27+19
    assume {:print "$at(2,9960,9979)"} true;
    $t100 := $ChildMutation($t98, 0, $Dereference($t98)->$nfts);

    // trace_local[$t111]($t100) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:235:13+18
    assume {:print "$at(2,10005,10023)"} true;
    $temp_0'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'' := $Dereference($t100);
    assume {:print "$track_local(104,16,15):", $temp_0'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''} $temp_0'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'' == $temp_0'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'';

    // $t101 := move($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:236:19+8
    assume {:print "$at(2,10043,10051)"} true;
    $t101 := $t8;

    // $t102 := move($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:237:26+15
    assume {:print "$at(2,10078,10093)"} true;
    $t102 := $t9;

    // $t103 := pack 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::TokenData($t99, $t101, $t102, $t77, $t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:234:48+173
    assume {:print "$at(2,9981,10154)"} true;
    $t103 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData($t99, $t101, $t102, $t77, $t58);

    // trace_local[$t112]($t103) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:234:9+213
    assume {:print "$track_local(104,16,17):", $t103} $t103 == $t103;

    // vector::push_back<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::TokenData>($t100, $t103) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:234:9+213
    call $t100 := $1_vector_push_back'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'($t100, $t103);
    if ($abort_flag) {
        assume {:print "$at(2,9942,10155)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // write_back[Reference($t98).nfts (vector<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::TokenData>)]($t100) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:234:9+213
    $t98 := $UpdateMutation($t98, $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'_nfts($Dereference($t98), $Dereference($t100)));

    // write_back[0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs@]($t98) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:234:9+213
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory := $ResourceUpdate($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $GlobalLocationAddress($t98),
        $Dereference($t98));

    // goto L8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:86+3296
    assume {:print "$at(2,6866,10162)"} true;
    goto L8;

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:226:9+148
    assume {:print "$at(2,9624,9772)"} true;
L4:

    // goto L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:226:9+148
    assume {:print "$at(2,9624,9772)"} true;
    goto L6;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:188:13+8
    assume {:print "$at(2,7868,7876)"} true;
L2:

    // $t104 := 12345 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:188:13+8
    assume {:print "$at(2,7868,7876)"} true;
    $t104 := 12345;
    assume $IsValid'u64'($t104);

    // $t6 := $t104 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:188:13+8
    $t6 := $t104;

    // trace_local[$t18]($t104) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:188:13+8
    assume {:print "$track_local(104,16,6):", $t104} $t104 == $t104;

    // goto L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:188:13+8
    goto L7;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:9+6
    assume {:print "$at(2,7049,7055)"} true;
L0:

    // drop($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:9+6
    assume {:print "$at(2,7049,7055)"} true;

    // $t105 := 4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:60+19
    $t105 := 4;
    assume $IsValid'u64'($t105);

    // trace_abort($t105) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:9+6
    assume {:print "$at(2,7049,7055)"} true;
    assume {:print "$track_abort(104,16):", $t105} $t105 == $t105;

    // $t19 := move($t105) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:9+6
    $t19 := $t105;

    // goto L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:9+6
    goto L9;

    // label L8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:241:5+1
    assume {:print "$at(2,10161,10162)"} true;
L8:

    // return () at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:241:5+1
    assume {:print "$at(2,10161,10162)"} true;
    return;

    // label L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:241:5+1
L9:

    // abort($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:241:5+1
    assume {:print "$at(2,10161,10162)"} true;
    $abort_code := $t19;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::mint_random_nft [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+3377
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_mint_random_nft$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: $Mutation ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection);
    var $t2: int;
    var $t3: int;
    var $t4: Vec (int);
    var $t5: int;
    var $t6: int;
    var $t7: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $t8: $1_string_String;
    var $t9: $1_string_String;
    var $t10: $1_string_String;
    var $t11: $signer;
    var $t12: $1_object_ConstructorRef;
    var $t13: $1_object_TransferRef;
    var $t14: $Mutation ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs);
    var $t15: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData));
    var $t16: int;
    var $t17: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData;
    var $t18: int;
    var $t19: int;
    var $t20: $Mutation ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection);
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: Vec (int);
    var $t29: int;
    var $t30: int;
    var $t31: int;
    var $t32: bool;
    var $t33: int;
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: int;
    var $t40: int;
    var $t41: int;
    var $t42: int;
    var $t43: int;
    var $t44: int;
    var $t45: int;
    var $t46: int;
    var $t47: int;
    var $t48: int;
    var $t49: int;
    var $t50: int;
    var $t51: int;
    var $t52: int;
    var $t53: int;
    var $t54: int;
    var $t55: int;
    var $t56: int;
    var $t57: int;
    var $t58: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $t59: Vec (int);
    var $t60: $Mutation ($1_string_String);
    var $t61: $1_string_String;
    var $t62: Vec (int);
    var $t63: $Mutation ($1_string_String);
    var $t64: $1_string_String;
    var $t65: $Mutation ($1_string_String);
    var $t66: Vec (int);
    var $t67: $1_string_String;
    var $t68: $Mutation ($1_string_String);
    var $t69: $1_string_String;
    var $t70: $Mutation ($1_string_String);
    var $t71: Vec (int);
    var $t72: $1_string_String;
    var $t73: $Mutation ($1_string_String);
    var $t74: $1_string_String;
    var $t75: $1_string_String;
    var $t76: $1_string_String;
    var $t77: $1_string_String;
    var $t78: $1_account_SignerCapability;
    var $t79: int;
    var $t80: $signer;
    var $t81: Vec (int);
    var $t82: $1_string_String;
    var $t83: $1_string_String;
    var $t84: $1_string_String;
    var $t85: $1_option_Option'$4_royalty_Royalty';
    var $t86: $1_object_ConstructorRef;
    var $t87: $1_object_TransferRef;
    var $t88: int;
    var $t89: $1_object_LinearTransferRef;
    var $t90: $1_object_ObjectCore;
    var $t91: int;
    var $t92: int;
    var $t93: int;
    var $t94: $Mutation (int);
    var $t95: bool;
    var $t96: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var $t97: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs;
    var $t98: $Mutation ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs);
    var $t99: int;
    var $t100: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData));
    var $t101: $1_string_String;
    var $t102: $1_string_String;
    var $t103: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData;
    var $t104: int;
    var $t105: int;
    var $t0: $signer;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'': Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume {:print "$at(2,6785,6786)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: 0x1::features::Features: ResourceDomain<0x1::features::Features>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: 0x1::chain_status::GenesisEndMarker: ResourceDomain<0x1::chain_status::GenesisEndMarker>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: 0x1::timestamp::CurrentTimeMicroseconds: ResourceDomain<0x1::timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: 0x1::object::ObjectCore: ResourceDomain<0x1::object::ObjectCore>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: 0x1::object::TombStone: ResourceDomain<0x1::object::TombStone>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_TombStone_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_TombStone_$memory, $a_0);
    ($IsValid'$1_object_TombStone'($rsc))));

    // assume forall $rsc: 0x1::object::Untransferable: ResourceDomain<0x1::object::Untransferable>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::reconfiguration::Configuration: ResourceDomain<0x1::reconfiguration::Configuration>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: 0x4::royalty::Royalty: ResourceDomain<0x4::royalty::Royalty>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: 0x4::collection::ConcurrentSupply: ResourceDomain<0x4::collection::ConcurrentSupply>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$4_collection_ConcurrentSupply'($rsc))));

    // assume forall $rsc: 0x4::collection::Collection: ResourceDomain<0x4::collection::Collection>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_Collection_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_Collection_$memory, $a_0);
    ($IsValid'$4_collection_Collection'($rsc))));

    // assume forall $rsc: 0x4::collection::FixedSupply: ResourceDomain<0x4::collection::FixedSupply>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_FixedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_FixedSupply_$memory, $a_0);
    ($IsValid'$4_collection_FixedSupply'($rsc))));

    // assume forall $rsc: 0x4::collection::UnlimitedSupply: ResourceDomain<0x4::collection::UnlimitedSupply>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0);
    ($IsValid'$4_collection_UnlimitedSupply'($rsc))));

    // assume forall $rsc: 0x4::token::Token: ResourceDomain<0x4::token::Token>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_token_Token_$memory, $a_0)}(var $rsc := $ResourceValue($4_token_Token_$memory, $a_0);
    ($IsValid'$4_token_Token'($rsc))));

    // assume forall $rsc: 0x4::token::TokenIdentifiers: ResourceDomain<0x4::token::TokenIdentifiers>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_token_TokenIdentifiers_$memory, $a_0)}(var $rsc := $ResourceValue($4_token_TokenIdentifiers_$memory, $a_0);
    ($IsValid'$4_token_TokenIdentifiers'($rsc))));

    // assume forall $rsc: 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection: ResourceDomain<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume (forall $a_0: int :: {$ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0)}(var $rsc := $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0);
    ($IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'($rsc))));

    // assume forall $rsc: 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs: ResourceDomain<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume (forall $a_0: int :: {$ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $a_0)}(var $rsc := $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $a_0);
    ($IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<0x1::timestamp::CurrentTimeMicroseconds>(0x1)) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+3377
    // global invariant at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.spec.move:36:9+107
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+3377
    // global invariant at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/reconfiguration.spec.move:51:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[user]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:5+1
    assume {:print "$track_local(104,16,0):", $t0} $t0 == $t0;

    // $t18 := retro_nft_generator_da::get_shared_collection_address() on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:168:27+31
    assume {:print "$at(2,6894,6925)"} true;
    call $t18 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shared_collection_address();
    if ($abort_flag) {
        assume {:print "$at(2,6894,6925)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t20 := borrow_global<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>($t18) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:169:31+45
    assume {:print "$at(2,6957,7002)"} true;
    if (!$ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t18)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $Mutation($Global($t18), EmptyVec(), $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t18));
    }
    if ($abort_flag) {
        assume {:print "$at(2,6957,7002)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[collection_data]($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:169:31+45
    $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection' := $Dereference($t20);
    assume {:print "$track_local(104,16,1):", $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'} $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection' == $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection';

    // $t21 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.total_minted($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:17+28
    assume {:print "$at(2,7057,7085)"} true;
    $t21 := $Dereference($t20)->$total_minted;

    // $t22 := 10000 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:48+10
    $t22 := 10000;
    assume $IsValid'u64'($t22);

    // $t23 := <($t21, $t22) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:17+41
    call $t23 := $Lt($t21, $t22);

    // if ($t23) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:9+6
    if ($t23) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:175:25+24
    assume {:print "$at(2,7201,7225)"} true;
L1:

    // $t24 := signer::address_of($t0) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:175:25+24
    assume {:print "$at(2,7201,7225)"} true;
    call $t24 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,7201,7225)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[user_addr]($t24) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:175:25+24
    assume {:print "$track_local(104,16,2):", $t24} $t24 == $t24;

    // $t25 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.total_minted($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:177:24+28
    assume {:print "$at(2,7290,7318)"} true;
    $t25 := $Dereference($t20)->$total_minted;

    // $t26 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:177:55+1
    $t26 := 1;
    assume $IsValid'u64'($t26);

    // $t27 := +($t25, $t26) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:177:24+32
    call $t27 := $AddU64($t25, $t26);
    if ($abort_flag) {
        assume {:print "$at(2,7290,7322)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[$t4]($t27) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:177:24+32
    assume {:print "$track_local(104,16,3):", $t27} $t27 == $t27;

    // $t28 := bcs::to_bytes<address>($t24) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:180:26+30
    assume {:print "$at(2,7443,7473)"} true;
    call $t28 := $1_bcs_to_bytes'address'($t24);
    if ($abort_flag) {
        assume {:print "$at(2,7443,7473)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[addr_bytes]($t28) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:180:26+30
    assume {:print "$track_local(104,16,4):", $t28} $t28 == $t28;

    // $t29 := timestamp::now_microseconds() on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:181:28+29
    assume {:print "$at(2,7502,7531)"} true;
    call $t29 := $1_timestamp_now_microseconds();
    if ($abort_flag) {
        assume {:print "$at(2,7502,7531)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[$t6]($t29) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:181:28+29
    assume {:print "$track_local(104,16,5):", $t29} $t29 == $t29;

    // $t30 := vector::length<u8>($t28) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:182:28+27
    assume {:print "$at(2,7560,7587)"} true;
    call $t30 := $1_vector_length'u8'($t28);
    if ($abort_flag) {
        assume {:print "$at(2,7560,7587)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t31 := 4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:182:59+1
    $t31 := 4;
    assume $IsValid'u64'($t31);

    // $t32 := >=($t30, $t31) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:182:28+32
    call $t32 := $Ge($t30, $t31);

    // if ($t32) goto L3 else goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:182:24+330
    if ($t32) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:30+11
    assume {:print "$at(2,7625,7636)"} true;
L3:

    // $t33 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:43+1
    assume {:print "$at(2,7638,7639)"} true;
    $t33 := 0;
    assume $IsValid'u64'($t33);

    // $t34 := vector::borrow<u8>($t28, $t33) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:15+30
    call $t34 := $1_vector_borrow'u8'($t28, $t33);
    if ($abort_flag) {
        assume {:print "$at(2,7610,7640)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t35 := (u64)($t34) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:13+40
    call $t35 := $CastU64($t34);
    if ($abort_flag) {
        assume {:print "$at(2,7608,7648)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t36 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:184:43+1
    assume {:print "$at(2,7693,7694)"} true;
    $t36 := 1;
    assume $IsValid'u64'($t36);

    // $t37 := vector::borrow<u8>($t28, $t36) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:184:15+30
    call $t37 := $1_vector_borrow'u8'($t28, $t36);
    if ($abort_flag) {
        assume {:print "$at(2,7665,7695)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t38 := (u64)($t37) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:184:13+40
    call $t38 := $CastU64($t37);
    if ($abort_flag) {
        assume {:print "$at(2,7663,7703)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t39 := 256 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:184:56+3
    $t39 := 256;
    assume $IsValid'u64'($t39);

    // $t40 := *($t38, $t39) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:184:13+46
    call $t40 := $MulU64($t38, $t39);
    if ($abort_flag) {
        assume {:print "$at(2,7663,7709)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t41 := +($t35, $t40) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:13+101
    assume {:print "$at(2,7608,7709)"} true;
    call $t41 := $AddU64($t35, $t40);
    if ($abort_flag) {
        assume {:print "$at(2,7608,7709)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t42 := 2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:185:43+1
    assume {:print "$at(2,7754,7755)"} true;
    $t42 := 2;
    assume $IsValid'u64'($t42);

    // $t43 := vector::borrow<u8>($t28, $t42) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:185:15+30
    call $t43 := $1_vector_borrow'u8'($t28, $t42);
    if ($abort_flag) {
        assume {:print "$at(2,7726,7756)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t44 := (u64)($t43) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:185:13+40
    call $t44 := $CastU64($t43);
    if ($abort_flag) {
        assume {:print "$at(2,7724,7764)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t45 := 65536 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:185:56+5
    $t45 := 65536;
    assume $IsValid'u64'($t45);

    // $t46 := *($t44, $t45) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:185:13+48
    call $t46 := $MulU64($t44, $t45);
    if ($abort_flag) {
        assume {:print "$at(2,7724,7772)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t47 := +($t41, $t46) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:13+164
    assume {:print "$at(2,7608,7772)"} true;
    call $t47 := $AddU64($t41, $t46);
    if ($abort_flag) {
        assume {:print "$at(2,7608,7772)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t48 := 3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:186:43+1
    assume {:print "$at(2,7817,7818)"} true;
    $t48 := 3;
    assume $IsValid'u64'($t48);

    // $t49 := vector::borrow<u8>($t28, $t48) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:186:15+30
    call $t49 := $1_vector_borrow'u8'($t28, $t48);
    if ($abort_flag) {
        assume {:print "$at(2,7789,7819)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t50 := (u64)($t49) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:186:13+40
    call $t50 := $CastU64($t49);
    if ($abort_flag) {
        assume {:print "$at(2,7787,7827)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t51 := 16777216 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:186:56+8
    $t51 := 16777216;
    assume $IsValid'u64'($t51);

    // $t52 := *($t50, $t51) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:186:13+51
    call $t52 := $MulU64($t50, $t51);
    if ($abort_flag) {
        assume {:print "$at(2,7787,7838)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t53 := +($t47, $t52) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:13+230
    assume {:print "$at(2,7608,7838)"} true;
    call $t53 := $AddU64($t47, $t52);
    if ($abort_flag) {
        assume {:print "$at(2,7608,7838)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t6 := $t53 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:13+230
    $t6 := $t53;

    // trace_local[$t18]($t53) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:183:13+230
    assume {:print "$track_local(104,16,6):", $t53} $t53 == $t53;

    // label L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:190:20+12
    assume {:print "$at(2,7907,7919)"} true;
L7:

    // $t54 := +($t29, $t6) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:190:20+23
    assume {:print "$at(2,7907,7930)"} true;
    call $t54 := $AddU64($t29, $t6);
    if ($abort_flag) {
        assume {:print "$at(2,7907,7930)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t55 := 12345 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:190:58+5
    $t55 := 12345;
    assume $IsValid'u64'($t55);

    // $t56 := *($t27, $t55) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:190:46+18
    call $t56 := $MulU64($t27, $t55);
    if ($abort_flag) {
        assume {:print "$at(2,7933,7951)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t57 := +($t54, $t56) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:190:20+44
    call $t57 := $AddU64($t54, $t56);
    if ($abort_flag) {
        assume {:print "$at(2,7907,7951)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t58 := retro_nft_generator_da::generate_improved_metadata($t57, $t27) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:191:24+42
    assume {:print "$at(2,7976,8018)"} true;
    call $t58 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_generate_improved_metadata($t57, $t27);
    if ($abort_flag) {
        assume {:print "$at(2,7976,8018)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[metadata]($t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:191:24+42
    assume {:print "$track_local(104,16,7):", $t58} $t58 == $t58;

    // $t59 := [82, 101, 116, 114, 111, 32, 78, 70, 84, 32, 35] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:194:37+14
    assume {:print "$at(2,8108,8122)"} true;
    $t59 := ConcatVec(ConcatVec(MakeVec4(82, 101, 116, 114), MakeVec4(111, 32, 78, 70)), MakeVec3(84, 32, 35));
    assume $IsValid'vec'u8''($t59);

    // $t8 := string::utf8($t59) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:194:24+28
    call $t8 := $1_string_utf8($t59);
    if ($abort_flag) {
        assume {:print "$at(2,8095,8123)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[nft_name]($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:194:24+28
    assume {:print "$track_local(104,16,8):", $t8} $t8 == $t8;

    // $t60 := borrow_local($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:195:24+13
    assume {:print "$at(2,8148,8161)"} true;
    $t60 := $Mutation($Local(8), EmptyVec(), $t8);

    // $t61 := retro_nft_generator_da::to_string($t27) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:195:39+19
    call $t61 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_to_string($t27);
    if ($abort_flag) {
        assume {:print "$at(2,8163,8182)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // string::append($t60, $t61) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:195:9+50
    call $t60 := $1_string_append($t60, $t61);
    if ($abort_flag) {
        assume {:print "$at(2,8133,8183)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // write_back[LocalRoot($t8)@]($t60) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:195:9+50
    $t8 := $Dereference($t60);

    // trace_local[nft_name]($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:195:9+50
    assume {:print "$track_local(104,16,8):", $t8} $t8 == $t8;

    // $t62 := [65, 32, 117, 110, 105, 113, 117, 101, 32, 114, 101, 116, 114, 111, 32, 56, 48, 115, 32, 78, 70, 84, 32, 119, 105, 116, 104, 32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:197:44+31
    assume {:print "$at(2,8237,8268)"} true;
    $t62 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(65, 32, 117, 110), MakeVec4(105, 113, 117, 101)), MakeVec4(32, 114, 101, 116)), MakeVec4(114, 111, 32, 56)), MakeVec4(48, 115, 32, 78)), MakeVec4(70, 84, 32, 119)), MakeVec4(105, 116, 104, 32));
    assume $IsValid'vec'u8''($t62);

    // $t9 := string::utf8($t62) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:197:31+45
    call $t9 := $1_string_utf8($t62);
    if ($abort_flag) {
        assume {:print "$at(2,8224,8269)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[nft_description]($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:197:31+45
    assume {:print "$track_local(104,16,9):", $t9} $t9 == $t9;

    // $t63 := borrow_local($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:198:24+20
    assume {:print "$at(2,8294,8314)"} true;
    $t63 := $Mutation($Local(9), EmptyVec(), $t9);

    // $t64 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>.background_color($t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:198:46+25
    $t64 := $t58->$background_color;

    // string::append($t63, $t64) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:198:9+63
    call $t63 := $1_string_append($t63, $t64);
    if ($abort_flag) {
        assume {:print "$at(2,8279,8342)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // write_back[LocalRoot($t9)@]($t63) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:198:9+63
    $t9 := $Dereference($t63);

    // trace_local[nft_description]($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:198:9+63
    assume {:print "$track_local(104,16,9):", $t9} $t9 == $t9;

    // $t65 := borrow_local($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:199:24+20
    assume {:print "$at(2,8367,8387)"} true;
    $t65 := $Mutation($Local(9), EmptyVec(), $t9);

    // $t66 := [32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 44, 32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:199:59+16
    $t66 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(32, 98, 97, 99), MakeVec4(107, 103, 114, 111)), MakeVec4(117, 110, 100, 44)), MakeVec1(32));
    assume $IsValid'vec'u8''($t66);

    // $t67 := string::utf8($t66) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:199:46+30
    call $t67 := $1_string_utf8($t66);
    if ($abort_flag) {
        assume {:print "$at(2,8389,8419)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // string::append($t65, $t67) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:199:9+68
    call $t65 := $1_string_append($t65, $t67);
    if ($abort_flag) {
        assume {:print "$at(2,8352,8420)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // write_back[LocalRoot($t9)@]($t65) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:199:9+68
    $t9 := $Dereference($t65);

    // trace_local[nft_description]($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:199:9+68
    assume {:print "$track_local(104,16,9):", $t9} $t9 == $t9;

    // $t68 := borrow_local($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:200:24+20
    assume {:print "$at(2,8445,8465)"} true;
    $t68 := $Mutation($Local(9), EmptyVec(), $t9);

    // $t69 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>.shape($t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:200:46+14
    $t69 := $t58->$shape;

    // string::append($t68, $t69) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:200:9+52
    call $t68 := $1_string_append($t68, $t69);
    if ($abort_flag) {
        assume {:print "$at(2,8430,8482)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // write_back[LocalRoot($t9)@]($t68) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:200:9+52
    $t9 := $Dereference($t68);

    // trace_local[nft_description]($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:200:9+52
    assume {:print "$track_local(104,16,9):", $t9} $t9 == $t9;

    // $t70 := borrow_local($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:201:24+20
    assume {:print "$at(2,8507,8527)"} true;
    $t70 := $Mutation($Local(9), EmptyVec(), $t9);

    // $t71 := [32, 115, 104, 97, 112, 101, 44, 32, 97, 110, 100, 32, 99, 121, 98, 101, 114, 112, 117, 110, 107, 32, 119, 111, 114, 100, 115, 58, 32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:201:59+32
    $t71 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(32, 115, 104, 97), MakeVec4(112, 101, 44, 32)), MakeVec4(97, 110, 100, 32)), MakeVec4(99, 121, 98, 101)), MakeVec4(114, 112, 117, 110)), MakeVec4(107, 32, 119, 111)), MakeVec4(114, 100, 115, 58)), MakeVec1(32));
    assume $IsValid'vec'u8''($t71);

    // $t72 := string::utf8($t71) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:201:46+46
    call $t72 := $1_string_utf8($t71);
    if ($abort_flag) {
        assume {:print "$at(2,8529,8575)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // string::append($t70, $t72) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:201:9+84
    call $t70 := $1_string_append($t70, $t72);
    if ($abort_flag) {
        assume {:print "$at(2,8492,8576)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // write_back[LocalRoot($t9)@]($t70) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:201:9+84
    $t9 := $Dereference($t70);

    // trace_local[nft_description]($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:201:9+84
    assume {:print "$track_local(104,16,9):", $t9} $t9 == $t9;

    // $t73 := borrow_local($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:202:24+20
    assume {:print "$at(2,8601,8621)"} true;
    $t73 := $Mutation($Local(9), EmptyVec(), $t9);

    // $t74 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>.word_combination($t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:202:46+25
    $t74 := $t58->$word_combination;

    // string::append($t73, $t74) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:202:9+63
    call $t73 := $1_string_append($t73, $t74);
    if ($abort_flag) {
        assume {:print "$at(2,8586,8649)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // write_back[LocalRoot($t9)@]($t73) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:202:9+63
    $t9 := $Dereference($t73);

    // trace_local[nft_description]($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:202:9+63
    assume {:print "$track_local(104,16,9):", $t9} $t9 == $t9;

    // $t75 := copy($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:204:42+8
    assume {:print "$at(2,8701,8709)"} true;
    $t75 := $t8;

    // $t76 := copy($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:204:52+15
    $t76 := $t9;

    // $t77 := retro_nft_generator_da::create_token_uri($t75, $t76, $t58) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:204:25+53
    call $t77 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_create_token_uri($t75, $t76, $t58);
    if ($abort_flag) {
        assume {:print "$at(2,8684,8737)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[$t60]($t77) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:204:25+53
    assume {:print "$track_local(104,16,10):", $t77} $t77 == $t77;

    // $t78 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.resource_cap($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:207:70+29
    assume {:print "$at(2,8875,8904)"} true;
    $t78 := $Dereference($t20)->$resource_cap;

    // assume Identical($t79, select account::SignerCapability.account<0x1::account::SignerCapability>($t78)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:670:9+30
    assume {:print "$at(97,33278,33308)"} true;
    assume ($t79 == $t78->$account);

    // $t80 := account::create_signer_with_capability($t78) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:207:31+69
    assume {:print "$at(2,8836,8905)"} true;
    call $t80 := $1_account_create_signer_with_capability($t78);
    if ($abort_flag) {
        assume {:print "$at(2,8836,8905)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[resource_signer]($t80) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:207:31+69
    assume {:print "$track_local(104,16,11):", $t80} $t80 == $t80;

    // $t81 := [82, 101, 116, 114, 111, 32, 56, 48, 115, 32, 78, 70, 84, 32, 67, 111, 108, 108, 101, 99, 116, 105, 111, 110, 32, 50, 48, 50, 53, 45, 48, 49, 45, 48, 56, 45, 118, 50, 45, 117, 110, 105, 113, 117, 101] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:210:26+15
    assume {:print "$at(2,9025,9040)"} true;
    $t81 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(82, 101, 116, 114), MakeVec4(111, 32, 56, 48)), MakeVec4(115, 32, 78, 70)), MakeVec4(84, 32, 67, 111)), MakeVec4(108, 108, 101, 99)), MakeVec4(116, 105, 111, 110)), MakeVec4(32, 50, 48, 50)), MakeVec4(53, 45, 48, 49)), MakeVec4(45, 48, 56, 45)), MakeVec4(118, 50, 45, 117)), MakeVec4(110, 105, 113, 117)), MakeVec1(101));
    assume $IsValid'vec'u8''($t81);

    // $t82 := string::utf8($t81) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:210:13+29
    call $t82 := $1_string_utf8($t81);
    if ($abort_flag) {
        assume {:print "$at(2,9012,9041)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t83 := copy($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:211:13+15
    assume {:print "$at(2,9055,9070)"} true;
    $t83 := $t9;

    // $t84 := copy($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:212:13+8
    assume {:print "$at(2,9084,9092)"} true;
    $t84 := $t8;

    // $t85 := opaque begin: option::none<0x4::royalty::Royalty>() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:213:13+14
    assume {:print "$at(2,9106,9120)"} true;

    // assume And(WellFormed($t85), Le(Len<0x4::royalty::Royalty>(select option::Option.vec($t85)), 1)) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:213:13+14
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($t85) && (LenVec($t85->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x4::royalty::Royalty>>($t85, option::spec_none<0x4::royalty::Royalty>()) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:213:13+14
    assume $IsEqual'$1_option_Option'$4_royalty_Royalty''($t85, $1_option_spec_none'$4_royalty_Royalty'());

    // $t85 := opaque end: option::none<0x4::royalty::Royalty>() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:213:13+14

    // $t86 := token::create_named_token($t80, $t82, $t83, $t84, $t85, $t77) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:208:37+210
    assume {:print "$at(2,8943,9153)"} true;
    call $t86 := $4_token_create_named_token($t80, $t82, $t83, $t84, $t85, $t77);
    if ($abort_flag) {
        assume {:print "$at(2,8943,9153)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[token_constructor_ref]($t86) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:208:37+210
    assume {:print "$track_local(104,16,12):", $t86} $t86 == $t86;

    // $t87 := object::generate_transfer_ref($t86) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:218:28+53
    assume {:print "$at(2,9245,9298)"} true;
    call $t87 := $1_object_generate_transfer_ref($t86);
    if ($abort_flag) {
        assume {:print "$at(2,9245,9298)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[transfer_ref]($t87) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:218:28+53
    assume {:print "$track_local(104,16,13):", $t87} $t87 == $t87;

    // assume Identical($t88, select object::ObjectCore.owner<0x1::object::ObjectCore>(global<0x1::object::ObjectCore>(select object::TransferRef.self<0x1::object::TransferRef>($t87)))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:420:9+47
    assume {:print "$at(186,16994,17041)"} true;
    assume ($t88 == $ResourceValue($1_object_ObjectCore_$memory, $t87->$self)->$owner);

    // $t89 := object::generate_linear_transfer_ref($t87) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:219:35+51
    assume {:print "$at(2,9334,9385)"} true;
    call $t89 := $1_object_generate_linear_transfer_ref($t87);
    if ($abort_flag) {
        assume {:print "$at(2,9334,9385)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // assume Identical($t90, global<0x1::object::ObjectCore>(select object::LinearTransferRef.self<0x1::object::LinearTransferRef>($t89))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:429:9+42
    assume {:print "$at(186,17279,17321)"} true;
    assume ($t90 == $ResourceValue($1_object_ObjectCore_$memory, $t89->$self));

    // object::transfer_with_ref($t89, $t24) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:220:9+57
    assume {:print "$at(2,9395,9452)"} true;
    call $1_object_transfer_with_ref($t89, $t24);
    if ($abort_flag) {
        assume {:print "$at(2,9395,9452)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t91 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.total_minted($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:223:40+28
    assume {:print "$at(2,9526,9554)"} true;
    $t91 := $Dereference($t20)->$total_minted;

    // $t92 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:223:71+1
    $t92 := 1;
    assume $IsValid'u64'($t92);

    // $t93 := +($t91, $t92) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:223:40+32
    call $t93 := $AddU64($t91, $t92);
    if ($abort_flag) {
        assume {:print "$at(2,9526,9558)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t94 := borrow_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.total_minted($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:223:9+28
    $t94 := $ChildMutation($t20, 1, $Dereference($t20)->$total_minted);

    // write_ref($t94, $t93) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:223:9+63
    $t94 := $UpdateMutation($t94, $t93);

    // write_back[Reference($t20).total_minted (u64)]($t94) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:223:9+63
    $t20 := $UpdateMutation($t20, $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'_total_minted($Dereference($t20), $Dereference($t94)));

    // write_back[0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection@]($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:223:9+63
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory := $ResourceUpdate($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $GlobalLocationAddress($t20),
        $Dereference($t20));

    // $t95 := exists<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>($t24) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:226:14+27
    assume {:print "$at(2,9629,9656)"} true;
    $t95 := $ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $t24);

    // if ($t95) goto L4 else goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:226:13+28
    if ($t95) { goto L4; } else { goto L5; }

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:227:21+4
    assume {:print "$at(2,9680,9684)"} true;
L5:

    // $t96 := vector::empty<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::TokenData>() on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:228:23+26
    assume {:print "$at(2,9719,9745)"} true;
    call $t96 := $1_vector_empty'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'();
    if ($abort_flag) {
        assume {:print "$at(2,9719,9745)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t97 := pack 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs($t96) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:227:27+74
    assume {:print "$at(2,9686,9760)"} true;
    $t97 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs($t96);

    // move_to<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>($t97, $t0) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:227:13+89
    if ($ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory := $ResourceUpdate($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $t0->$addr, $t97);
    }
    if ($abort_flag) {
        assume {:print "$at(2,9672,9761)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:232:25+38
    assume {:print "$at(2,9799,9837)"} true;
L6:

    // $t98 := borrow_global<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>($t24) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:232:25+38
    assume {:print "$at(2,9799,9837)"} true;
    if (!$ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $t24)) {
        call $ExecFailureAbort();
    } else {
        $t98 := $Mutation($Global($t24), EmptyVec(), $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $t24));
    }
    if ($abort_flag) {
        assume {:print "$at(2,9799,9837)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // trace_local[user_nfts]($t98) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:232:25+38
    $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs' := $Dereference($t98);
    assume {:print "$track_local(104,16,14):", $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'} $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs' == $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs';

    // $t99 := object::address_from_constructor_ref($t86) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:233:34+60
    assume {:print "$at(2,9872,9932)"} true;
    call $t99 := $1_object_address_from_constructor_ref($t86);
    if ($abort_flag) {
        assume {:print "$at(2,9872,9932)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // $t100 := borrow_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>.nfts($t98) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:234:27+19
    assume {:print "$at(2,9960,9979)"} true;
    $t100 := $ChildMutation($t98, 0, $Dereference($t98)->$nfts);

    // trace_local[$t111]($t100) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:235:13+18
    assume {:print "$at(2,10005,10023)"} true;
    $temp_0'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'' := $Dereference($t100);
    assume {:print "$track_local(104,16,15):", $temp_0'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData''} $temp_0'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'' == $temp_0'vec'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'';

    // $t101 := move($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:236:19+8
    assume {:print "$at(2,10043,10051)"} true;
    $t101 := $t8;

    // $t102 := move($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:237:26+15
    assume {:print "$at(2,10078,10093)"} true;
    $t102 := $t9;

    // $t103 := pack 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::TokenData($t99, $t101, $t102, $t77, $t58) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:234:48+173
    assume {:print "$at(2,9981,10154)"} true;
    $t103 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData($t99, $t101, $t102, $t77, $t58);

    // trace_local[$t112]($t103) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:234:9+213
    assume {:print "$track_local(104,16,17):", $t103} $t103 == $t103;

    // vector::push_back<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::TokenData>($t100, $t103) on_abort goto L9 with $t19 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:234:9+213
    call $t100 := $1_vector_push_back'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'($t100, $t103);
    if ($abort_flag) {
        assume {:print "$at(2,9942,10155)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(104,16):", $t19} $t19 == $t19;
        goto L9;
    }

    // write_back[Reference($t98).nfts (vector<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::TokenData>)]($t100) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:234:9+213
    $t98 := $UpdateMutation($t98, $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'_nfts($Dereference($t98), $Dereference($t100)));

    // write_back[0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs@]($t98) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:234:9+213
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory := $ResourceUpdate($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $GlobalLocationAddress($t98),
        $Dereference($t98));

    // goto L8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:167:86+3296
    assume {:print "$at(2,6866,10162)"} true;
    goto L8;

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:226:9+148
    assume {:print "$at(2,9624,9772)"} true;
L4:

    // goto L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:226:9+148
    assume {:print "$at(2,9624,9772)"} true;
    goto L6;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:188:13+8
    assume {:print "$at(2,7868,7876)"} true;
L2:

    // $t104 := 12345 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:188:13+8
    assume {:print "$at(2,7868,7876)"} true;
    $t104 := 12345;
    assume $IsValid'u64'($t104);

    // $t6 := $t104 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:188:13+8
    $t6 := $t104;

    // trace_local[$t18]($t104) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:188:13+8
    assume {:print "$track_local(104,16,6):", $t104} $t104 == $t104;

    // goto L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:188:13+8
    goto L7;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:9+6
    assume {:print "$at(2,7049,7055)"} true;
L0:

    // drop($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:9+6
    assume {:print "$at(2,7049,7055)"} true;

    // $t105 := 4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:60+19
    $t105 := 4;
    assume $IsValid'u64'($t105);

    // trace_abort($t105) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:9+6
    assume {:print "$at(2,7049,7055)"} true;
    assume {:print "$track_abort(104,16):", $t105} $t105 == $t105;

    // $t19 := move($t105) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:9+6
    $t19 := $t105;

    // goto L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:172:9+6
    goto L9;

    // label L8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:241:5+1
    assume {:print "$at(2,10161,10162)"} true;
L8:

    // return () at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:241:5+1
    assume {:print "$at(2,10161,10162)"} true;
    return;

    // label L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:241:5+1
L9:

    // abort($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:241:5+1
    assume {:print "$at(2,10161,10162)"} true;
    $abort_code := $t19;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::mint_random_nft_internal [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+180
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_mint_random_nft_internal$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t0: $signer;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume {:print "$at(2,10234,10235)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: 0x1::features::Features: ResourceDomain<0x1::features::Features>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: 0x1::chain_status::GenesisEndMarker: ResourceDomain<0x1::chain_status::GenesisEndMarker>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: 0x1::timestamp::CurrentTimeMicroseconds: ResourceDomain<0x1::timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: 0x1::object::ObjectCore: ResourceDomain<0x1::object::ObjectCore>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: 0x1::object::TombStone: ResourceDomain<0x1::object::TombStone>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_TombStone_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_TombStone_$memory, $a_0);
    ($IsValid'$1_object_TombStone'($rsc))));

    // assume forall $rsc: 0x1::object::Untransferable: ResourceDomain<0x1::object::Untransferable>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::reconfiguration::Configuration: ResourceDomain<0x1::reconfiguration::Configuration>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: 0x4::royalty::Royalty: ResourceDomain<0x4::royalty::Royalty>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: 0x4::collection::ConcurrentSupply: ResourceDomain<0x4::collection::ConcurrentSupply>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$4_collection_ConcurrentSupply'($rsc))));

    // assume forall $rsc: 0x4::collection::Collection: ResourceDomain<0x4::collection::Collection>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_Collection_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_Collection_$memory, $a_0);
    ($IsValid'$4_collection_Collection'($rsc))));

    // assume forall $rsc: 0x4::collection::FixedSupply: ResourceDomain<0x4::collection::FixedSupply>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_FixedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_FixedSupply_$memory, $a_0);
    ($IsValid'$4_collection_FixedSupply'($rsc))));

    // assume forall $rsc: 0x4::collection::UnlimitedSupply: ResourceDomain<0x4::collection::UnlimitedSupply>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0);
    ($IsValid'$4_collection_UnlimitedSupply'($rsc))));

    // assume forall $rsc: 0x4::token::Token: ResourceDomain<0x4::token::Token>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_token_Token_$memory, $a_0)}(var $rsc := $ResourceValue($4_token_Token_$memory, $a_0);
    ($IsValid'$4_token_Token'($rsc))));

    // assume forall $rsc: 0x4::token::TokenIdentifiers: ResourceDomain<0x4::token::TokenIdentifiers>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_token_TokenIdentifiers_$memory, $a_0)}(var $rsc := $ResourceValue($4_token_TokenIdentifiers_$memory, $a_0);
    ($IsValid'$4_token_TokenIdentifiers'($rsc))));

    // assume forall $rsc: 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection: ResourceDomain<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume (forall $a_0: int :: {$ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0)}(var $rsc := $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0);
    ($IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'($rsc))));

    // assume forall $rsc: 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs: ResourceDomain<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume (forall $a_0: int :: {$ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $a_0)}(var $rsc := $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $a_0);
    ($IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<0x1::timestamp::CurrentTimeMicroseconds>(0x1)) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+180
    // global invariant at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.spec.move:36:9+107
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+180
    // global invariant at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/reconfiguration.spec.move:51:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[user]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:244:5+1
    assume {:print "$track_local(104,17,0):", $t0} $t0 == $t0;

    // retro_nft_generator_da::mint_random_nft($t0) on_abort goto L2 with $t1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:246:9+21
    assume {:print "$at(2,10386,10407)"} true;
    call $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_mint_random_nft($t0);
    if ($abort_flag) {
        assume {:print "$at(2,10386,10407)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(104,17):", $t1} $t1 == $t1;
        goto L2;
    }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:247:5+1
    assume {:print "$at(2,10413,10414)"} true;
L1:

    // return () at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:247:5+1
    assume {:print "$at(2,10413,10414)"} true;
    return;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:247:5+1
L2:

    // abort($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:247:5+1
    assume {:print "$at(2,10413,10414)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::mint_truly_random_nft [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+3535
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_mint_truly_random_nft$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: $Mutation ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection);
    var $t2: int;
    var $t3: int;
    var $t4: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $t5: $1_string_String;
    var $t6: $1_string_String;
    var $t7: $1_string_String;
    var $t8: $signer;
    var $t9: $1_object_ConstructorRef;
    var $t10: $1_object_TransferRef;
    var $t11: int;
    var $t12: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData;
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection);
    var $t16: int;
    var $t17: int;
    var $t18: bool;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $t24: Vec (int);
    var $t25: $Mutation ($1_string_String);
    var $t26: $1_string_String;
    var $t27: Vec (int);
    var $t28: $Mutation ($1_string_String);
    var $t29: $1_string_String;
    var $t30: $Mutation ($1_string_String);
    var $t31: Vec (int);
    var $t32: $1_string_String;
    var $t33: $Mutation ($1_string_String);
    var $t34: $1_string_String;
    var $t35: $Mutation ($1_string_String);
    var $t36: Vec (int);
    var $t37: $1_string_String;
    var $t38: $Mutation ($1_string_String);
    var $t39: $1_string_String;
    var $t40: $1_string_String;
    var $t41: $1_string_String;
    var $t42: $1_string_String;
    var $t43: $1_account_SignerCapability;
    var $t44: int;
    var $t45: $signer;
    var $t46: Vec (int);
    var $t47: $1_string_String;
    var $t48: $1_string_String;
    var $t49: $1_string_String;
    var $t50: $1_option_Option'$4_royalty_Royalty';
    var $t51: $1_object_ConstructorRef;
    var $t52: $1_object_TransferRef;
    var $t53: int;
    var $t54: $1_object_LinearTransferRef;
    var $t55: $1_object_ObjectCore;
    var $t56: int;
    var $t57: $1_object_Object'$4_collection_Collection';
    var $t58: int;
    var $t59: $1_string_String;
    var $t60: $1_string_String;
    var $t61: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData;
    var $t62: bool;
    var $t63: Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData);
    var $t64: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs;
    var $t65: $Mutation ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs);
    var $t66: $Mutation (Vec ($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData));
    var $t67: int;
    var $t68: int;
    var $t69: int;
    var $t70: $Mutation (int);
    var $t71: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent;
    var $t72: int;
    var $t0: $signer;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume {:print "$at(2,10556,10557)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: 0x1::features::Features: ResourceDomain<0x1::features::Features>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: 0x1::chain_status::GenesisEndMarker: ResourceDomain<0x1::chain_status::GenesisEndMarker>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: 0x1::object::ObjectCore: ResourceDomain<0x1::object::ObjectCore>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: 0x1::object::TombStone: ResourceDomain<0x1::object::TombStone>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_TombStone_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_TombStone_$memory, $a_0);
    ($IsValid'$1_object_TombStone'($rsc))));

    // assume forall $rsc: 0x1::object::Untransferable: ResourceDomain<0x1::object::Untransferable>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::randomness::PerBlockRandomness: ResourceDomain<0x1::randomness::PerBlockRandomness>(): And(WellFormed($rsc), Le(Len<vector<u8>>(select option::Option.vec(select randomness::PerBlockRandomness.seed($rsc))), 1)) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_randomness_PerBlockRandomness_$memory, $a_0)}(var $rsc := $ResourceValue($1_randomness_PerBlockRandomness_$memory, $a_0);
    (($IsValid'$1_randomness_PerBlockRandomness'($rsc) && (LenVec($rsc->$seed->$vec) <= 1)))));

    // assume forall $rsc: 0x4::royalty::Royalty: ResourceDomain<0x4::royalty::Royalty>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: 0x4::collection::ConcurrentSupply: ResourceDomain<0x4::collection::ConcurrentSupply>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$4_collection_ConcurrentSupply'($rsc))));

    // assume forall $rsc: 0x4::collection::Collection: ResourceDomain<0x4::collection::Collection>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_Collection_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_Collection_$memory, $a_0);
    ($IsValid'$4_collection_Collection'($rsc))));

    // assume forall $rsc: 0x4::collection::FixedSupply: ResourceDomain<0x4::collection::FixedSupply>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_FixedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_FixedSupply_$memory, $a_0);
    ($IsValid'$4_collection_FixedSupply'($rsc))));

    // assume forall $rsc: 0x4::collection::UnlimitedSupply: ResourceDomain<0x4::collection::UnlimitedSupply>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0);
    ($IsValid'$4_collection_UnlimitedSupply'($rsc))));

    // assume forall $rsc: 0x4::token::Token: ResourceDomain<0x4::token::Token>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_token_Token_$memory, $a_0)}(var $rsc := $ResourceValue($4_token_Token_$memory, $a_0);
    ($IsValid'$4_token_Token'($rsc))));

    // assume forall $rsc: 0x4::token::TokenIdentifiers: ResourceDomain<0x4::token::TokenIdentifiers>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_token_TokenIdentifiers_$memory, $a_0)}(var $rsc := $ResourceValue($4_token_TokenIdentifiers_$memory, $a_0);
    ($IsValid'$4_token_TokenIdentifiers'($rsc))));

    // assume forall $rsc: 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection: ResourceDomain<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume (forall $a_0: int :: {$ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0)}(var $rsc := $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $a_0);
    ($IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'($rsc))));

    // assume forall $rsc: 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs: ResourceDomain<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>(): WellFormed($rsc) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume (forall $a_0: int :: {$ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $a_0)}(var $rsc := $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $a_0);
    ($IsValid'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<0x1::randomness::PerBlockRandomness>(0x1)) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+3535
    // global invariant at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/randomness.spec.move:6:9+102
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_randomness_PerBlockRandomness_$memory, 1));

    // trace_local[user]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:5+1
    assume {:print "$track_local(104,18,0):", $t0} $t0 == $t0;

    // $t13 := retro_nft_generator_da::get_shared_collection_address() on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:253:27+31
    assume {:print "$at(2,10664,10695)"} true;
    call $t13 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_get_shared_collection_address();
    if ($abort_flag) {
        assume {:print "$at(2,10664,10695)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // $t15 := borrow_global<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>($t13) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:254:31+45
    assume {:print "$at(2,10727,10772)"} true;
    if (!$ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $Mutation($Global($t13), EmptyVec(), $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $t13));
    }
    if ($abort_flag) {
        assume {:print "$at(2,10727,10772)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // trace_local[collection_data]($t15) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:254:31+45
    $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection' := $Dereference($t15);
    assume {:print "$track_local(104,18,1):", $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'} $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection' == $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection';

    // $t16 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.total_minted($t15) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:257:17+28
    assume {:print "$at(2,10827,10855)"} true;
    $t16 := $Dereference($t15)->$total_minted;

    // $t17 := 10000 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:257:48+10
    $t17 := 10000;
    assume $IsValid'u64'($t17);

    // $t18 := <($t16, $t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:257:17+41
    call $t18 := $Lt($t16, $t17);

    // if ($t18) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:257:9+6
    if ($t18) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:260:25+24
    assume {:print "$at(2,10971,10995)"} true;
L1:

    // $t19 := signer::address_of($t0) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:260:25+24
    assume {:print "$at(2,10971,10995)"} true;
    call $t19 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,10971,10995)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // trace_local[shared_addr]($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:260:25+24
    assume {:print "$track_local(104,18,2):", $t19} $t19 == $t19;

    // $t20 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.total_minted($t15) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:262:24+28
    assume {:print "$at(2,11060,11088)"} true;
    $t20 := $Dereference($t15)->$total_minted;

    // $t21 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:262:55+1
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t20, $t21) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:262:24+32
    call $t22 := $AddU64($t20, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,11060,11092)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // trace_local[$t4]($t22) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:262:24+32
    assume {:print "$track_local(104,18,3):", $t22} $t22 == $t22;

    // $t23 := retro_nft_generator_da::generate_truly_random_metadata($t22) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:265:24+40
    assume {:print "$at(2,11200,11240)"} true;
    call $t23 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_generate_truly_random_metadata($t22);
    if ($abort_flag) {
        assume {:print "$at(2,11200,11240)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // trace_local[metadata]($t23) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:265:24+40
    assume {:print "$track_local(104,18,4):", $t23} $t23 == $t23;

    // $t24 := [82, 101, 116, 114, 111, 32, 78, 70, 84, 32, 35] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:268:37+14
    assume {:print "$at(2,11330,11344)"} true;
    $t24 := ConcatVec(ConcatVec(MakeVec4(82, 101, 116, 114), MakeVec4(111, 32, 78, 70)), MakeVec3(84, 32, 35));
    assume $IsValid'vec'u8''($t24);

    // $t5 := string::utf8($t24) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:268:24+28
    call $t5 := $1_string_utf8($t24);
    if ($abort_flag) {
        assume {:print "$at(2,11317,11345)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // trace_local[nft_name]($t5) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:268:24+28
    assume {:print "$track_local(104,18,5):", $t5} $t5 == $t5;

    // $t25 := borrow_local($t5) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:269:24+13
    assume {:print "$at(2,11370,11383)"} true;
    $t25 := $Mutation($Local(5), EmptyVec(), $t5);

    // $t26 := retro_nft_generator_da::to_string($t22) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:269:39+19
    call $t26 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_to_string($t22);
    if ($abort_flag) {
        assume {:print "$at(2,11385,11404)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // string::append($t25, $t26) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:269:9+50
    call $t25 := $1_string_append($t25, $t26);
    if ($abort_flag) {
        assume {:print "$at(2,11355,11405)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // write_back[LocalRoot($t5)@]($t25) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:269:9+50
    $t5 := $Dereference($t25);

    // trace_local[nft_name]($t5) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:269:9+50
    assume {:print "$track_local(104,18,5):", $t5} $t5 == $t5;

    // $t27 := [65, 32, 117, 110, 105, 113, 117, 101, 32, 114, 101, 116, 114, 111, 32, 56, 48, 115, 32, 78, 70, 84, 32, 119, 105, 116, 104, 32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:271:44+31
    assume {:print "$at(2,11459,11490)"} true;
    $t27 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(65, 32, 117, 110), MakeVec4(105, 113, 117, 101)), MakeVec4(32, 114, 101, 116)), MakeVec4(114, 111, 32, 56)), MakeVec4(48, 115, 32, 78)), MakeVec4(70, 84, 32, 119)), MakeVec4(105, 116, 104, 32));
    assume $IsValid'vec'u8''($t27);

    // $t6 := string::utf8($t27) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:271:31+45
    call $t6 := $1_string_utf8($t27);
    if ($abort_flag) {
        assume {:print "$at(2,11446,11491)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // trace_local[nft_description]($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:271:31+45
    assume {:print "$track_local(104,18,6):", $t6} $t6 == $t6;

    // $t28 := borrow_local($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:272:24+20
    assume {:print "$at(2,11516,11536)"} true;
    $t28 := $Mutation($Local(6), EmptyVec(), $t6);

    // $t29 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>.background_color($t23) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:272:46+25
    $t29 := $t23->$background_color;

    // string::append($t28, $t29) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:272:9+63
    call $t28 := $1_string_append($t28, $t29);
    if ($abort_flag) {
        assume {:print "$at(2,11501,11564)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // write_back[LocalRoot($t6)@]($t28) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:272:9+63
    $t6 := $Dereference($t28);

    // trace_local[nft_description]($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:272:9+63
    assume {:print "$track_local(104,18,6):", $t6} $t6 == $t6;

    // $t30 := borrow_local($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:273:24+20
    assume {:print "$at(2,11589,11609)"} true;
    $t30 := $Mutation($Local(6), EmptyVec(), $t6);

    // $t31 := [32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 44, 32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:273:59+16
    $t31 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(32, 98, 97, 99), MakeVec4(107, 103, 114, 111)), MakeVec4(117, 110, 100, 44)), MakeVec1(32));
    assume $IsValid'vec'u8''($t31);

    // $t32 := string::utf8($t31) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:273:46+30
    call $t32 := $1_string_utf8($t31);
    if ($abort_flag) {
        assume {:print "$at(2,11611,11641)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // string::append($t30, $t32) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:273:9+68
    call $t30 := $1_string_append($t30, $t32);
    if ($abort_flag) {
        assume {:print "$at(2,11574,11642)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // write_back[LocalRoot($t6)@]($t30) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:273:9+68
    $t6 := $Dereference($t30);

    // trace_local[nft_description]($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:273:9+68
    assume {:print "$track_local(104,18,6):", $t6} $t6 == $t6;

    // $t33 := borrow_local($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:274:24+20
    assume {:print "$at(2,11667,11687)"} true;
    $t33 := $Mutation($Local(6), EmptyVec(), $t6);

    // $t34 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>.shape($t23) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:274:46+14
    $t34 := $t23->$shape;

    // string::append($t33, $t34) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:274:9+52
    call $t33 := $1_string_append($t33, $t34);
    if ($abort_flag) {
        assume {:print "$at(2,11652,11704)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // write_back[LocalRoot($t6)@]($t33) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:274:9+52
    $t6 := $Dereference($t33);

    // trace_local[nft_description]($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:274:9+52
    assume {:print "$track_local(104,18,6):", $t6} $t6 == $t6;

    // $t35 := borrow_local($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:275:24+20
    assume {:print "$at(2,11729,11749)"} true;
    $t35 := $Mutation($Local(6), EmptyVec(), $t6);

    // $t36 := [32, 115, 104, 97, 112, 101, 44, 32, 97, 110, 100, 32, 119, 111, 114, 100, 115, 58, 32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:275:59+22
    $t36 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(32, 115, 104, 97), MakeVec4(112, 101, 44, 32)), MakeVec4(97, 110, 100, 32)), MakeVec4(119, 111, 114, 100)), MakeVec3(115, 58, 32));
    assume $IsValid'vec'u8''($t36);

    // $t37 := string::utf8($t36) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:275:46+36
    call $t37 := $1_string_utf8($t36);
    if ($abort_flag) {
        assume {:print "$at(2,11751,11787)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // string::append($t35, $t37) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:275:9+74
    call $t35 := $1_string_append($t35, $t37);
    if ($abort_flag) {
        assume {:print "$at(2,11714,11788)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // write_back[LocalRoot($t6)@]($t35) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:275:9+74
    $t6 := $Dereference($t35);

    // trace_local[nft_description]($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:275:9+74
    assume {:print "$track_local(104,18,6):", $t6} $t6 == $t6;

    // $t38 := borrow_local($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:276:24+20
    assume {:print "$at(2,11813,11833)"} true;
    $t38 := $Mutation($Local(6), EmptyVec(), $t6);

    // $t39 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMetadata>.word_combination($t23) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:276:46+25
    $t39 := $t23->$word_combination;

    // string::append($t38, $t39) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:276:9+63
    call $t38 := $1_string_append($t38, $t39);
    if ($abort_flag) {
        assume {:print "$at(2,11798,11861)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // write_back[LocalRoot($t6)@]($t38) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:276:9+63
    $t6 := $Dereference($t38);

    // trace_local[nft_description]($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:276:9+63
    assume {:print "$track_local(104,18,6):", $t6} $t6 == $t6;

    // $t40 := copy($t5) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:279:42+8
    assume {:print "$at(2,11955,11963)"} true;
    $t40 := $t5;

    // $t41 := copy($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:279:52+15
    $t41 := $t6;

    // $t42 := retro_nft_generator_da::create_token_uri($t40, $t41, $t23) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:279:25+53
    call $t42 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_create_token_uri($t40, $t41, $t23);
    if ($abort_flag) {
        assume {:print "$at(2,11938,11991)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // trace_local[$t17]($t42) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:279:25+53
    assume {:print "$track_local(104,18,7):", $t42} $t42 == $t42;

    // $t43 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.resource_cap($t15) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:285:70+29
    assume {:print "$at(2,12290,12319)"} true;
    $t43 := $Dereference($t15)->$resource_cap;

    // assume Identical($t44, select account::SignerCapability.account<0x1::account::SignerCapability>($t43)) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:670:9+30
    assume {:print "$at(97,33278,33308)"} true;
    assume ($t44 == $t43->$account);

    // $t45 := account::create_signer_with_capability($t43) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:285:31+69
    assume {:print "$at(2,12251,12320)"} true;
    call $t45 := $1_account_create_signer_with_capability($t43);
    if ($abort_flag) {
        assume {:print "$at(2,12251,12320)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // trace_local[resource_signer]($t45) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:285:31+69
    assume {:print "$track_local(104,18,8):", $t45} $t45 == $t45;

    // $t46 := [82, 101, 116, 114, 111, 32, 56, 48, 115, 32, 78, 70, 84, 32, 67, 111, 108, 108, 101, 99, 116, 105, 111, 110, 32, 50, 48, 50, 53, 45, 48, 49, 45, 48, 56, 45, 118, 50, 45, 117, 110, 105, 113, 117, 101] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:289:26+15
    assume {:print "$at(2,12480,12495)"} true;
    $t46 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(82, 101, 116, 114), MakeVec4(111, 32, 56, 48)), MakeVec4(115, 32, 78, 70)), MakeVec4(84, 32, 67, 111)), MakeVec4(108, 108, 101, 99)), MakeVec4(116, 105, 111, 110)), MakeVec4(32, 50, 48, 50)), MakeVec4(53, 45, 48, 49)), MakeVec4(45, 48, 56, 45)), MakeVec4(118, 50, 45, 117)), MakeVec4(110, 105, 113, 117)), MakeVec1(101));
    assume $IsValid'vec'u8''($t46);

    // $t47 := string::utf8($t46) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:289:13+29
    call $t47 := $1_string_utf8($t46);
    if ($abort_flag) {
        assume {:print "$at(2,12467,12496)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // $t48 := copy($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:290:13+15
    assume {:print "$at(2,12510,12525)"} true;
    $t48 := $t6;

    // $t49 := copy($t5) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:291:13+8
    assume {:print "$at(2,12539,12547)"} true;
    $t49 := $t5;

    // $t50 := opaque begin: option::none<0x4::royalty::Royalty>() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:292:13+14
    assume {:print "$at(2,12561,12575)"} true;

    // assume And(WellFormed($t50), Le(Len<0x4::royalty::Royalty>(select option::Option.vec($t50)), 1)) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:292:13+14
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($t50) && (LenVec($t50->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x4::royalty::Royalty>>($t50, option::spec_none<0x4::royalty::Royalty>()) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:292:13+14
    assume $IsEqual'$1_option_Option'$4_royalty_Royalty''($t50, $1_option_spec_none'$4_royalty_Royalty'());

    // $t50 := opaque end: option::none<0x4::royalty::Royalty>() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:292:13+14

    // $t51 := token::create_named_token($t45, $t47, $t48, $t49, $t50, $t42) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:287:37+241
    assume {:print "$at(2,12367,12608)"} true;
    call $t51 := $4_token_create_named_token($t45, $t47, $t48, $t49, $t50, $t42);
    if ($abort_flag) {
        assume {:print "$at(2,12367,12608)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // trace_local[token_constructor_ref]($t51) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:287:37+241
    assume {:print "$track_local(104,18,9):", $t51} $t51 == $t51;

    // $t52 := object::generate_transfer_ref($t51) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:297:28+53
    assume {:print "$at(2,12728,12781)"} true;
    call $t52 := $1_object_generate_transfer_ref($t51);
    if ($abort_flag) {
        assume {:print "$at(2,12728,12781)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // trace_local[transfer_ref]($t52) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:297:28+53
    assume {:print "$track_local(104,18,10):", $t52} $t52 == $t52;

    // assume Identical($t53, select object::ObjectCore.owner<0x1::object::ObjectCore>(global<0x1::object::ObjectCore>(select object::TransferRef.self<0x1::object::TransferRef>($t52)))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:420:9+47
    assume {:print "$at(186,16994,17041)"} true;
    assume ($t53 == $ResourceValue($1_object_ObjectCore_$memory, $t52->$self)->$owner);

    // $t54 := object::generate_linear_transfer_ref($t52) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:298:35+51
    assume {:print "$at(2,12817,12868)"} true;
    call $t54 := $1_object_generate_linear_transfer_ref($t52);
    if ($abort_flag) {
        assume {:print "$at(2,12817,12868)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // assume Identical($t55, global<0x1::object::ObjectCore>(select object::LinearTransferRef.self<0x1::object::LinearTransferRef>($t54))) at /Users/willjaw/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:429:9+42
    assume {:print "$at(186,17279,17321)"} true;
    assume ($t55 == $ResourceValue($1_object_ObjectCore_$memory, $t54->$self));

    // object::transfer_with_ref($t54, $t19) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:299:9+57
    assume {:print "$at(2,12878,12935)"} true;
    call $1_object_transfer_with_ref($t54, $t19);
    if ($abort_flag) {
        assume {:print "$at(2,12878,12935)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // $t56 := object::address_from_constructor_ref($t51) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:301:29+60
    assume {:print "$at(2,12974,13034)"} true;
    call $t56 := $1_object_address_from_constructor_ref($t51);
    if ($abort_flag) {
        assume {:print "$at(2,12974,13034)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // trace_local[token_address]($t56) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:301:29+60
    assume {:print "$track_local(104,18,11):", $t56} $t56 == $t56;

    // $t57 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.collection($t15) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:305:56+27
    assume {:print "$at(2,13182,13209)"} true;
    $t57 := $Dereference($t15)->$collection;

    // $t58 := object::object_address<0x4::collection::Collection>($t57) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:305:33+51
    call $t58 := $1_object_object_address'$4_collection_Collection'($t57);
    if ($abort_flag) {
        assume {:print "$at(2,13159,13210)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // $t59 := move($t5) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:306:19+8
    assume {:print "$at(2,13230,13238)"} true;
    $t59 := $t5;

    // $t60 := move($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:307:26+15
    assume {:print "$at(2,13265,13280)"} true;
    $t60 := $t6;

    // $t61 := pack 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::TokenData($t58, $t59, $t60, $t42, $t23) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:304:26+236
    assume {:print "$at(2,13115,13351)"} true;
    $t61 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData($t58, $t59, $t60, $t42, $t23);

    // trace_local[token_data]($t61) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:304:26+236
    assume {:print "$track_local(104,18,12):", $t61} $t61 == $t61;

    // $t62 := exists<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:313:14+27
    assume {:print "$at(2,13446,13473)"} true;
    $t62 := $ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $t19);

    // if ($t62) goto L2 else goto L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:313:13+28
    if ($t62) { goto L2; } else { goto L3; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:315:21+4
    assume {:print "$at(2,13563,13567)"} true;
L3:

    // $t63 := vector::empty<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::TokenData>() on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:316:23+26
    assume {:print "$at(2,13602,13628)"} true;
    call $t63 := $1_vector_empty'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'();
    if ($abort_flag) {
        assume {:print "$at(2,13602,13628)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // $t64 := pack 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs($t63) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:315:27+74
    assume {:print "$at(2,13569,13643)"} true;
    $t64 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs($t63);

    // move_to<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>($t64, $t0) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:315:13+89
    if ($ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory := $ResourceUpdate($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $t0->$addr, $t64);
    }
    if ($abort_flag) {
        assume {:print "$at(2,13555,13644)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:321:25+38
    assume {:print "$at(2,13730,13768)"} true;
L4:

    // $t65 := borrow_global<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>($t19) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:321:25+38
    assume {:print "$at(2,13730,13768)"} true;
    if (!$ResourceExists($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $t19)) {
        call $ExecFailureAbort();
    } else {
        $t65 := $Mutation($Global($t19), EmptyVec(), $ResourceValue($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $t19));
    }
    if ($abort_flag) {
        assume {:print "$at(2,13730,13768)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // $t66 := borrow_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs>.nfts($t65) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:322:27+19
    assume {:print "$at(2,13796,13815)"} true;
    $t66 := $ChildMutation($t65, 0, $Dereference($t65)->$nfts);

    // vector::push_back<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::TokenData>($t66, $t61) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:322:9+50
    call $t66 := $1_vector_push_back'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_TokenData'($t66, $t61);
    if ($abort_flag) {
        assume {:print "$at(2,13778,13828)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // write_back[Reference($t65).nfts (vector<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::TokenData>)]($t66) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:322:9+50
    $t65 := $UpdateMutation($t65, $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs'_nfts($Dereference($t65), $Dereference($t66)));

    // write_back[0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::UserNFTs@]($t65) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:322:9+50
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory := $ResourceUpdate($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_UserNFTs_$memory, $GlobalLocationAddress($t65),
        $Dereference($t65));

    // $t67 := get_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.total_minted($t15) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:325:40+28
    assume {:print "$at(2,13901,13929)"} true;
    $t67 := $Dereference($t15)->$total_minted;

    // $t68 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:325:71+1
    $t68 := 1;
    assume $IsValid'u64'($t68);

    // $t69 := +($t67, $t68) on_abort goto L6 with $t14 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:325:40+32
    call $t69 := $AddU64($t67, $t68);
    if ($abort_flag) {
        assume {:print "$at(2,13901,13933)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(104,18):", $t14} $t14 == $t14;
        goto L6;
    }

    // $t70 := borrow_field<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection>.total_minted($t15) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:325:9+28
    $t70 := $ChildMutation($t15, 1, $Dereference($t15)->$total_minted);

    // write_ref($t70, $t69) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:325:9+63
    $t70 := $UpdateMutation($t70, $t69);

    // write_back[Reference($t15).total_minted (u64)]($t70) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:325:9+63
    $t15 := $UpdateMutation($t15, $Update'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection'_total_minted($Dereference($t15), $Dereference($t70)));

    // write_back[0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTCollection@]($t15) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:325:9+63
    $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory := $ResourceUpdate($99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTCollection_$memory, $GlobalLocationAddress($t15),
        $Dereference($t15));

    // $t71 := pack 0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMintedEvent($t56, $t19, $t23) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:328:21+105
    assume {:print "$at(2,13978,14083)"} true;
    $t71 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMintedEvent($t56, $t19, $t23);

    // opaque begin: event::emit<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMintedEvent>($t71) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:328:9+118

    // opaque end: event::emit<0x99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b::retro_nft_generator_da::NFTMintedEvent>($t71) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:328:9+118

    // goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:252:85+3455
    assume {:print "$at(2,10636,14091)"} true;
    goto L5;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:313:9+214
    assume {:print "$at(2,13441,13655)"} true;
L2:

    // goto L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:313:9+214
    assume {:print "$at(2,13441,13655)"} true;
    goto L4;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:257:9+6
    assume {:print "$at(2,10819,10825)"} true;
L0:

    // drop($t15) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:257:9+6
    assume {:print "$at(2,10819,10825)"} true;

    // $t72 := 4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:257:60+19
    $t72 := 4;
    assume $IsValid'u64'($t72);

    // trace_abort($t72) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:257:9+6
    assume {:print "$at(2,10819,10825)"} true;
    assume {:print "$track_abort(104,18):", $t72} $t72 == $t72;

    // $t14 := move($t72) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:257:9+6
    $t14 := $t72;

    // goto L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:257:9+6
    goto L6;

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:333:5+1
    assume {:print "$at(2,14090,14091)"} true;
L5:

    // return () at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:333:5+1
    assume {:print "$at(2,14090,14091)"} true;
    return;

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:333:5+1
L6:

    // abort($t14) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:333:5+1
    assume {:print "$at(2,14090,14091)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::preview_random_nft [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:702:5+103
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_preview_random_nft$verify(_$t0: int) returns ($ret0: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata)
{
    // declare local variables
    var $t1: int;
    var $t2: $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $t3: int;
    var $t0: int;
    var $temp_0'$99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata': $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_NFTMetadata;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:702:5+1
    assume {:print "$at(2,30147,30148)"} true;
    assume $IsValid'u64'($t0);

    // trace_local[seed]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:702:5+1
    assume {:print "$track_local(104,19,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:703:40+1
    assume {:print "$at(2,30242,30243)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := retro_nft_generator_da::generate_random_metadata($t0, $t1) on_abort goto L2 with $t3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:703:9+33
    call $t2 := $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_generate_random_metadata($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,30211,30244)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(104,19):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:703:9+33
    assume {:print "$track_return(104,19,0):", $t2} $t2 == $t2;

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:704:5+1
    assume {:print "$at(2,30249,30250)"} true;
L1:

    // return $t2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:704:5+1
    assume {:print "$at(2,30249,30250)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:704:5+1
L2:

    // abort($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:704:5+1
    assume {:print "$at(2,30249,30250)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::url_encode_for_data_uri [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:610:5+793
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_url_encode_for_data_uri$verify(_$t0: $1_string_String) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: $1_string_String;
    var $t2: int;
    var $t3: int;
    var $t4: $1_string_String;
    var $t5: Vec (int);
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: int;
    var $t11: int;
    var $t12: $1_string_String;
    var $t13: Vec (int);
    var $t14: $1_string_String;
    var $t15: bool;
    var $t16: Vec (int);
    var $t17: $1_string_String;
    var $t18: int;
    var $t19: int;
    var $t20: Vec (int);
    var $t21: $1_string_String;
    var $t22: bool;
    var $t23: Vec (int);
    var $t24: $1_string_String;
    var $t25: Vec (int);
    var $t26: $1_string_String;
    var $t27: bool;
    var $t28: Vec (int);
    var $t29: $1_string_String;
    var $t30: $Mutation ($1_string_String);
    var $t31: $Mutation ($1_string_String);
    var $t32: $Mutation ($1_string_String);
    var $t33: $Mutation ($1_string_String);
    var $t34: $1_string_String;
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:610:5+1
    assume {:print "$at(2,26975,26976)"} true;
    assume $IsValid'$1_string_String'($t0);

    // trace_local[text]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:610:5+1
    assume {:print "$track_local(104,20,0):", $t0} $t0 == $t0;

    // $t5 := [] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:611:36+3
    assume {:print "$at(2,27062,27065)"} true;
    $t5 := $EmptyVec'u8'();
    assume $IsValid'vec'u8''($t5);

    // $t1 := string::utf8($t5) on_abort goto L12 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:611:23+17
    call $t1 := $1_string_utf8($t5);
    if ($abort_flag) {
        assume {:print "$at(2,27049,27066)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,20):", $t6} $t6 == $t6;
        goto L12;
    }

    // trace_local[encoded]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:611:23+17
    assume {:print "$track_local(104,20,1):", $t1} $t1 == $t1;

    // $t7 := string::length($t0) on_abort goto L12 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:612:22+21
    assume {:print "$at(2,27089,27110)"} true;
    call $t7 := $1_string_length($t0);
    if ($abort_flag) {
        assume {:print "$at(2,27089,27110)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,20):", $t6} $t6 == $t6;
        goto L12;
    }

    // trace_local[length]($t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:612:22+21
    assume {:print "$track_local(104,20,2):", $t7} $t7 == $t7;

    // $t8 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:613:17+1
    assume {:print "$at(2,27128,27129)"} true;
    $t8 := 0;
    assume $IsValid'u64'($t8);

    // trace_local[i]($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:613:17+1
    assume {:print "$track_local(104,20,3):", $t8} $t8 == $t8;

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume {:print "$at(2,27155,27156)"} true;
L4:

    // $t1 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume {:print "$at(2,27155,27156)"} true;
    havoc $t1;

    // assume WellFormed($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'$1_string_String'($t1);

    // $t3 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t3;

    // assume WellFormed($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'u64'($t3);

    // $t9 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t9;

    // assume WellFormed($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'bool'($t9);

    // $t10 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t10;

    // assume WellFormed($t10) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'u64'($t10);

    // $t11 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t11;

    // assume WellFormed($t11) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'u64'($t11);

    // $t12 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t12;

    // assume WellFormed($t12) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'$1_string_String'($t12);

    // $t13 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t13;

    // assume WellFormed($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'vec'u8''($t13);

    // $t14 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t14;

    // assume WellFormed($t14) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'$1_string_String'($t14);

    // $t15 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t15;

    // assume WellFormed($t15) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'bool'($t15);

    // $t16 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t16;

    // assume WellFormed($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'vec'u8''($t16);

    // $t17 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t17;

    // assume WellFormed($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'$1_string_String'($t17);

    // $t18 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t18;

    // assume WellFormed($t18) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'u64'($t18);

    // $t19 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t19;

    // assume WellFormed($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'u64'($t19);

    // $t20 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t20;

    // assume WellFormed($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'vec'u8''($t20);

    // $t21 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t21;

    // assume WellFormed($t21) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'$1_string_String'($t21);

    // $t22 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t22;

    // assume WellFormed($t22) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'bool'($t22);

    // $t23 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t23;

    // assume WellFormed($t23) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'vec'u8''($t23);

    // $t24 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t24;

    // assume WellFormed($t24) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'$1_string_String'($t24);

    // $t25 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t25;

    // assume WellFormed($t25) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'vec'u8''($t25);

    // $t26 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t26;

    // assume WellFormed($t26) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'$1_string_String'($t26);

    // $t27 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t27;

    // assume WellFormed($t27) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'bool'($t27);

    // $t28 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t28;

    // assume WellFormed($t28) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'vec'u8''($t28);

    // $t29 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t29;

    // assume WellFormed($t29) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'$1_string_String'($t29);

    // $t30 := havoc[mut_all]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t30;

    // assume WellFormed($t30) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'$1_string_String'($Dereference($t30));

    // $t31 := havoc[mut_all]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t31;

    // assume WellFormed($t31) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'$1_string_String'($Dereference($t31));

    // $t32 := havoc[mut_all]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t32;

    // assume WellFormed($t32) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'$1_string_String'($Dereference($t32));

    // $t33 := havoc[mut_all]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    havoc $t33;

    // assume WellFormed($t33) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume $IsValid'$1_string_String'($Dereference($t33));

    // trace_local[encoded]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume {:print "$info(): enter loop, variable(s) encoded, i havocked and reassigned"} true;
    assume {:print "$track_local(104,20,1):", $t1} $t1 == $t1;

    // trace_local[i]($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume {:print "$track_local(104,20,3):", $t3} $t3 == $t3;

    // assume Not(AbortFlag()) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+1
    assume !$abort_flag;

    // $t9 := <($t3, $t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:16+10
    call $t9 := $Lt($t3, $t7);

    // if ($t9) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:9+588
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:616:49+5
    assume {:print "$at(2,27217,27222)"} true;
L1:

    // $t10 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:616:63+1
    assume {:print "$at(2,27231,27232)"} true;
    $t10 := 1;
    assume $IsValid'u64'($t10);

    // $t11 := +($t3, $t10) on_abort goto L12 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:616:59+5
    call $t11 := $AddU64($t3, $t10);
    if ($abort_flag) {
        assume {:print "$at(2,27227,27232)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,20):", $t6} $t6 == $t6;
        goto L12;
    }

    // $t12 := string::sub_string($t0, $t3, $t11) on_abort goto L12 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:616:30+35
    call $t12 := $1_string_sub_string($t0, $t3, $t11);
    if ($abort_flag) {
        assume {:print "$at(2,27198,27233)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,20):", $t6} $t6 == $t6;
        goto L12;
    }

    // trace_local[char_bytes]($t12) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:616:30+35
    assume {:print "$track_local(104,20,4):", $t12} $t12 == $t12;

    // $t13 := [37] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:617:44+4
    assume {:print "$at(2,27278,27282)"} true;
    $t13 := MakeVec1(37);
    assume $IsValid'vec'u8''($t13);

    // $t14 := string::utf8($t13) on_abort goto L12 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:617:31+18
    call $t14 := $1_string_utf8($t13);
    if ($abort_flag) {
        assume {:print "$at(2,27265,27283)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,20):", $t6} $t6 == $t6;
        goto L12;
    }

    // $t15 := ==($t12, $t14) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:617:17+32
    $t15 := $IsEqual'$1_string_String'($t12, $t14);

    // if ($t15) goto L3 else goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:617:13+455
    if ($t15) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:618:32+12
    assume {:print "$at(2,27318,27330)"} true;
L3:

    // $t30 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:618:32+12
    assume {:print "$at(2,27318,27330)"} true;
    $t30 := $Mutation($Local(1), EmptyVec(), $t1);

    // $t16 := [37, 50, 53] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:618:59+6
    $t16 := MakeVec3(37, 50, 53);
    assume $IsValid'vec'u8''($t16);

    // $t17 := string::utf8($t16) on_abort goto L12 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:618:46+20
    call $t17 := $1_string_utf8($t16);
    if ($abort_flag) {
        assume {:print "$at(2,27332,27352)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,20):", $t6} $t6 == $t6;
        goto L12;
    }

    // string::append($t30, $t17) on_abort goto L12 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:618:17+50
    call $t30 := $1_string_append($t30, $t17);
    if ($abort_flag) {
        assume {:print "$at(2,27303,27353)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,20):", $t6} $t6 == $t6;
        goto L12;
    }

    // write_back[LocalRoot($t1)@]($t30) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:618:17+50
    $t1 := $Dereference($t30);

    // trace_local[encoded]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:618:17+50
    assume {:print "$track_local(104,20,1):", $t1} $t1 == $t1;

    // label L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:626:17+1
    assume {:print "$at(2,27720,27721)"} true;
L7:

    // $t18 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:626:21+1
    assume {:print "$at(2,27724,27725)"} true;
    $t18 := 1;
    assume $IsValid'u64'($t18);

    // $t19 := +($t3, $t18) on_abort goto L12 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:626:17+5
    call $t19 := $AddU64($t3, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,27720,27725)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,20):", $t6} $t6 == $t6;
        goto L12;
    }

    // trace_local[i]($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:626:13+9
    assume {:print "$track_local(104,20,3):", $t19} $t19 == $t19;

    // goto L10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:615:9+588
    assume {:print "$at(2,27148,27736)"} true;
    goto L10;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:619:24+10
    assume {:print "$at(2,27378,27388)"} true;
L2:

    // $t20 := [34] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:619:51+5
    assume {:print "$at(2,27405,27410)"} true;
    $t20 := MakeVec1(34);
    assume $IsValid'vec'u8''($t20);

    // $t21 := string::utf8($t20) on_abort goto L12 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:619:38+19
    call $t21 := $1_string_utf8($t20);
    if ($abort_flag) {
        assume {:print "$at(2,27392,27411)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,20):", $t6} $t6 == $t6;
        goto L12;
    }

    // $t22 := ==($t12, $t21) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:619:24+33
    $t22 := $IsEqual'$1_string_String'($t12, $t21);

    // if ($t22) goto L6 else goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:619:20+328
    if ($t22) { goto L6; } else { goto L5; }

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:620:32+12
    assume {:print "$at(2,27446,27458)"} true;
L6:

    // $t31 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:620:32+12
    assume {:print "$at(2,27446,27458)"} true;
    $t31 := $Mutation($Local(1), EmptyVec(), $t1);

    // $t23 := [37, 50, 50] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:620:59+6
    $t23 := MakeVec3(37, 50, 50);
    assume $IsValid'vec'u8''($t23);

    // $t24 := string::utf8($t23) on_abort goto L12 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:620:46+20
    call $t24 := $1_string_utf8($t23);
    if ($abort_flag) {
        assume {:print "$at(2,27460,27480)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,20):", $t6} $t6 == $t6;
        goto L12;
    }

    // string::append($t31, $t24) on_abort goto L12 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:620:17+50
    call $t31 := $1_string_append($t31, $t24);
    if ($abort_flag) {
        assume {:print "$at(2,27431,27481)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,20):", $t6} $t6 == $t6;
        goto L12;
    }

    // write_back[LocalRoot($t1)@]($t31) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:620:17+50
    $t1 := $Dereference($t31);

    // trace_local[encoded]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:620:17+50
    assume {:print "$track_local(104,20,1):", $t1} $t1 == $t1;

    // goto L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:619:59+83
    assume {:print "$at(2,27413,27496)"} true;
    goto L7;

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:621:24+10
    assume {:print "$at(2,27506,27516)"} true;
L5:

    // $t25 := [32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:621:51+4
    assume {:print "$at(2,27533,27537)"} true;
    $t25 := MakeVec1(32);
    assume $IsValid'vec'u8''($t25);

    // $t26 := string::utf8($t25) on_abort goto L12 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:621:38+18
    call $t26 := $1_string_utf8($t25);
    if ($abort_flag) {
        assume {:print "$at(2,27520,27538)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,20):", $t6} $t6 == $t6;
        goto L12;
    }

    // $t27 := ==($t12, $t26) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:621:24+32
    $t27 := $IsEqual'$1_string_String'($t12, $t26);

    // if ($t27) goto L9 else goto L8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:621:20+200
    if ($t27) { goto L9; } else { goto L8; }

    // label L9 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:622:32+12
    assume {:print "$at(2,27573,27585)"} true;
L9:

    // $t32 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:622:32+12
    assume {:print "$at(2,27573,27585)"} true;
    $t32 := $Mutation($Local(1), EmptyVec(), $t1);

    // $t28 := [37, 50, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:622:59+6
    $t28 := MakeVec3(37, 50, 48);
    assume $IsValid'vec'u8''($t28);

    // $t29 := string::utf8($t28) on_abort goto L12 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:622:46+20
    call $t29 := $1_string_utf8($t28);
    if ($abort_flag) {
        assume {:print "$at(2,27587,27607)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,20):", $t6} $t6 == $t6;
        goto L12;
    }

    // string::append($t32, $t29) on_abort goto L12 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:622:17+50
    call $t32 := $1_string_append($t32, $t29);
    if ($abort_flag) {
        assume {:print "$at(2,27558,27608)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,20):", $t6} $t6 == $t6;
        goto L12;
    }

    // write_back[LocalRoot($t1)@]($t32) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:622:17+50
    $t1 := $Dereference($t32);

    // trace_local[encoded]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:622:17+50
    assume {:print "$track_local(104,20,1):", $t1} $t1 == $t1;

    // goto L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:621:58+83
    assume {:print "$at(2,27540,27623)"} true;
    goto L7;

    // label L8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:624:32+12
    assume {:print "$at(2,27662,27674)"} true;
L8:

    // $t33 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:624:32+12
    assume {:print "$at(2,27662,27674)"} true;
    $t33 := $Mutation($Local(1), EmptyVec(), $t1);

    // string::append($t33, $t12) on_abort goto L12 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:624:17+40
    call $t33 := $1_string_append($t33, $t12);
    if ($abort_flag) {
        assume {:print "$at(2,27647,27687)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,20):", $t6} $t6 == $t6;
        goto L12;
    }

    // write_back[LocalRoot($t1)@]($t33) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:624:17+40
    $t1 := $Dereference($t33);

    // trace_local[encoded]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:624:17+40
    assume {:print "$track_local(104,20,1):", $t1} $t1 == $t1;

    // goto L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:624:17+40
    goto L7;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:629:9+7
    assume {:print "$at(2,27755,27762)"} true;
L0:

    // $t34 := move($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:629:9+7
    assume {:print "$at(2,27755,27762)"} true;
    $t34 := $t1;

    // trace_return[0]($t34) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:610:55+743
    assume {:print "$at(2,27025,27768)"} true;
    assume {:print "$track_return(104,20,0):", $t34} $t34 == $t34;

    // goto L11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:610:55+743
    goto L11;

    // label L10 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:629:9+7
    // Loop invariant checking block for the loop started with header: L4
    assume {:print "$at(2,27755,27762)"} true;
L10:

    // stop() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:629:9+7
    assume {:print "$at(2,27755,27762)"} true;
    assume false;
    return;

    // label L11 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:630:5+1
    assume {:print "$at(2,27767,27768)"} true;
L11:

    // return $t34 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:630:5+1
    assume {:print "$at(2,27767,27768)"} true;
    $ret0 := $t34;
    return;

    // label L12 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:630:5+1
L12:

    // abort($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:630:5+1
    assume {:print "$at(2,27767,27768)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::url_encode_spaces [baseline] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:570:5+532
procedure {:inline 1} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_url_encode_spaces(_$t0: $1_string_String) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: $1_string_String;
    var $t2: int;
    var $t3: int;
    var $t4: $1_string_String;
    var $t5: Vec (int);
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: int;
    var $t11: int;
    var $t12: $1_string_String;
    var $t13: Vec (int);
    var $t14: $1_string_String;
    var $t15: bool;
    var $t16: Vec (int);
    var $t17: $1_string_String;
    var $t18: int;
    var $t19: int;
    var $t20: $Mutation ($1_string_String);
    var $t21: $Mutation ($1_string_String);
    var $t22: $1_string_String;
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[text]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:570:5+1
    assume {:print "$at(2,25398,25399)"} true;
    assume {:print "$track_local(104,21,0):", $t0} $t0 == $t0;

    // $t5 := [] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:571:36+3
    assume {:print "$at(2,25479,25482)"} true;
    $t5 := $EmptyVec'u8'();
    assume $IsValid'vec'u8''($t5);

    // $t1 := string::utf8($t5) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:571:23+17
    call $t1 := $1_string_utf8($t5);
    if ($abort_flag) {
        assume {:print "$at(2,25466,25483)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // trace_local[encoded]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:571:23+17
    assume {:print "$track_local(104,21,1):", $t1} $t1 == $t1;

    // $t7 := string::length($t0) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:572:22+21
    assume {:print "$at(2,25506,25527)"} true;
    call $t7 := $1_string_length($t0);
    if ($abort_flag) {
        assume {:print "$at(2,25506,25527)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // trace_local[length]($t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:572:22+21
    assume {:print "$track_local(104,21,2):", $t7} $t7 == $t7;

    // $t8 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:573:17+1
    assume {:print "$at(2,25545,25546)"} true;
    $t8 := 0;
    assume $IsValid'u64'($t8);

    // trace_local[i]($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:573:17+1
    assume {:print "$track_local(104,21,3):", $t8} $t8 == $t8;

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume {:print "$at(2,25572,25573)"} true;
L4:

    // $t1 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume {:print "$at(2,25572,25573)"} true;
    havoc $t1;

    // assume WellFormed($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'$1_string_String'($t1);

    // $t3 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t3;

    // assume WellFormed($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'u64'($t3);

    // $t9 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t9;

    // assume WellFormed($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'bool'($t9);

    // $t10 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t10;

    // assume WellFormed($t10) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'u64'($t10);

    // $t11 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t11;

    // assume WellFormed($t11) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'u64'($t11);

    // $t12 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t12;

    // assume WellFormed($t12) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'$1_string_String'($t12);

    // $t13 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t13;

    // assume WellFormed($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'vec'u8''($t13);

    // $t14 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t14;

    // assume WellFormed($t14) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'$1_string_String'($t14);

    // $t15 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t15;

    // assume WellFormed($t15) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'bool'($t15);

    // $t16 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t16;

    // assume WellFormed($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'vec'u8''($t16);

    // $t17 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t17;

    // assume WellFormed($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'$1_string_String'($t17);

    // $t18 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t18;

    // assume WellFormed($t18) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'u64'($t18);

    // $t19 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t19;

    // assume WellFormed($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'u64'($t19);

    // $t20 := havoc[mut_all]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t20;

    // assume WellFormed($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'$1_string_String'($Dereference($t20));

    // $t21 := havoc[mut_all]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t21;

    // assume WellFormed($t21) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'$1_string_String'($Dereference($t21));

    // trace_local[encoded]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume {:print "$info(): enter loop, variable(s) encoded, i havocked and reassigned"} true;
    assume {:print "$track_local(104,21,1):", $t1} $t1 == $t1;

    // trace_local[i]($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume {:print "$track_local(104,21,3):", $t3} $t3 == $t3;

    // assume Not(AbortFlag()) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume !$abort_flag;

    // $t9 := <($t3, $t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+10
    call $t9 := $Lt($t3, $t7);

    // if ($t9) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:9+333
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:576:49+5
    assume {:print "$at(2,25634,25639)"} true;
L1:

    // $t10 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:576:63+1
    assume {:print "$at(2,25648,25649)"} true;
    $t10 := 1;
    assume $IsValid'u64'($t10);

    // $t11 := +($t3, $t10) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:576:59+5
    call $t11 := $AddU64($t3, $t10);
    if ($abort_flag) {
        assume {:print "$at(2,25644,25649)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // $t12 := string::sub_string($t0, $t3, $t11) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:576:30+35
    call $t12 := $1_string_sub_string($t0, $t3, $t11);
    if ($abort_flag) {
        assume {:print "$at(2,25615,25650)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // trace_local[char_bytes]($t12) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:576:30+35
    assume {:print "$track_local(104,21,4):", $t12} $t12 == $t12;

    // $t13 := [32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:577:44+4
    assume {:print "$at(2,25695,25699)"} true;
    $t13 := MakeVec1(32);
    assume $IsValid'vec'u8''($t13);

    // $t14 := string::utf8($t13) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:577:31+18
    call $t14 := $1_string_utf8($t13);
    if ($abort_flag) {
        assume {:print "$at(2,25682,25700)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // $t15 := ==($t12, $t14) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:577:17+32
    $t15 := $IsEqual'$1_string_String'($t12, $t14);

    // if ($t15) goto L3 else goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:577:13+200
    if ($t15) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:578:32+12
    assume {:print "$at(2,25735,25747)"} true;
L3:

    // $t20 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:578:32+12
    assume {:print "$at(2,25735,25747)"} true;
    $t20 := $Mutation($Local(1), EmptyVec(), $t1);

    // $t16 := [37, 50, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:578:59+6
    $t16 := MakeVec3(37, 50, 48);
    assume $IsValid'vec'u8''($t16);

    // $t17 := string::utf8($t16) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:578:46+20
    call $t17 := $1_string_utf8($t16);
    if ($abort_flag) {
        assume {:print "$at(2,25749,25769)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // string::append($t20, $t17) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:578:17+50
    call $t20 := $1_string_append($t20, $t17);
    if ($abort_flag) {
        assume {:print "$at(2,25720,25770)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // write_back[LocalRoot($t1)@]($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:578:17+50
    $t1 := $Dereference($t20);

    // trace_local[encoded]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:578:17+50
    assume {:print "$track_local(104,21,1):", $t1} $t1 == $t1;

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:582:17+1
    assume {:print "$at(2,25882,25883)"} true;
L5:

    // $t18 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:582:21+1
    assume {:print "$at(2,25886,25887)"} true;
    $t18 := 1;
    assume $IsValid'u64'($t18);

    // $t19 := +($t3, $t18) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:582:17+5
    call $t19 := $AddU64($t3, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,25882,25887)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // trace_local[i]($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:582:13+9
    assume {:print "$track_local(104,21,3):", $t19} $t19 == $t19;

    // goto L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:9+333
    assume {:print "$at(2,25565,25898)"} true;
    goto L6;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:580:32+12
    assume {:print "$at(2,25824,25836)"} true;
L2:

    // $t21 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:580:32+12
    assume {:print "$at(2,25824,25836)"} true;
    $t21 := $Mutation($Local(1), EmptyVec(), $t1);

    // string::append($t21, $t12) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:580:17+40
    call $t21 := $1_string_append($t21, $t12);
    if ($abort_flag) {
        assume {:print "$at(2,25809,25849)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // write_back[LocalRoot($t1)@]($t21) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:580:17+40
    $t1 := $Dereference($t21);

    // trace_local[encoded]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:580:17+40
    assume {:print "$track_local(104,21,1):", $t1} $t1 == $t1;

    // goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:580:17+40
    goto L5;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:585:9+7
    assume {:print "$at(2,25917,25924)"} true;
L0:

    // $t22 := move($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:585:9+7
    assume {:print "$at(2,25917,25924)"} true;
    $t22 := $t1;

    // trace_return[0]($t22) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:570:49+488
    assume {:print "$at(2,25442,25930)"} true;
    assume {:print "$track_return(104,21,0):", $t22} $t22 == $t22;

    // goto L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:570:49+488
    goto L7;

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:585:9+7
    // Loop invariant checking block for the loop started with header: L4
    assume {:print "$at(2,25917,25924)"} true;
L6:

    // stop() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:585:9+7
    assume {:print "$at(2,25917,25924)"} true;
    assume false;
    return;

    // label L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:586:5+1
    assume {:print "$at(2,25929,25930)"} true;
L7:

    // return $t22 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:586:5+1
    assume {:print "$at(2,25929,25930)"} true;
    $ret0 := $t22;
    return;

    // label L8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:586:5+1
L8:

    // abort($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:586:5+1
    assume {:print "$at(2,25929,25930)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun retro_nft_generator_da::url_encode_spaces [verification] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:570:5+532
procedure {:timeLimit 40} $99d43f357f7993b7021e53c6a7cf9d74a81c11924818a0230ed7625fbcddb2b_retro_nft_generator_da_url_encode_spaces$verify(_$t0: $1_string_String) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: $1_string_String;
    var $t2: int;
    var $t3: int;
    var $t4: $1_string_String;
    var $t5: Vec (int);
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: int;
    var $t11: int;
    var $t12: $1_string_String;
    var $t13: Vec (int);
    var $t14: $1_string_String;
    var $t15: bool;
    var $t16: Vec (int);
    var $t17: $1_string_String;
    var $t18: int;
    var $t19: int;
    var $t20: $Mutation ($1_string_String);
    var $t21: $Mutation ($1_string_String);
    var $t22: $1_string_String;
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:570:5+1
    assume {:print "$at(2,25398,25399)"} true;
    assume $IsValid'$1_string_String'($t0);

    // trace_local[text]($t0) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:570:5+1
    assume {:print "$track_local(104,21,0):", $t0} $t0 == $t0;

    // $t5 := [] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:571:36+3
    assume {:print "$at(2,25479,25482)"} true;
    $t5 := $EmptyVec'u8'();
    assume $IsValid'vec'u8''($t5);

    // $t1 := string::utf8($t5) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:571:23+17
    call $t1 := $1_string_utf8($t5);
    if ($abort_flag) {
        assume {:print "$at(2,25466,25483)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // trace_local[encoded]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:571:23+17
    assume {:print "$track_local(104,21,1):", $t1} $t1 == $t1;

    // $t7 := string::length($t0) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:572:22+21
    assume {:print "$at(2,25506,25527)"} true;
    call $t7 := $1_string_length($t0);
    if ($abort_flag) {
        assume {:print "$at(2,25506,25527)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // trace_local[length]($t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:572:22+21
    assume {:print "$track_local(104,21,2):", $t7} $t7 == $t7;

    // $t8 := 0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:573:17+1
    assume {:print "$at(2,25545,25546)"} true;
    $t8 := 0;
    assume $IsValid'u64'($t8);

    // trace_local[i]($t8) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:573:17+1
    assume {:print "$track_local(104,21,3):", $t8} $t8 == $t8;

    // label L4 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume {:print "$at(2,25572,25573)"} true;
L4:

    // $t1 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume {:print "$at(2,25572,25573)"} true;
    havoc $t1;

    // assume WellFormed($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'$1_string_String'($t1);

    // $t3 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t3;

    // assume WellFormed($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'u64'($t3);

    // $t9 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t9;

    // assume WellFormed($t9) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'bool'($t9);

    // $t10 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t10;

    // assume WellFormed($t10) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'u64'($t10);

    // $t11 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t11;

    // assume WellFormed($t11) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'u64'($t11);

    // $t12 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t12;

    // assume WellFormed($t12) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'$1_string_String'($t12);

    // $t13 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t13;

    // assume WellFormed($t13) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'vec'u8''($t13);

    // $t14 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t14;

    // assume WellFormed($t14) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'$1_string_String'($t14);

    // $t15 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t15;

    // assume WellFormed($t15) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'bool'($t15);

    // $t16 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t16;

    // assume WellFormed($t16) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'vec'u8''($t16);

    // $t17 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t17;

    // assume WellFormed($t17) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'$1_string_String'($t17);

    // $t18 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t18;

    // assume WellFormed($t18) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'u64'($t18);

    // $t19 := havoc[val]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t19;

    // assume WellFormed($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'u64'($t19);

    // $t20 := havoc[mut_all]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t20;

    // assume WellFormed($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'$1_string_String'($Dereference($t20));

    // $t21 := havoc[mut_all]() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    havoc $t21;

    // assume WellFormed($t21) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume $IsValid'$1_string_String'($Dereference($t21));

    // trace_local[encoded]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume {:print "$info(): enter loop, variable(s) encoded, i havocked and reassigned"} true;
    assume {:print "$track_local(104,21,1):", $t1} $t1 == $t1;

    // trace_local[i]($t3) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume {:print "$track_local(104,21,3):", $t3} $t3 == $t3;

    // assume Not(AbortFlag()) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+1
    assume !$abort_flag;

    // $t9 := <($t3, $t7) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:16+10
    call $t9 := $Lt($t3, $t7);

    // if ($t9) goto L1 else goto L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:9+333
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:576:49+5
    assume {:print "$at(2,25634,25639)"} true;
L1:

    // $t10 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:576:63+1
    assume {:print "$at(2,25648,25649)"} true;
    $t10 := 1;
    assume $IsValid'u64'($t10);

    // $t11 := +($t3, $t10) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:576:59+5
    call $t11 := $AddU64($t3, $t10);
    if ($abort_flag) {
        assume {:print "$at(2,25644,25649)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // $t12 := string::sub_string($t0, $t3, $t11) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:576:30+35
    call $t12 := $1_string_sub_string($t0, $t3, $t11);
    if ($abort_flag) {
        assume {:print "$at(2,25615,25650)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // trace_local[char_bytes]($t12) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:576:30+35
    assume {:print "$track_local(104,21,4):", $t12} $t12 == $t12;

    // $t13 := [32] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:577:44+4
    assume {:print "$at(2,25695,25699)"} true;
    $t13 := MakeVec1(32);
    assume $IsValid'vec'u8''($t13);

    // $t14 := string::utf8($t13) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:577:31+18
    call $t14 := $1_string_utf8($t13);
    if ($abort_flag) {
        assume {:print "$at(2,25682,25700)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // $t15 := ==($t12, $t14) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:577:17+32
    $t15 := $IsEqual'$1_string_String'($t12, $t14);

    // if ($t15) goto L3 else goto L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:577:13+200
    if ($t15) { goto L3; } else { goto L2; }

    // label L3 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:578:32+12
    assume {:print "$at(2,25735,25747)"} true;
L3:

    // $t20 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:578:32+12
    assume {:print "$at(2,25735,25747)"} true;
    $t20 := $Mutation($Local(1), EmptyVec(), $t1);

    // $t16 := [37, 50, 48] at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:578:59+6
    $t16 := MakeVec3(37, 50, 48);
    assume $IsValid'vec'u8''($t16);

    // $t17 := string::utf8($t16) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:578:46+20
    call $t17 := $1_string_utf8($t16);
    if ($abort_flag) {
        assume {:print "$at(2,25749,25769)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // string::append($t20, $t17) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:578:17+50
    call $t20 := $1_string_append($t20, $t17);
    if ($abort_flag) {
        assume {:print "$at(2,25720,25770)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // write_back[LocalRoot($t1)@]($t20) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:578:17+50
    $t1 := $Dereference($t20);

    // trace_local[encoded]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:578:17+50
    assume {:print "$track_local(104,21,1):", $t1} $t1 == $t1;

    // label L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:582:17+1
    assume {:print "$at(2,25882,25883)"} true;
L5:

    // $t18 := 1 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:582:21+1
    assume {:print "$at(2,25886,25887)"} true;
    $t18 := 1;
    assume $IsValid'u64'($t18);

    // $t19 := +($t3, $t18) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:582:17+5
    call $t19 := $AddU64($t3, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,25882,25887)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // trace_local[i]($t19) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:582:13+9
    assume {:print "$track_local(104,21,3):", $t19} $t19 == $t19;

    // goto L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:575:9+333
    assume {:print "$at(2,25565,25898)"} true;
    goto L6;

    // label L2 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:580:32+12
    assume {:print "$at(2,25824,25836)"} true;
L2:

    // $t21 := borrow_local($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:580:32+12
    assume {:print "$at(2,25824,25836)"} true;
    $t21 := $Mutation($Local(1), EmptyVec(), $t1);

    // string::append($t21, $t12) on_abort goto L8 with $t6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:580:17+40
    call $t21 := $1_string_append($t21, $t12);
    if ($abort_flag) {
        assume {:print "$at(2,25809,25849)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(104,21):", $t6} $t6 == $t6;
        goto L8;
    }

    // write_back[LocalRoot($t1)@]($t21) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:580:17+40
    $t1 := $Dereference($t21);

    // trace_local[encoded]($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:580:17+40
    assume {:print "$track_local(104,21,1):", $t1} $t1 == $t1;

    // goto L5 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:580:17+40
    goto L5;

    // label L0 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:585:9+7
    assume {:print "$at(2,25917,25924)"} true;
L0:

    // $t22 := move($t1) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:585:9+7
    assume {:print "$at(2,25917,25924)"} true;
    $t22 := $t1;

    // trace_return[0]($t22) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:570:49+488
    assume {:print "$at(2,25442,25930)"} true;
    assume {:print "$track_return(104,21,0):", $t22} $t22 == $t22;

    // goto L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:570:49+488
    goto L7;

    // label L6 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:585:9+7
    // Loop invariant checking block for the loop started with header: L4
    assume {:print "$at(2,25917,25924)"} true;
L6:

    // stop() at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:585:9+7
    assume {:print "$at(2,25917,25924)"} true;
    assume false;
    return;

    // label L7 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:586:5+1
    assume {:print "$at(2,25929,25930)"} true;
L7:

    // return $t22 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:586:5+1
    assume {:print "$at(2,25929,25930)"} true;
    $ret0 := $t22;
    return;

    // label L8 at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:586:5+1
L8:

    // abort($t6) at /Users/willjaw/projects/aptos_user_interview/nft_generator/contract/sources/retro_nft_da.move:586:5+1
    assume {:print "$at(2,25929,25930)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}
